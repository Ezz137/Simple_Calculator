
Project_4_Small_Cal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002a4e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000126  00800060  00002a4e  00002ac2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00002be8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000032b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001e0  00000000  00000000  00003340  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002144  00000000  00000000  00003520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009b2  00000000  00000000  00005664  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000db3  00000000  00000000  00006016  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003a0  00000000  00000000  00006dcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c7  00000000  00000000  0000716c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003570  00000000  00000000  00007633  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000aba3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e4       	ldi	r30, 0x4E	; 78
      68:	fa e2       	ldi	r31, 0x2A	; 42
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 38       	cpi	r26, 0x86	; 134
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a6 e8       	ldi	r26, 0x86	; 134
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 38       	cpi	r26, 0x86	; 134
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <main>
      8a:	0c 94 25 15 	jmp	0x2a4a	; 0x2a4a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Buz_vInit>:
 */ 
#include "DIO.h"


void Buz_vInit(volatile unsigned char PORT,volatile unsigned char pin)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	00 d0       	rcall	.+0      	; 0x98 <Buz_vInit+0x6>
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
      9c:	89 83       	std	Y+1, r24	; 0x01
      9e:	6a 83       	std	Y+2, r22	; 0x02
	DIO_vSet_pin(PORT,pin,1);
      a0:	89 81       	ldd	r24, Y+1	; 0x01
      a2:	6a 81       	ldd	r22, Y+2	; 0x02
      a4:	41 e0       	ldi	r20, 0x01	; 1
      a6:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
}
      aa:	0f 90       	pop	r0
      ac:	0f 90       	pop	r0
      ae:	df 91       	pop	r29
      b0:	cf 91       	pop	r28
      b2:	08 95       	ret

000000b4 <Buz_vTurnON>:

void Buz_vTurnON(volatile unsigned char PORT,volatile unsigned char pin)
{
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	00 d0       	rcall	.+0      	; 0xba <Buz_vTurnON+0x6>
      ba:	cd b7       	in	r28, 0x3d	; 61
      bc:	de b7       	in	r29, 0x3e	; 62
      be:	89 83       	std	Y+1, r24	; 0x01
      c0:	6a 83       	std	Y+2, r22	; 0x02
	DIO_vWrite_pin(PORT,pin,1);
      c2:	89 81       	ldd	r24, Y+1	; 0x01
      c4:	6a 81       	ldd	r22, Y+2	; 0x02
      c6:	41 e0       	ldi	r20, 0x01	; 1
      c8:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
}
      cc:	0f 90       	pop	r0
      ce:	0f 90       	pop	r0
      d0:	df 91       	pop	r29
      d2:	cf 91       	pop	r28
      d4:	08 95       	ret

000000d6 <Buz_vTurnOFF>:

void Buz_vTurnOFF(volatile unsigned char PORT,volatile unsigned char pin)
{
      d6:	cf 93       	push	r28
      d8:	df 93       	push	r29
      da:	00 d0       	rcall	.+0      	; 0xdc <Buz_vTurnOFF+0x6>
      dc:	cd b7       	in	r28, 0x3d	; 61
      de:	de b7       	in	r29, 0x3e	; 62
      e0:	89 83       	std	Y+1, r24	; 0x01
      e2:	6a 83       	std	Y+2, r22	; 0x02
	DIO_vWrite_pin(PORT,pin,0);
      e4:	89 81       	ldd	r24, Y+1	; 0x01
      e6:	6a 81       	ldd	r22, Y+2	; 0x02
      e8:	40 e0       	ldi	r20, 0x00	; 0
      ea:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
}
      ee:	0f 90       	pop	r0
      f0:	0f 90       	pop	r0
      f2:	df 91       	pop	r29
      f4:	cf 91       	pop	r28
      f6:	08 95       	ret

000000f8 <Buz_vTog>:

void Buz_vTog(volatile unsigned char PORT,volatile unsigned char pin)
{
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
      fc:	00 d0       	rcall	.+0      	; 0xfe <Buz_vTog+0x6>
      fe:	cd b7       	in	r28, 0x3d	; 61
     100:	de b7       	in	r29, 0x3e	; 62
     102:	89 83       	std	Y+1, r24	; 0x01
     104:	6a 83       	std	Y+2, r22	; 0x02
	DIO_vTog_pin(PORT,pin);
     106:	89 81       	ldd	r24, Y+1	; 0x01
     108:	6a 81       	ldd	r22, Y+2	; 0x02
     10a:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <DIO_vTog_pin>
}
     10e:	0f 90       	pop	r0
     110:	0f 90       	pop	r0
     112:	df 91       	pop	r29
     114:	cf 91       	pop	r28
     116:	08 95       	ret

00000118 <Buz_uRead>:

unsigned char Buz_uRead(volatile unsigned char PORT,volatile unsigned char pin)
{
     118:	cf 93       	push	r28
     11a:	df 93       	push	r29
     11c:	00 d0       	rcall	.+0      	; 0x11e <Buz_uRead+0x6>
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
     122:	89 83       	std	Y+1, r24	; 0x01
     124:	6a 83       	std	Y+2, r22	; 0x02
	return DIO_uRead_pin(PORT,pin);
     126:	89 81       	ldd	r24, Y+1	; 0x01
     128:	6a 81       	ldd	r22, Y+2	; 0x02
     12a:	0e 94 95 02 	call	0x52a	; 0x52a <DIO_uRead_pin>
     12e:	0f 90       	pop	r0
     130:	0f 90       	pop	r0
     132:	df 91       	pop	r29
     134:	cf 91       	pop	r28
     136:	08 95       	ret

00000138 <Num_uCreate>:
#include "LCD.h"
#include "Keypad.h"
#include "avr/io.h"

void Num_uCreate (unsigned char arr[],unsigned char counter,unsigned long *Num)
{
     138:	cf 93       	push	r28
     13a:	df 93       	push	r29
     13c:	fc 01       	movw	r30, r24
     13e:	da 01       	movw	r26, r20
	if (counter==1)
     140:	61 30       	cpi	r22, 0x01	; 1
     142:	51 f4       	brne	.+20     	; 0x158 <Num_uCreate+0x20>
	{
		*Num=arr[0];
     144:	40 81       	ld	r20, Z
     146:	50 e0       	ldi	r21, 0x00	; 0
     148:	60 e0       	ldi	r22, 0x00	; 0
     14a:	70 e0       	ldi	r23, 0x00	; 0
     14c:	4d 93       	st	X+, r20
     14e:	5d 93       	st	X+, r21
     150:	6d 93       	st	X+, r22
     152:	7c 93       	st	X, r23
     154:	13 97       	sbiw	r26, 0x03	; 3
     156:	ba c0       	rjmp	.+372    	; 0x2cc <Num_uCreate+0x194>
	}
	else if (counter==2)
     158:	62 30       	cpi	r22, 0x02	; 2
     15a:	c9 f4       	brne	.+50     	; 0x18e <Num_uCreate+0x56>
	{
		*Num=arr[0]*10+arr[1];
     15c:	80 81       	ld	r24, Z
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	88 0f       	add	r24, r24
     162:	99 1f       	adc	r25, r25
     164:	9c 01       	movw	r18, r24
     166:	22 0f       	add	r18, r18
     168:	33 1f       	adc	r19, r19
     16a:	22 0f       	add	r18, r18
     16c:	33 1f       	adc	r19, r19
     16e:	82 0f       	add	r24, r18
     170:	93 1f       	adc	r25, r19
     172:	21 81       	ldd	r18, Z+1	; 0x01
     174:	82 0f       	add	r24, r18
     176:	91 1d       	adc	r25, r1
     178:	ac 01       	movw	r20, r24
     17a:	66 27       	eor	r22, r22
     17c:	57 fd       	sbrc	r21, 7
     17e:	60 95       	com	r22
     180:	76 2f       	mov	r23, r22
     182:	4d 93       	st	X+, r20
     184:	5d 93       	st	X+, r21
     186:	6d 93       	st	X+, r22
     188:	7c 93       	st	X, r23
     18a:	13 97       	sbiw	r26, 0x03	; 3
     18c:	9f c0       	rjmp	.+318    	; 0x2cc <Num_uCreate+0x194>
	}
	else if (counter==3)
     18e:	63 30       	cpi	r22, 0x03	; 3
     190:	29 f5       	brne	.+74     	; 0x1dc <Num_uCreate+0xa4>
	{
		*Num=arr[0]*100+arr[1]*10+arr[2];
     192:	80 81       	ld	r24, Z
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	24 e6       	ldi	r18, 0x64	; 100
     198:	30 e0       	ldi	r19, 0x00	; 0
     19a:	82 9f       	mul	r24, r18
     19c:	a0 01       	movw	r20, r0
     19e:	83 9f       	mul	r24, r19
     1a0:	50 0d       	add	r21, r0
     1a2:	92 9f       	mul	r25, r18
     1a4:	50 0d       	add	r21, r0
     1a6:	11 24       	eor	r1, r1
     1a8:	81 81       	ldd	r24, Z+1	; 0x01
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	88 0f       	add	r24, r24
     1ae:	99 1f       	adc	r25, r25
     1b0:	9c 01       	movw	r18, r24
     1b2:	22 0f       	add	r18, r18
     1b4:	33 1f       	adc	r19, r19
     1b6:	22 0f       	add	r18, r18
     1b8:	33 1f       	adc	r19, r19
     1ba:	82 0f       	add	r24, r18
     1bc:	93 1f       	adc	r25, r19
     1be:	48 0f       	add	r20, r24
     1c0:	59 1f       	adc	r21, r25
     1c2:	82 81       	ldd	r24, Z+2	; 0x02
     1c4:	48 0f       	add	r20, r24
     1c6:	51 1d       	adc	r21, r1
     1c8:	66 27       	eor	r22, r22
     1ca:	57 fd       	sbrc	r21, 7
     1cc:	60 95       	com	r22
     1ce:	76 2f       	mov	r23, r22
     1d0:	4d 93       	st	X+, r20
     1d2:	5d 93       	st	X+, r21
     1d4:	6d 93       	st	X+, r22
     1d6:	7c 93       	st	X, r23
     1d8:	13 97       	sbiw	r26, 0x03	; 3
     1da:	78 c0       	rjmp	.+240    	; 0x2cc <Num_uCreate+0x194>
	}
	else if (counter==4)
     1dc:	64 30       	cpi	r22, 0x04	; 4
     1de:	91 f5       	brne	.+100    	; 0x244 <Num_uCreate+0x10c>
	{
		*Num=arr[0]*1000+arr[1]*100+arr[2]*10+arr[3];
     1e0:	80 81       	ld	r24, Z
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	28 ee       	ldi	r18, 0xE8	; 232
     1e6:	33 e0       	ldi	r19, 0x03	; 3
     1e8:	82 9f       	mul	r24, r18
     1ea:	b0 01       	movw	r22, r0
     1ec:	83 9f       	mul	r24, r19
     1ee:	70 0d       	add	r23, r0
     1f0:	92 9f       	mul	r25, r18
     1f2:	70 0d       	add	r23, r0
     1f4:	11 24       	eor	r1, r1
     1f6:	81 81       	ldd	r24, Z+1	; 0x01
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	24 e6       	ldi	r18, 0x64	; 100
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	82 9f       	mul	r24, r18
     200:	a0 01       	movw	r20, r0
     202:	83 9f       	mul	r24, r19
     204:	50 0d       	add	r21, r0
     206:	92 9f       	mul	r25, r18
     208:	50 0d       	add	r21, r0
     20a:	11 24       	eor	r1, r1
     20c:	46 0f       	add	r20, r22
     20e:	57 1f       	adc	r21, r23
     210:	82 81       	ldd	r24, Z+2	; 0x02
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	9c 01       	movw	r18, r24
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	22 0f       	add	r18, r18
     220:	33 1f       	adc	r19, r19
     222:	82 0f       	add	r24, r18
     224:	93 1f       	adc	r25, r19
     226:	48 0f       	add	r20, r24
     228:	59 1f       	adc	r21, r25
     22a:	83 81       	ldd	r24, Z+3	; 0x03
     22c:	48 0f       	add	r20, r24
     22e:	51 1d       	adc	r21, r1
     230:	66 27       	eor	r22, r22
     232:	57 fd       	sbrc	r21, 7
     234:	60 95       	com	r22
     236:	76 2f       	mov	r23, r22
     238:	4d 93       	st	X+, r20
     23a:	5d 93       	st	X+, r21
     23c:	6d 93       	st	X+, r22
     23e:	7c 93       	st	X, r23
     240:	13 97       	sbiw	r26, 0x03	; 3
     242:	44 c0       	rjmp	.+136    	; 0x2cc <Num_uCreate+0x194>
	}
	else if (counter==5)
     244:	65 30       	cpi	r22, 0x05	; 5
     246:	09 f0       	breq	.+2      	; 0x24a <Num_uCreate+0x112>
     248:	41 c0       	rjmp	.+130    	; 0x2cc <Num_uCreate+0x194>
	{
		*Num=arr[0]*10000+arr[1]*1000+arr[2]*100+arr[3]*10+arr[4];
     24a:	80 81       	ld	r24, Z
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	20 e1       	ldi	r18, 0x10	; 16
     250:	37 e2       	ldi	r19, 0x27	; 39
     252:	82 9f       	mul	r24, r18
     254:	b0 01       	movw	r22, r0
     256:	83 9f       	mul	r24, r19
     258:	70 0d       	add	r23, r0
     25a:	92 9f       	mul	r25, r18
     25c:	70 0d       	add	r23, r0
     25e:	11 24       	eor	r1, r1
     260:	81 81       	ldd	r24, Z+1	; 0x01
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	28 ee       	ldi	r18, 0xE8	; 232
     266:	33 e0       	ldi	r19, 0x03	; 3
     268:	82 9f       	mul	r24, r18
     26a:	a0 01       	movw	r20, r0
     26c:	83 9f       	mul	r24, r19
     26e:	50 0d       	add	r21, r0
     270:	92 9f       	mul	r25, r18
     272:	50 0d       	add	r21, r0
     274:	11 24       	eor	r1, r1
     276:	eb 01       	movw	r28, r22
     278:	c4 0f       	add	r28, r20
     27a:	d5 1f       	adc	r29, r21
     27c:	83 81       	ldd	r24, Z+3	; 0x03
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	88 0f       	add	r24, r24
     282:	99 1f       	adc	r25, r25
     284:	9c 01       	movw	r18, r24
     286:	22 0f       	add	r18, r18
     288:	33 1f       	adc	r19, r19
     28a:	22 0f       	add	r18, r18
     28c:	33 1f       	adc	r19, r19
     28e:	bc 01       	movw	r22, r24
     290:	62 0f       	add	r22, r18
     292:	73 1f       	adc	r23, r19
     294:	82 81       	ldd	r24, Z+2	; 0x02
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	24 e6       	ldi	r18, 0x64	; 100
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	82 9f       	mul	r24, r18
     29e:	a0 01       	movw	r20, r0
     2a0:	83 9f       	mul	r24, r19
     2a2:	50 0d       	add	r21, r0
     2a4:	92 9f       	mul	r25, r18
     2a6:	50 0d       	add	r21, r0
     2a8:	11 24       	eor	r1, r1
     2aa:	46 0f       	add	r20, r22
     2ac:	57 1f       	adc	r21, r23
     2ae:	c4 0f       	add	r28, r20
     2b0:	d5 1f       	adc	r29, r21
     2b2:	84 81       	ldd	r24, Z+4	; 0x04
     2b4:	c8 0f       	add	r28, r24
     2b6:	d1 1d       	adc	r29, r1
     2b8:	ae 01       	movw	r20, r28
     2ba:	66 27       	eor	r22, r22
     2bc:	57 fd       	sbrc	r21, 7
     2be:	60 95       	com	r22
     2c0:	76 2f       	mov	r23, r22
     2c2:	4d 93       	st	X+, r20
     2c4:	5d 93       	st	X+, r21
     2c6:	6d 93       	st	X+, r22
     2c8:	7c 93       	st	X, r23
     2ca:	13 97       	sbiw	r26, 0x03	; 3
	}
}
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <__Memset__>:

void __Memset__ (unsigned char *ptr,unsigned char valu,unsigned char _size_)
{
	unsigned char i=0;
	for (i=0;i<_size_;i++)
     2d2:	44 23       	and	r20, r20
     2d4:	39 f0       	breq	.+14     	; 0x2e4 <__Memset__+0x12>
     2d6:	e8 2f       	mov	r30, r24
     2d8:	f9 2f       	mov	r31, r25
     2da:	80 e0       	ldi	r24, 0x00	; 0
	{
		ptr[i]=valu;
     2dc:	61 93       	st	Z+, r22
}

void __Memset__ (unsigned char *ptr,unsigned char valu,unsigned char _size_)
{
	unsigned char i=0;
	for (i=0;i<_size_;i++)
     2de:	8f 5f       	subi	r24, 0xFF	; 255
     2e0:	84 17       	cp	r24, r20
     2e2:	e1 f7       	brne	.-8      	; 0x2dc <__Memset__+0xa>
     2e4:	08 95       	ret

000002e6 <DIO_vSet_pin>:
#include "Std_macros.h"
#include "DIO.h"

void DIO_vSet_pin(unsigned char PORT,unsigned char pin,unsigned char InputOutput)
{
	switch(PORT)
     2e6:	84 34       	cpi	r24, 0x44	; 68
     2e8:	09 f4       	brne	.+2      	; 0x2ec <DIO_vSet_pin+0x6>
     2ea:	71 c0       	rjmp	.+226    	; 0x3ce <DIO_vSet_pin+0xe8>
     2ec:	85 34       	cpi	r24, 0x45	; 69
     2ee:	48 f4       	brcc	.+18     	; 0x302 <DIO_vSet_pin+0x1c>
     2f0:	82 34       	cpi	r24, 0x42	; 66
     2f2:	99 f1       	breq	.+102    	; 0x35a <DIO_vSet_pin+0x74>
     2f4:	83 34       	cpi	r24, 0x43	; 67
     2f6:	08 f0       	brcs	.+2      	; 0x2fa <DIO_vSet_pin+0x14>
     2f8:	4d c0       	rjmp	.+154    	; 0x394 <DIO_vSet_pin+0xae>
     2fa:	81 34       	cpi	r24, 0x41	; 65
     2fc:	09 f0       	breq	.+2      	; 0x300 <DIO_vSet_pin+0x1a>
     2fe:	83 c0       	rjmp	.+262    	; 0x406 <DIO_vSet_pin+0x120>
     300:	0f c0       	rjmp	.+30     	; 0x320 <DIO_vSet_pin+0x3a>
     302:	82 36       	cpi	r24, 0x62	; 98
     304:	51 f1       	breq	.+84     	; 0x35a <DIO_vSet_pin+0x74>
     306:	83 36       	cpi	r24, 0x63	; 99
     308:	20 f4       	brcc	.+8      	; 0x312 <DIO_vSet_pin+0x2c>
     30a:	81 36       	cpi	r24, 0x61	; 97
     30c:	09 f0       	breq	.+2      	; 0x310 <DIO_vSet_pin+0x2a>
     30e:	7b c0       	rjmp	.+246    	; 0x406 <DIO_vSet_pin+0x120>
     310:	07 c0       	rjmp	.+14     	; 0x320 <DIO_vSet_pin+0x3a>
     312:	83 36       	cpi	r24, 0x63	; 99
     314:	09 f4       	brne	.+2      	; 0x318 <DIO_vSet_pin+0x32>
     316:	3e c0       	rjmp	.+124    	; 0x394 <DIO_vSet_pin+0xae>
     318:	84 36       	cpi	r24, 0x64	; 100
     31a:	09 f0       	breq	.+2      	; 0x31e <DIO_vSet_pin+0x38>
     31c:	74 c0       	rjmp	.+232    	; 0x406 <DIO_vSet_pin+0x120>
     31e:	57 c0       	rjmp	.+174    	; 0x3ce <DIO_vSet_pin+0xe8>
	{
		case 'A':
		case 'a':
		{
			if (InputOutput==1)
     320:	41 30       	cpi	r20, 0x01	; 1
     322:	69 f4       	brne	.+26     	; 0x33e <DIO_vSet_pin+0x58>
			{
				SET_BIT(DDRA,pin);
     324:	2a b3       	in	r18, 0x1a	; 26
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	ac 01       	movw	r20, r24
     32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_vSet_pin+0x4c>
     32e:	44 0f       	add	r20, r20
     330:	55 1f       	adc	r21, r21
     332:	6a 95       	dec	r22
     334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_vSet_pin+0x48>
     336:	ba 01       	movw	r22, r20
     338:	62 2b       	or	r22, r18
     33a:	6a bb       	out	0x1a, r22	; 26
     33c:	08 95       	ret
			} 
			else
			{
				CLR_BIT(DDRA,pin);
     33e:	2a b3       	in	r18, 0x1a	; 26
     340:	81 e0       	ldi	r24, 0x01	; 1
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	ac 01       	movw	r20, r24
     346:	02 c0       	rjmp	.+4      	; 0x34c <DIO_vSet_pin+0x66>
     348:	44 0f       	add	r20, r20
     34a:	55 1f       	adc	r21, r21
     34c:	6a 95       	dec	r22
     34e:	e2 f7       	brpl	.-8      	; 0x348 <DIO_vSet_pin+0x62>
     350:	ba 01       	movw	r22, r20
     352:	60 95       	com	r22
     354:	62 23       	and	r22, r18
     356:	6a bb       	out	0x1a, r22	; 26
     358:	08 95       	ret
			break;
		}
		case 'B':
		case 'b':
		{
			if (InputOutput==1)
     35a:	41 30       	cpi	r20, 0x01	; 1
     35c:	69 f4       	brne	.+26     	; 0x378 <DIO_vSet_pin+0x92>
			{
				SET_BIT(DDRB,pin);
     35e:	27 b3       	in	r18, 0x17	; 23
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	ac 01       	movw	r20, r24
     366:	02 c0       	rjmp	.+4      	; 0x36c <DIO_vSet_pin+0x86>
     368:	44 0f       	add	r20, r20
     36a:	55 1f       	adc	r21, r21
     36c:	6a 95       	dec	r22
     36e:	e2 f7       	brpl	.-8      	; 0x368 <DIO_vSet_pin+0x82>
     370:	ba 01       	movw	r22, r20
     372:	62 2b       	or	r22, r18
     374:	67 bb       	out	0x17, r22	; 23
     376:	08 95       	ret
			}
			else
			{
				CLR_BIT(DDRB,pin);
     378:	27 b3       	in	r18, 0x17	; 23
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	ac 01       	movw	r20, r24
     380:	02 c0       	rjmp	.+4      	; 0x386 <DIO_vSet_pin+0xa0>
     382:	44 0f       	add	r20, r20
     384:	55 1f       	adc	r21, r21
     386:	6a 95       	dec	r22
     388:	e2 f7       	brpl	.-8      	; 0x382 <DIO_vSet_pin+0x9c>
     38a:	ba 01       	movw	r22, r20
     38c:	60 95       	com	r22
     38e:	62 23       	and	r22, r18
     390:	67 bb       	out	0x17, r22	; 23
     392:	08 95       	ret
			break;
		}
		case 'C':
		case 'c':
		{
			if (InputOutput==1)
     394:	41 30       	cpi	r20, 0x01	; 1
     396:	69 f4       	brne	.+26     	; 0x3b2 <DIO_vSet_pin+0xcc>
			{
				SET_BIT(DDRC,pin);
     398:	24 b3       	in	r18, 0x14	; 20
     39a:	81 e0       	ldi	r24, 0x01	; 1
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	ac 01       	movw	r20, r24
     3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DIO_vSet_pin+0xc0>
     3a2:	44 0f       	add	r20, r20
     3a4:	55 1f       	adc	r21, r21
     3a6:	6a 95       	dec	r22
     3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <DIO_vSet_pin+0xbc>
     3aa:	ba 01       	movw	r22, r20
     3ac:	62 2b       	or	r22, r18
     3ae:	64 bb       	out	0x14, r22	; 20
     3b0:	08 95       	ret
			}
			else
			{
				CLR_BIT(DDRC,pin);
     3b2:	24 b3       	in	r18, 0x14	; 20
     3b4:	81 e0       	ldi	r24, 0x01	; 1
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	ac 01       	movw	r20, r24
     3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_vSet_pin+0xda>
     3bc:	44 0f       	add	r20, r20
     3be:	55 1f       	adc	r21, r21
     3c0:	6a 95       	dec	r22
     3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_vSet_pin+0xd6>
     3c4:	ba 01       	movw	r22, r20
     3c6:	60 95       	com	r22
     3c8:	62 23       	and	r22, r18
     3ca:	64 bb       	out	0x14, r22	; 20
     3cc:	08 95       	ret
			break;
		}
		case 'D':
		case 'd':
		{
			if (InputOutput==1)
     3ce:	41 30       	cpi	r20, 0x01	; 1
     3d0:	69 f4       	brne	.+26     	; 0x3ec <DIO_vSet_pin+0x106>
			{
				SET_BIT(DDRD,pin);
     3d2:	21 b3       	in	r18, 0x11	; 17
     3d4:	81 e0       	ldi	r24, 0x01	; 1
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	ac 01       	movw	r20, r24
     3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_vSet_pin+0xfa>
     3dc:	44 0f       	add	r20, r20
     3de:	55 1f       	adc	r21, r21
     3e0:	6a 95       	dec	r22
     3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_vSet_pin+0xf6>
     3e4:	ba 01       	movw	r22, r20
     3e6:	62 2b       	or	r22, r18
     3e8:	61 bb       	out	0x11, r22	; 17
     3ea:	08 95       	ret
			}
			else
			{
				CLR_BIT(DDRD,pin);
     3ec:	21 b3       	in	r18, 0x11	; 17
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	ac 01       	movw	r20, r24
     3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_vSet_pin+0x114>
     3f6:	44 0f       	add	r20, r20
     3f8:	55 1f       	adc	r21, r21
     3fa:	6a 95       	dec	r22
     3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_vSet_pin+0x110>
     3fe:	ba 01       	movw	r22, r20
     400:	60 95       	com	r22
     402:	62 23       	and	r22, r18
     404:	61 bb       	out	0x11, r22	; 17
     406:	08 95       	ret

00000408 <DIO_vWrite_pin>:
	}	
}

void DIO_vWrite_pin (unsigned char PORT,unsigned char pin,unsigned char DIR)
{
	switch(PORT)
     408:	84 34       	cpi	r24, 0x44	; 68
     40a:	09 f4       	brne	.+2      	; 0x40e <DIO_vWrite_pin+0x6>
     40c:	71 c0       	rjmp	.+226    	; 0x4f0 <DIO_vWrite_pin+0xe8>
     40e:	85 34       	cpi	r24, 0x45	; 69
     410:	48 f4       	brcc	.+18     	; 0x424 <DIO_vWrite_pin+0x1c>
     412:	82 34       	cpi	r24, 0x42	; 66
     414:	99 f1       	breq	.+102    	; 0x47c <DIO_vWrite_pin+0x74>
     416:	83 34       	cpi	r24, 0x43	; 67
     418:	08 f0       	brcs	.+2      	; 0x41c <DIO_vWrite_pin+0x14>
     41a:	4d c0       	rjmp	.+154    	; 0x4b6 <DIO_vWrite_pin+0xae>
     41c:	81 34       	cpi	r24, 0x41	; 65
     41e:	09 f0       	breq	.+2      	; 0x422 <DIO_vWrite_pin+0x1a>
     420:	83 c0       	rjmp	.+262    	; 0x528 <DIO_vWrite_pin+0x120>
     422:	0f c0       	rjmp	.+30     	; 0x442 <DIO_vWrite_pin+0x3a>
     424:	82 36       	cpi	r24, 0x62	; 98
     426:	51 f1       	breq	.+84     	; 0x47c <DIO_vWrite_pin+0x74>
     428:	83 36       	cpi	r24, 0x63	; 99
     42a:	20 f4       	brcc	.+8      	; 0x434 <DIO_vWrite_pin+0x2c>
     42c:	81 36       	cpi	r24, 0x61	; 97
     42e:	09 f0       	breq	.+2      	; 0x432 <DIO_vWrite_pin+0x2a>
     430:	7b c0       	rjmp	.+246    	; 0x528 <DIO_vWrite_pin+0x120>
     432:	07 c0       	rjmp	.+14     	; 0x442 <DIO_vWrite_pin+0x3a>
     434:	83 36       	cpi	r24, 0x63	; 99
     436:	09 f4       	brne	.+2      	; 0x43a <DIO_vWrite_pin+0x32>
     438:	3e c0       	rjmp	.+124    	; 0x4b6 <DIO_vWrite_pin+0xae>
     43a:	84 36       	cpi	r24, 0x64	; 100
     43c:	09 f0       	breq	.+2      	; 0x440 <DIO_vWrite_pin+0x38>
     43e:	74 c0       	rjmp	.+232    	; 0x528 <DIO_vWrite_pin+0x120>
     440:	57 c0       	rjmp	.+174    	; 0x4f0 <DIO_vWrite_pin+0xe8>
	{
		case 'A':
		case 'a':
		{
			if (DIR==1)
     442:	41 30       	cpi	r20, 0x01	; 1
     444:	69 f4       	brne	.+26     	; 0x460 <DIO_vWrite_pin+0x58>
			{
				SET_BIT(PORTA,pin);
     446:	2b b3       	in	r18, 0x1b	; 27
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	ac 01       	movw	r20, r24
     44e:	02 c0       	rjmp	.+4      	; 0x454 <DIO_vWrite_pin+0x4c>
     450:	44 0f       	add	r20, r20
     452:	55 1f       	adc	r21, r21
     454:	6a 95       	dec	r22
     456:	e2 f7       	brpl	.-8      	; 0x450 <DIO_vWrite_pin+0x48>
     458:	ba 01       	movw	r22, r20
     45a:	62 2b       	or	r22, r18
     45c:	6b bb       	out	0x1b, r22	; 27
     45e:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTA,pin);
     460:	2b b3       	in	r18, 0x1b	; 27
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	ac 01       	movw	r20, r24
     468:	02 c0       	rjmp	.+4      	; 0x46e <DIO_vWrite_pin+0x66>
     46a:	44 0f       	add	r20, r20
     46c:	55 1f       	adc	r21, r21
     46e:	6a 95       	dec	r22
     470:	e2 f7       	brpl	.-8      	; 0x46a <DIO_vWrite_pin+0x62>
     472:	ba 01       	movw	r22, r20
     474:	60 95       	com	r22
     476:	62 23       	and	r22, r18
     478:	6b bb       	out	0x1b, r22	; 27
     47a:	08 95       	ret
			break;
		}
		case 'B':
		case 'b':
		{
			if (DIR==1)
     47c:	41 30       	cpi	r20, 0x01	; 1
     47e:	69 f4       	brne	.+26     	; 0x49a <DIO_vWrite_pin+0x92>
			{
				SET_BIT(PORTB,pin);
     480:	28 b3       	in	r18, 0x18	; 24
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	ac 01       	movw	r20, r24
     488:	02 c0       	rjmp	.+4      	; 0x48e <DIO_vWrite_pin+0x86>
     48a:	44 0f       	add	r20, r20
     48c:	55 1f       	adc	r21, r21
     48e:	6a 95       	dec	r22
     490:	e2 f7       	brpl	.-8      	; 0x48a <DIO_vWrite_pin+0x82>
     492:	ba 01       	movw	r22, r20
     494:	62 2b       	or	r22, r18
     496:	68 bb       	out	0x18, r22	; 24
     498:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTB,pin);
     49a:	28 b3       	in	r18, 0x18	; 24
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	ac 01       	movw	r20, r24
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <DIO_vWrite_pin+0xa0>
     4a4:	44 0f       	add	r20, r20
     4a6:	55 1f       	adc	r21, r21
     4a8:	6a 95       	dec	r22
     4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <DIO_vWrite_pin+0x9c>
     4ac:	ba 01       	movw	r22, r20
     4ae:	60 95       	com	r22
     4b0:	62 23       	and	r22, r18
     4b2:	68 bb       	out	0x18, r22	; 24
     4b4:	08 95       	ret
			break;
		}
		case 'C':
		case 'c':
		{
			if (DIR==1)
     4b6:	41 30       	cpi	r20, 0x01	; 1
     4b8:	69 f4       	brne	.+26     	; 0x4d4 <DIO_vWrite_pin+0xcc>
			{
				SET_BIT(PORTC,pin);
     4ba:	25 b3       	in	r18, 0x15	; 21
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	ac 01       	movw	r20, r24
     4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <DIO_vWrite_pin+0xc0>
     4c4:	44 0f       	add	r20, r20
     4c6:	55 1f       	adc	r21, r21
     4c8:	6a 95       	dec	r22
     4ca:	e2 f7       	brpl	.-8      	; 0x4c4 <DIO_vWrite_pin+0xbc>
     4cc:	ba 01       	movw	r22, r20
     4ce:	62 2b       	or	r22, r18
     4d0:	65 bb       	out	0x15, r22	; 21
     4d2:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTC,pin);
     4d4:	25 b3       	in	r18, 0x15	; 21
     4d6:	81 e0       	ldi	r24, 0x01	; 1
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	ac 01       	movw	r20, r24
     4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <DIO_vWrite_pin+0xda>
     4de:	44 0f       	add	r20, r20
     4e0:	55 1f       	adc	r21, r21
     4e2:	6a 95       	dec	r22
     4e4:	e2 f7       	brpl	.-8      	; 0x4de <DIO_vWrite_pin+0xd6>
     4e6:	ba 01       	movw	r22, r20
     4e8:	60 95       	com	r22
     4ea:	62 23       	and	r22, r18
     4ec:	65 bb       	out	0x15, r22	; 21
     4ee:	08 95       	ret
			break;
		}
		case 'D':
		case 'd':
		{
			if (DIR==1)
     4f0:	41 30       	cpi	r20, 0x01	; 1
     4f2:	69 f4       	brne	.+26     	; 0x50e <DIO_vWrite_pin+0x106>
			{
				SET_BIT(PORTD,pin);
     4f4:	22 b3       	in	r18, 0x12	; 18
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	ac 01       	movw	r20, r24
     4fc:	02 c0       	rjmp	.+4      	; 0x502 <DIO_vWrite_pin+0xfa>
     4fe:	44 0f       	add	r20, r20
     500:	55 1f       	adc	r21, r21
     502:	6a 95       	dec	r22
     504:	e2 f7       	brpl	.-8      	; 0x4fe <DIO_vWrite_pin+0xf6>
     506:	ba 01       	movw	r22, r20
     508:	62 2b       	or	r22, r18
     50a:	62 bb       	out	0x12, r22	; 18
     50c:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTD,pin);
     50e:	22 b3       	in	r18, 0x12	; 18
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	ac 01       	movw	r20, r24
     516:	02 c0       	rjmp	.+4      	; 0x51c <DIO_vWrite_pin+0x114>
     518:	44 0f       	add	r20, r20
     51a:	55 1f       	adc	r21, r21
     51c:	6a 95       	dec	r22
     51e:	e2 f7       	brpl	.-8      	; 0x518 <DIO_vWrite_pin+0x110>
     520:	ba 01       	movw	r22, r20
     522:	60 95       	com	r22
     524:	62 23       	and	r22, r18
     526:	62 bb       	out	0x12, r22	; 18
     528:	08 95       	ret

0000052a <DIO_uRead_pin>:
}

unsigned char DIO_uRead_pin(unsigned char PORT,unsigned char pin)
{
	unsigned char Return_Valu=0;
	switch(PORT)
     52a:	84 34       	cpi	r24, 0x44	; 68
     52c:	09 f4       	brne	.+2      	; 0x530 <DIO_uRead_pin+0x6>
     52e:	4e c0       	rjmp	.+156    	; 0x5cc <DIO_uRead_pin+0xa2>
     530:	85 34       	cpi	r24, 0x45	; 69
     532:	40 f4       	brcc	.+16     	; 0x544 <DIO_uRead_pin+0x1a>
     534:	82 34       	cpi	r24, 0x42	; 66
     536:	31 f1       	breq	.+76     	; 0x584 <DIO_uRead_pin+0x5a>
     538:	83 34       	cpi	r24, 0x43	; 67
     53a:	b0 f5       	brcc	.+108    	; 0x5a8 <DIO_uRead_pin+0x7e>
     53c:	81 34       	cpi	r24, 0x41	; 65
     53e:	09 f0       	breq	.+2      	; 0x542 <DIO_uRead_pin+0x18>
     540:	57 c0       	rjmp	.+174    	; 0x5f0 <DIO_uRead_pin+0xc6>
     542:	0e c0       	rjmp	.+28     	; 0x560 <DIO_uRead_pin+0x36>
     544:	82 36       	cpi	r24, 0x62	; 98
     546:	f1 f0       	breq	.+60     	; 0x584 <DIO_uRead_pin+0x5a>
     548:	83 36       	cpi	r24, 0x63	; 99
     54a:	20 f4       	brcc	.+8      	; 0x554 <DIO_uRead_pin+0x2a>
     54c:	81 36       	cpi	r24, 0x61	; 97
     54e:	09 f0       	breq	.+2      	; 0x552 <DIO_uRead_pin+0x28>
     550:	4f c0       	rjmp	.+158    	; 0x5f0 <DIO_uRead_pin+0xc6>
     552:	06 c0       	rjmp	.+12     	; 0x560 <DIO_uRead_pin+0x36>
     554:	83 36       	cpi	r24, 0x63	; 99
     556:	41 f1       	breq	.+80     	; 0x5a8 <DIO_uRead_pin+0x7e>
     558:	84 36       	cpi	r24, 0x64	; 100
     55a:	09 f0       	breq	.+2      	; 0x55e <DIO_uRead_pin+0x34>
     55c:	49 c0       	rjmp	.+146    	; 0x5f0 <DIO_uRead_pin+0xc6>
     55e:	36 c0       	rjmp	.+108    	; 0x5cc <DIO_uRead_pin+0xa2>
	{
		case 'a':
		case 'A':
		{
			Return_Valu=READ_BIT(PINA,pin);
     560:	29 b3       	in	r18, 0x19	; 25
     562:	81 e0       	ldi	r24, 0x01	; 1
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	06 2e       	mov	r0, r22
     568:	02 c0       	rjmp	.+4      	; 0x56e <DIO_uRead_pin+0x44>
     56a:	88 0f       	add	r24, r24
     56c:	99 1f       	adc	r25, r25
     56e:	0a 94       	dec	r0
     570:	e2 f7       	brpl	.-8      	; 0x56a <DIO_uRead_pin+0x40>
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	82 23       	and	r24, r18
     576:	93 23       	and	r25, r19
     578:	02 c0       	rjmp	.+4      	; 0x57e <DIO_uRead_pin+0x54>
     57a:	95 95       	asr	r25
     57c:	87 95       	ror	r24
     57e:	6a 95       	dec	r22
     580:	e2 f7       	brpl	.-8      	; 0x57a <DIO_uRead_pin+0x50>
			break;
     582:	08 95       	ret
		}
		case 'B':
		case 'b':
		{
			Return_Valu=READ_BIT(PINB,pin);
     584:	26 b3       	in	r18, 0x16	; 22
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	06 2e       	mov	r0, r22
     58c:	02 c0       	rjmp	.+4      	; 0x592 <DIO_uRead_pin+0x68>
     58e:	88 0f       	add	r24, r24
     590:	99 1f       	adc	r25, r25
     592:	0a 94       	dec	r0
     594:	e2 f7       	brpl	.-8      	; 0x58e <DIO_uRead_pin+0x64>
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	82 23       	and	r24, r18
     59a:	93 23       	and	r25, r19
     59c:	02 c0       	rjmp	.+4      	; 0x5a2 <DIO_uRead_pin+0x78>
     59e:	95 95       	asr	r25
     5a0:	87 95       	ror	r24
     5a2:	6a 95       	dec	r22
     5a4:	e2 f7       	brpl	.-8      	; 0x59e <DIO_uRead_pin+0x74>
			break;
     5a6:	08 95       	ret
		}
		case 'C':
		case 'c':
		{
			Return_Valu=READ_BIT(PINC,pin);
     5a8:	23 b3       	in	r18, 0x13	; 19
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	06 2e       	mov	r0, r22
     5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <DIO_uRead_pin+0x8c>
     5b2:	88 0f       	add	r24, r24
     5b4:	99 1f       	adc	r25, r25
     5b6:	0a 94       	dec	r0
     5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <DIO_uRead_pin+0x88>
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	82 23       	and	r24, r18
     5be:	93 23       	and	r25, r19
     5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <DIO_uRead_pin+0x9c>
     5c2:	95 95       	asr	r25
     5c4:	87 95       	ror	r24
     5c6:	6a 95       	dec	r22
     5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <DIO_uRead_pin+0x98>
			break;
     5ca:	08 95       	ret
		}
		case 'd':
		case 'D':
		{
			Return_Valu=READ_BIT(PIND,pin);
     5cc:	20 b3       	in	r18, 0x10	; 16
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	06 2e       	mov	r0, r22
     5d4:	02 c0       	rjmp	.+4      	; 0x5da <DIO_uRead_pin+0xb0>
     5d6:	88 0f       	add	r24, r24
     5d8:	99 1f       	adc	r25, r25
     5da:	0a 94       	dec	r0
     5dc:	e2 f7       	brpl	.-8      	; 0x5d6 <DIO_uRead_pin+0xac>
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	82 23       	and	r24, r18
     5e2:	93 23       	and	r25, r19
     5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_uRead_pin+0xc0>
     5e6:	95 95       	asr	r25
     5e8:	87 95       	ror	r24
     5ea:	6a 95       	dec	r22
     5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_uRead_pin+0xbc>
			break;
     5ee:	08 95       	ret
	}
}

unsigned char DIO_uRead_pin(unsigned char PORT,unsigned char pin)
{
	unsigned char Return_Valu=0;
     5f0:	80 e0       	ldi	r24, 0x00	; 0
		{
			break;
		}
	}
	return Return_Valu;
}
     5f2:	08 95       	ret

000005f4 <DIO_vTog_pin>:

void DIO_vTog_pin (unsigned char PORT, unsigned char pin)
{
	switch(PORT)
     5f4:	84 34       	cpi	r24, 0x44	; 68
     5f6:	09 f4       	brne	.+2      	; 0x5fa <DIO_vTog_pin+0x6>
     5f8:	3d c0       	rjmp	.+122    	; 0x674 <DIO_vTog_pin+0x80>
     5fa:	85 34       	cpi	r24, 0x45	; 69
     5fc:	40 f4       	brcc	.+16     	; 0x60e <DIO_vTog_pin+0x1a>
     5fe:	82 34       	cpi	r24, 0x42	; 66
     600:	f9 f0       	breq	.+62     	; 0x640 <DIO_vTog_pin+0x4c>
     602:	83 34       	cpi	r24, 0x43	; 67
     604:	50 f5       	brcc	.+84     	; 0x65a <DIO_vTog_pin+0x66>
     606:	81 34       	cpi	r24, 0x41	; 65
     608:	09 f0       	breq	.+2      	; 0x60c <DIO_vTog_pin+0x18>
     60a:	40 c0       	rjmp	.+128    	; 0x68c <DIO_vTog_pin+0x98>
     60c:	0c c0       	rjmp	.+24     	; 0x626 <DIO_vTog_pin+0x32>
     60e:	82 36       	cpi	r24, 0x62	; 98
     610:	b9 f0       	breq	.+46     	; 0x640 <DIO_vTog_pin+0x4c>
     612:	83 36       	cpi	r24, 0x63	; 99
     614:	18 f4       	brcc	.+6      	; 0x61c <DIO_vTog_pin+0x28>
     616:	81 36       	cpi	r24, 0x61	; 97
     618:	c9 f5       	brne	.+114    	; 0x68c <DIO_vTog_pin+0x98>
     61a:	05 c0       	rjmp	.+10     	; 0x626 <DIO_vTog_pin+0x32>
     61c:	83 36       	cpi	r24, 0x63	; 99
     61e:	e9 f0       	breq	.+58     	; 0x65a <DIO_vTog_pin+0x66>
     620:	84 36       	cpi	r24, 0x64	; 100
     622:	a1 f5       	brne	.+104    	; 0x68c <DIO_vTog_pin+0x98>
     624:	27 c0       	rjmp	.+78     	; 0x674 <DIO_vTog_pin+0x80>
	{
		case 'A':
		case 'a':
		{
			TOG_BIT(PORTA,pin);
     626:	2b b3       	in	r18, 0x1b	; 27
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	ac 01       	movw	r20, r24
     62e:	02 c0       	rjmp	.+4      	; 0x634 <DIO_vTog_pin+0x40>
     630:	44 0f       	add	r20, r20
     632:	55 1f       	adc	r21, r21
     634:	6a 95       	dec	r22
     636:	e2 f7       	brpl	.-8      	; 0x630 <DIO_vTog_pin+0x3c>
     638:	ba 01       	movw	r22, r20
     63a:	62 27       	eor	r22, r18
     63c:	6b bb       	out	0x1b, r22	; 27
			break;
     63e:	08 95       	ret
		}
		case 'B':
		case 'b':
		{
			TOG_BIT(PORTB,pin);
     640:	28 b3       	in	r18, 0x18	; 24
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	ac 01       	movw	r20, r24
     648:	02 c0       	rjmp	.+4      	; 0x64e <DIO_vTog_pin+0x5a>
     64a:	44 0f       	add	r20, r20
     64c:	55 1f       	adc	r21, r21
     64e:	6a 95       	dec	r22
     650:	e2 f7       	brpl	.-8      	; 0x64a <DIO_vTog_pin+0x56>
     652:	ba 01       	movw	r22, r20
     654:	62 27       	eor	r22, r18
     656:	68 bb       	out	0x18, r22	; 24
			break;
     658:	08 95       	ret
		}
		case 'C':
		case 'c':
		{
			TOG_BIT(PORTC,pin);
     65a:	25 b3       	in	r18, 0x15	; 21
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	ac 01       	movw	r20, r24
     662:	02 c0       	rjmp	.+4      	; 0x668 <DIO_vTog_pin+0x74>
     664:	44 0f       	add	r20, r20
     666:	55 1f       	adc	r21, r21
     668:	6a 95       	dec	r22
     66a:	e2 f7       	brpl	.-8      	; 0x664 <DIO_vTog_pin+0x70>
     66c:	ba 01       	movw	r22, r20
     66e:	62 27       	eor	r22, r18
     670:	65 bb       	out	0x15, r22	; 21
			break;
     672:	08 95       	ret
		}
		case 'D':
		case 'd':
		{
			TOG_BIT(PORTD,pin);
     674:	22 b3       	in	r18, 0x12	; 18
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	ac 01       	movw	r20, r24
     67c:	02 c0       	rjmp	.+4      	; 0x682 <DIO_vTog_pin+0x8e>
     67e:	44 0f       	add	r20, r20
     680:	55 1f       	adc	r21, r21
     682:	6a 95       	dec	r22
     684:	e2 f7       	brpl	.-8      	; 0x67e <DIO_vTog_pin+0x8a>
     686:	ba 01       	movw	r22, r20
     688:	62 27       	eor	r22, r18
     68a:	62 bb       	out	0x12, r22	; 18
     68c:	08 95       	ret

0000068e <DIO_vSet_port>:
	}
}

void DIO_vSet_port (unsigned char PORT, unsigned char InputOutput)
{
	switch(PORT)
     68e:	84 34       	cpi	r24, 0x44	; 68
     690:	d9 f0       	breq	.+54     	; 0x6c8 <DIO_vSet_port+0x3a>
     692:	85 34       	cpi	r24, 0x45	; 69
     694:	38 f4       	brcc	.+14     	; 0x6a4 <DIO_vSet_port+0x16>
     696:	82 34       	cpi	r24, 0x42	; 66
     698:	99 f0       	breq	.+38     	; 0x6c0 <DIO_vSet_port+0x32>
     69a:	83 34       	cpi	r24, 0x43	; 67
     69c:	98 f4       	brcc	.+38     	; 0x6c4 <DIO_vSet_port+0x36>
     69e:	81 34       	cpi	r24, 0x41	; 65
     6a0:	a1 f4       	brne	.+40     	; 0x6ca <DIO_vSet_port+0x3c>
     6a2:	0c c0       	rjmp	.+24     	; 0x6bc <DIO_vSet_port+0x2e>
     6a4:	82 36       	cpi	r24, 0x62	; 98
     6a6:	61 f0       	breq	.+24     	; 0x6c0 <DIO_vSet_port+0x32>
     6a8:	83 36       	cpi	r24, 0x63	; 99
     6aa:	18 f4       	brcc	.+6      	; 0x6b2 <DIO_vSet_port+0x24>
     6ac:	81 36       	cpi	r24, 0x61	; 97
     6ae:	69 f4       	brne	.+26     	; 0x6ca <DIO_vSet_port+0x3c>
     6b0:	05 c0       	rjmp	.+10     	; 0x6bc <DIO_vSet_port+0x2e>
     6b2:	83 36       	cpi	r24, 0x63	; 99
     6b4:	39 f0       	breq	.+14     	; 0x6c4 <DIO_vSet_port+0x36>
     6b6:	84 36       	cpi	r24, 0x64	; 100
     6b8:	41 f4       	brne	.+16     	; 0x6ca <DIO_vSet_port+0x3c>
     6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <DIO_vSet_port+0x3a>
	{
		case 'A':
		case 'a':
		{
			DDRA=InputOutput;
     6bc:	6a bb       	out	0x1a, r22	; 26
			break;
     6be:	08 95       	ret
		}
		case 'B':
		case 'b':
		{
			DDRB=InputOutput;
     6c0:	67 bb       	out	0x17, r22	; 23
			break;
     6c2:	08 95       	ret
		}
		case 'C':
		case 'c':
		{
			DDRC=InputOutput;
     6c4:	64 bb       	out	0x14, r22	; 20
			break;
     6c6:	08 95       	ret
		}
		case 'D':
		case 'd':
		{
			DDRD=InputOutput;
     6c8:	61 bb       	out	0x11, r22	; 17
     6ca:	08 95       	ret

000006cc <DIO_vWrite_port>:
	}
}

void DIO_vWrite_port (unsigned char PORT,unsigned char portvalue)
{
	switch(PORT)
     6cc:	84 34       	cpi	r24, 0x44	; 68
     6ce:	d9 f0       	breq	.+54     	; 0x706 <DIO_vWrite_port+0x3a>
     6d0:	85 34       	cpi	r24, 0x45	; 69
     6d2:	38 f4       	brcc	.+14     	; 0x6e2 <DIO_vWrite_port+0x16>
     6d4:	82 34       	cpi	r24, 0x42	; 66
     6d6:	99 f0       	breq	.+38     	; 0x6fe <DIO_vWrite_port+0x32>
     6d8:	83 34       	cpi	r24, 0x43	; 67
     6da:	98 f4       	brcc	.+38     	; 0x702 <DIO_vWrite_port+0x36>
     6dc:	81 34       	cpi	r24, 0x41	; 65
     6de:	a1 f4       	brne	.+40     	; 0x708 <DIO_vWrite_port+0x3c>
     6e0:	0c c0       	rjmp	.+24     	; 0x6fa <DIO_vWrite_port+0x2e>
     6e2:	82 36       	cpi	r24, 0x62	; 98
     6e4:	61 f0       	breq	.+24     	; 0x6fe <DIO_vWrite_port+0x32>
     6e6:	83 36       	cpi	r24, 0x63	; 99
     6e8:	18 f4       	brcc	.+6      	; 0x6f0 <DIO_vWrite_port+0x24>
     6ea:	81 36       	cpi	r24, 0x61	; 97
     6ec:	69 f4       	brne	.+26     	; 0x708 <DIO_vWrite_port+0x3c>
     6ee:	05 c0       	rjmp	.+10     	; 0x6fa <DIO_vWrite_port+0x2e>
     6f0:	83 36       	cpi	r24, 0x63	; 99
     6f2:	39 f0       	breq	.+14     	; 0x702 <DIO_vWrite_port+0x36>
     6f4:	84 36       	cpi	r24, 0x64	; 100
     6f6:	41 f4       	brne	.+16     	; 0x708 <DIO_vWrite_port+0x3c>
     6f8:	06 c0       	rjmp	.+12     	; 0x706 <DIO_vWrite_port+0x3a>
	{
		case 'A':
		case 'a':
		{
			PORTA=portvalue;
     6fa:	6b bb       	out	0x1b, r22	; 27
			break;
     6fc:	08 95       	ret
		}
		case 'B':
		case 'b':
		{
			PORTB=portvalue;
     6fe:	68 bb       	out	0x18, r22	; 24
			break;
     700:	08 95       	ret
		}
		case 'C':
		case 'c':
		{
			PORTC=portvalue;
     702:	65 bb       	out	0x15, r22	; 21
			break;
     704:	08 95       	ret
		}
		case 'D':
		case 'd':
		{
			PORTD=portvalue;
     706:	62 bb       	out	0x12, r22	; 18
     708:	08 95       	ret

0000070a <DIO_uRead_port>:
}

unsigned char DIO_uRead_port (unsigned char PORT)
{
	unsigned char Return_valu=0;
	switch(PORT)
     70a:	84 34       	cpi	r24, 0x44	; 68
     70c:	d9 f0       	breq	.+54     	; 0x744 <DIO_uRead_port+0x3a>
     70e:	85 34       	cpi	r24, 0x45	; 69
     710:	38 f4       	brcc	.+14     	; 0x720 <DIO_uRead_port+0x16>
     712:	82 34       	cpi	r24, 0x42	; 66
     714:	99 f0       	breq	.+38     	; 0x73c <DIO_uRead_port+0x32>
     716:	83 34       	cpi	r24, 0x43	; 67
     718:	98 f4       	brcc	.+38     	; 0x740 <DIO_uRead_port+0x36>
     71a:	81 34       	cpi	r24, 0x41	; 65
     71c:	a9 f4       	brne	.+42     	; 0x748 <DIO_uRead_port+0x3e>
     71e:	0c c0       	rjmp	.+24     	; 0x738 <DIO_uRead_port+0x2e>
     720:	82 36       	cpi	r24, 0x62	; 98
     722:	61 f0       	breq	.+24     	; 0x73c <DIO_uRead_port+0x32>
     724:	83 36       	cpi	r24, 0x63	; 99
     726:	18 f4       	brcc	.+6      	; 0x72e <DIO_uRead_port+0x24>
     728:	81 36       	cpi	r24, 0x61	; 97
     72a:	71 f4       	brne	.+28     	; 0x748 <DIO_uRead_port+0x3e>
     72c:	05 c0       	rjmp	.+10     	; 0x738 <DIO_uRead_port+0x2e>
     72e:	83 36       	cpi	r24, 0x63	; 99
     730:	39 f0       	breq	.+14     	; 0x740 <DIO_uRead_port+0x36>
     732:	84 36       	cpi	r24, 0x64	; 100
     734:	49 f4       	brne	.+18     	; 0x748 <DIO_uRead_port+0x3e>
     736:	06 c0       	rjmp	.+12     	; 0x744 <DIO_uRead_port+0x3a>
	{
		case 'A':
		case 'a':
		{
			Return_valu=PINA;
     738:	89 b3       	in	r24, 0x19	; 25
			break;
     73a:	08 95       	ret
		}
		case 'B':
		case 'b':
		{
			Return_valu=PINB;
     73c:	86 b3       	in	r24, 0x16	; 22
			break;
     73e:	08 95       	ret
		}
		case 'C':
		case 'c':
		{
			Return_valu=PINC;
     740:	83 b3       	in	r24, 0x13	; 19
			break;
     742:	08 95       	ret
		}
		case 'D':
		case 'd':
		{
			Return_valu=PIND;
     744:	80 b3       	in	r24, 0x10	; 16
			break;
     746:	08 95       	ret
	}
}

unsigned char DIO_uRead_port (unsigned char PORT)
{
	unsigned char Return_valu=0;
     748:	80 e0       	ldi	r24, 0x00	; 0
		{
			break;
		}
	}
	return Return_valu;
}
     74a:	08 95       	ret

0000074c <DIO_vTog_port>:

void DIO_vTog_port (unsigned char PORT)
{
	switch(PORT)
     74c:	84 34       	cpi	r24, 0x44	; 68
     74e:	09 f1       	breq	.+66     	; 0x792 <DIO_vTog_port+0x46>
     750:	85 34       	cpi	r24, 0x45	; 69
     752:	38 f4       	brcc	.+14     	; 0x762 <DIO_vTog_port+0x16>
     754:	82 34       	cpi	r24, 0x42	; 66
     756:	a9 f0       	breq	.+42     	; 0x782 <DIO_vTog_port+0x36>
     758:	83 34       	cpi	r24, 0x43	; 67
     75a:	b8 f4       	brcc	.+46     	; 0x78a <DIO_vTog_port+0x3e>
     75c:	81 34       	cpi	r24, 0x41	; 65
     75e:	e1 f4       	brne	.+56     	; 0x798 <DIO_vTog_port+0x4c>
     760:	0c c0       	rjmp	.+24     	; 0x77a <DIO_vTog_port+0x2e>
     762:	82 36       	cpi	r24, 0x62	; 98
     764:	71 f0       	breq	.+28     	; 0x782 <DIO_vTog_port+0x36>
     766:	83 36       	cpi	r24, 0x63	; 99
     768:	18 f4       	brcc	.+6      	; 0x770 <DIO_vTog_port+0x24>
     76a:	81 36       	cpi	r24, 0x61	; 97
     76c:	a9 f4       	brne	.+42     	; 0x798 <DIO_vTog_port+0x4c>
     76e:	05 c0       	rjmp	.+10     	; 0x77a <DIO_vTog_port+0x2e>
     770:	83 36       	cpi	r24, 0x63	; 99
     772:	59 f0       	breq	.+22     	; 0x78a <DIO_vTog_port+0x3e>
     774:	84 36       	cpi	r24, 0x64	; 100
     776:	81 f4       	brne	.+32     	; 0x798 <DIO_vTog_port+0x4c>
     778:	0c c0       	rjmp	.+24     	; 0x792 <DIO_vTog_port+0x46>
	{
		case 'A':
		case 'a':
		{
			PORTA=~PORTA;
     77a:	8b b3       	in	r24, 0x1b	; 27
     77c:	80 95       	com	r24
     77e:	8b bb       	out	0x1b, r24	; 27
			break;
     780:	08 95       	ret
		}
		case 'B':
		case 'b':
		{
			PORTB=~PORTB;
     782:	88 b3       	in	r24, 0x18	; 24
     784:	80 95       	com	r24
     786:	88 bb       	out	0x18, r24	; 24
			break;
     788:	08 95       	ret
		}
		case 'C':
		case 'c':
		{
			PORTC=~PORTC;
     78a:	85 b3       	in	r24, 0x15	; 21
     78c:	80 95       	com	r24
     78e:	85 bb       	out	0x15, r24	; 21
			break;
     790:	08 95       	ret
		}
		case 'D':
		case 'd':
		{
			PORTD=~PORTD;
     792:	82 b3       	in	r24, 0x12	; 18
     794:	80 95       	com	r24
     796:	82 bb       	out	0x12, r24	; 18
     798:	08 95       	ret

0000079a <DIO_vInternalpullup>:
	}
}

void DIO_vInternalpullup (unsigned char PORT,unsigned char pin,unsigned char DIR)
{
	switch(PORT)
     79a:	84 34       	cpi	r24, 0x44	; 68
     79c:	09 f4       	brne	.+2      	; 0x7a0 <DIO_vInternalpullup+0x6>
     79e:	71 c0       	rjmp	.+226    	; 0x882 <__stack+0x23>
     7a0:	85 34       	cpi	r24, 0x45	; 69
     7a2:	48 f4       	brcc	.+18     	; 0x7b6 <DIO_vInternalpullup+0x1c>
     7a4:	82 34       	cpi	r24, 0x42	; 66
     7a6:	99 f1       	breq	.+102    	; 0x80e <DIO_vInternalpullup+0x74>
     7a8:	83 34       	cpi	r24, 0x43	; 67
     7aa:	08 f0       	brcs	.+2      	; 0x7ae <DIO_vInternalpullup+0x14>
     7ac:	4d c0       	rjmp	.+154    	; 0x848 <DIO_vInternalpullup+0xae>
     7ae:	81 34       	cpi	r24, 0x41	; 65
     7b0:	09 f0       	breq	.+2      	; 0x7b4 <DIO_vInternalpullup+0x1a>
     7b2:	83 c0       	rjmp	.+262    	; 0x8ba <__stack+0x5b>
     7b4:	0f c0       	rjmp	.+30     	; 0x7d4 <DIO_vInternalpullup+0x3a>
     7b6:	82 36       	cpi	r24, 0x62	; 98
     7b8:	51 f1       	breq	.+84     	; 0x80e <DIO_vInternalpullup+0x74>
     7ba:	83 36       	cpi	r24, 0x63	; 99
     7bc:	20 f4       	brcc	.+8      	; 0x7c6 <DIO_vInternalpullup+0x2c>
     7be:	81 36       	cpi	r24, 0x61	; 97
     7c0:	09 f0       	breq	.+2      	; 0x7c4 <DIO_vInternalpullup+0x2a>
     7c2:	7b c0       	rjmp	.+246    	; 0x8ba <__stack+0x5b>
     7c4:	07 c0       	rjmp	.+14     	; 0x7d4 <DIO_vInternalpullup+0x3a>
     7c6:	83 36       	cpi	r24, 0x63	; 99
     7c8:	09 f4       	brne	.+2      	; 0x7cc <DIO_vInternalpullup+0x32>
     7ca:	3e c0       	rjmp	.+124    	; 0x848 <DIO_vInternalpullup+0xae>
     7cc:	84 36       	cpi	r24, 0x64	; 100
     7ce:	09 f0       	breq	.+2      	; 0x7d2 <DIO_vInternalpullup+0x38>
     7d0:	74 c0       	rjmp	.+232    	; 0x8ba <__stack+0x5b>
     7d2:	57 c0       	rjmp	.+174    	; 0x882 <__stack+0x23>
	{
		case 'A':
		case 'a':
		{
			if (DIR==1)
     7d4:	41 30       	cpi	r20, 0x01	; 1
     7d6:	69 f4       	brne	.+26     	; 0x7f2 <DIO_vInternalpullup+0x58>
			{
				SET_BIT(PORTA,pin);
     7d8:	2b b3       	in	r18, 0x1b	; 27
     7da:	81 e0       	ldi	r24, 0x01	; 1
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	ac 01       	movw	r20, r24
     7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <DIO_vInternalpullup+0x4c>
     7e2:	44 0f       	add	r20, r20
     7e4:	55 1f       	adc	r21, r21
     7e6:	6a 95       	dec	r22
     7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <DIO_vInternalpullup+0x48>
     7ea:	ba 01       	movw	r22, r20
     7ec:	62 2b       	or	r22, r18
     7ee:	6b bb       	out	0x1b, r22	; 27
     7f0:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTA,pin);
     7f2:	2b b3       	in	r18, 0x1b	; 27
     7f4:	81 e0       	ldi	r24, 0x01	; 1
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	ac 01       	movw	r20, r24
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <DIO_vInternalpullup+0x66>
     7fc:	44 0f       	add	r20, r20
     7fe:	55 1f       	adc	r21, r21
     800:	6a 95       	dec	r22
     802:	e2 f7       	brpl	.-8      	; 0x7fc <DIO_vInternalpullup+0x62>
     804:	ba 01       	movw	r22, r20
     806:	60 95       	com	r22
     808:	62 23       	and	r22, r18
     80a:	6b bb       	out	0x1b, r22	; 27
     80c:	08 95       	ret
			break;
		}
		case 'B':
		case 'b':
		{
			if (DIR==1)
     80e:	41 30       	cpi	r20, 0x01	; 1
     810:	69 f4       	brne	.+26     	; 0x82c <DIO_vInternalpullup+0x92>
			{
				SET_BIT(PORTB,pin);
     812:	28 b3       	in	r18, 0x18	; 24
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	ac 01       	movw	r20, r24
     81a:	02 c0       	rjmp	.+4      	; 0x820 <DIO_vInternalpullup+0x86>
     81c:	44 0f       	add	r20, r20
     81e:	55 1f       	adc	r21, r21
     820:	6a 95       	dec	r22
     822:	e2 f7       	brpl	.-8      	; 0x81c <DIO_vInternalpullup+0x82>
     824:	ba 01       	movw	r22, r20
     826:	62 2b       	or	r22, r18
     828:	68 bb       	out	0x18, r22	; 24
     82a:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTB,pin);
     82c:	28 b3       	in	r18, 0x18	; 24
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	ac 01       	movw	r20, r24
     834:	02 c0       	rjmp	.+4      	; 0x83a <DIO_vInternalpullup+0xa0>
     836:	44 0f       	add	r20, r20
     838:	55 1f       	adc	r21, r21
     83a:	6a 95       	dec	r22
     83c:	e2 f7       	brpl	.-8      	; 0x836 <DIO_vInternalpullup+0x9c>
     83e:	ba 01       	movw	r22, r20
     840:	60 95       	com	r22
     842:	62 23       	and	r22, r18
     844:	68 bb       	out	0x18, r22	; 24
     846:	08 95       	ret
			break;
		}
		case 'C':
		case 'c':
		{
			if (DIR==1)
     848:	41 30       	cpi	r20, 0x01	; 1
     84a:	69 f4       	brne	.+26     	; 0x866 <__stack+0x7>
			{
				SET_BIT(PORTC,pin);
     84c:	25 b3       	in	r18, 0x15	; 21
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	ac 01       	movw	r20, r24
     854:	02 c0       	rjmp	.+4      	; 0x85a <DIO_vInternalpullup+0xc0>
     856:	44 0f       	add	r20, r20
     858:	55 1f       	adc	r21, r21
     85a:	6a 95       	dec	r22
     85c:	e2 f7       	brpl	.-8      	; 0x856 <DIO_vInternalpullup+0xbc>
     85e:	ba 01       	movw	r22, r20
     860:	62 2b       	or	r22, r18
     862:	65 bb       	out	0x15, r22	; 21
     864:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTC,pin);
     866:	25 b3       	in	r18, 0x15	; 21
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	ac 01       	movw	r20, r24
     86e:	02 c0       	rjmp	.+4      	; 0x874 <__stack+0x15>
     870:	44 0f       	add	r20, r20
     872:	55 1f       	adc	r21, r21
     874:	6a 95       	dec	r22
     876:	e2 f7       	brpl	.-8      	; 0x870 <__stack+0x11>
     878:	ba 01       	movw	r22, r20
     87a:	60 95       	com	r22
     87c:	62 23       	and	r22, r18
     87e:	65 bb       	out	0x15, r22	; 21
     880:	08 95       	ret
			break;
		}
		case 'D':
		case 'd':
		{
			if (DIR==1)
     882:	41 30       	cpi	r20, 0x01	; 1
     884:	69 f4       	brne	.+26     	; 0x8a0 <__stack+0x41>
			{
				SET_BIT(PORTD,pin);
     886:	22 b3       	in	r18, 0x12	; 18
     888:	81 e0       	ldi	r24, 0x01	; 1
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	ac 01       	movw	r20, r24
     88e:	02 c0       	rjmp	.+4      	; 0x894 <__stack+0x35>
     890:	44 0f       	add	r20, r20
     892:	55 1f       	adc	r21, r21
     894:	6a 95       	dec	r22
     896:	e2 f7       	brpl	.-8      	; 0x890 <__stack+0x31>
     898:	ba 01       	movw	r22, r20
     89a:	62 2b       	or	r22, r18
     89c:	62 bb       	out	0x12, r22	; 18
     89e:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTD,pin);
     8a0:	22 b3       	in	r18, 0x12	; 18
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	ac 01       	movw	r20, r24
     8a8:	02 c0       	rjmp	.+4      	; 0x8ae <__stack+0x4f>
     8aa:	44 0f       	add	r20, r20
     8ac:	55 1f       	adc	r21, r21
     8ae:	6a 95       	dec	r22
     8b0:	e2 f7       	brpl	.-8      	; 0x8aa <__stack+0x4b>
     8b2:	ba 01       	movw	r22, r20
     8b4:	60 95       	com	r22
     8b6:	62 23       	and	r22, r18
     8b8:	62 bb       	out	0x12, r22	; 18
     8ba:	08 95       	ret

000008bc <DIO_vWrite_nibble>:
	}
}


void DIO_vWrite_nibble (unsigned char PORT,unsigned char pin,unsigned char Value)
{
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	08 2f       	mov	r16, r24
     8ce:	16 2f       	mov	r17, r22

	if (pin<=4)
     8d0:	65 30       	cpi	r22, 0x05	; 5
     8d2:	28 f5       	brcc	.+74     	; 0x91e <DIO_vWrite_nibble+0x62>
	{
		unsigned char n=0;
		unsigned char g=pin+4;
     8d4:	86 2f       	mov	r24, r22
     8d6:	8c 5f       	subi	r24, 0xFC	; 252
		for (;pin<g;pin++,n++)
     8d8:	68 17       	cp	r22, r24
     8da:	08 f5       	brcc	.+66     	; 0x91e <DIO_vWrite_nibble+0x62>
     8dc:	c0 e0       	ldi	r28, 0x00	; 0
     8de:	d0 e0       	ldi	r29, 0x00	; 0
		{
			DIO_vWrite_pin(PORT,pin,READ_BIT(Value,n));
     8e0:	ee 24       	eor	r14, r14
     8e2:	ff 24       	eor	r15, r15
     8e4:	e3 94       	inc	r14
     8e6:	c4 2e       	mov	r12, r20
     8e8:	dd 24       	eor	r13, r13
		}
	}
}


void DIO_vWrite_nibble (unsigned char PORT,unsigned char pin,unsigned char Value)
     8ea:	6c 2f       	mov	r22, r28
     8ec:	61 0f       	add	r22, r17
	{
		unsigned char n=0;
		unsigned char g=pin+4;
		for (;pin<g;pin++,n++)
		{
			DIO_vWrite_pin(PORT,pin,READ_BIT(Value,n));
     8ee:	c7 01       	movw	r24, r14
     8f0:	0c 2e       	mov	r0, r28
     8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <DIO_vWrite_nibble+0x3c>
     8f4:	88 0f       	add	r24, r24
     8f6:	99 1f       	adc	r25, r25
     8f8:	0a 94       	dec	r0
     8fa:	e2 f7       	brpl	.-8      	; 0x8f4 <DIO_vWrite_nibble+0x38>
     8fc:	8c 21       	and	r24, r12
     8fe:	9d 21       	and	r25, r13
     900:	9c 01       	movw	r18, r24
     902:	0c 2e       	mov	r0, r28
     904:	02 c0       	rjmp	.+4      	; 0x90a <DIO_vWrite_nibble+0x4e>
     906:	35 95       	asr	r19
     908:	27 95       	ror	r18
     90a:	0a 94       	dec	r0
     90c:	e2 f7       	brpl	.-8      	; 0x906 <DIO_vWrite_nibble+0x4a>
     90e:	a9 01       	movw	r20, r18
     910:	80 2f       	mov	r24, r16
     912:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
     916:	21 96       	adiw	r28, 0x01	; 1

	if (pin<=4)
	{
		unsigned char n=0;
		unsigned char g=pin+4;
		for (;pin<g;pin++,n++)
     918:	c4 30       	cpi	r28, 0x04	; 4
     91a:	d1 05       	cpc	r29, r1
     91c:	31 f7       	brne	.-52     	; 0x8ea <DIO_vWrite_nibble+0x2e>
		{
			DIO_vWrite_pin(PORT,pin,READ_BIT(Value,n));
		}
	}
	
}
     91e:	df 91       	pop	r29
     920:	cf 91       	pop	r28
     922:	1f 91       	pop	r17
     924:	0f 91       	pop	r16
     926:	ff 90       	pop	r15
     928:	ef 90       	pop	r14
     92a:	df 90       	pop	r13
     92c:	cf 90       	pop	r12
     92e:	08 95       	ret

00000930 <Keypad_vInit>:
#include "DIO.h"
#include "Keypad_Config.h"

void Keypad_vInit(void)
{ 
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,0,1);
     930:	84 e6       	ldi	r24, 0x64	; 100
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	41 e0       	ldi	r20, 0x01	; 1
     936:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,1,1);
     93a:	84 e6       	ldi	r24, 0x64	; 100
     93c:	61 e0       	ldi	r22, 0x01	; 1
     93e:	41 e0       	ldi	r20, 0x01	; 1
     940:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,2,1);
     944:	84 e6       	ldi	r24, 0x64	; 100
     946:	62 e0       	ldi	r22, 0x02	; 2
     948:	41 e0       	ldi	r20, 0x01	; 1
     94a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,3,1);
     94e:	84 e6       	ldi	r24, 0x64	; 100
     950:	63 e0       	ldi	r22, 0x03	; 3
     952:	41 e0       	ldi	r20, 0x01	; 1
     954:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,4,0);
     958:	84 e6       	ldi	r24, 0x64	; 100
     95a:	64 e0       	ldi	r22, 0x04	; 4
     95c:	40 e0       	ldi	r20, 0x00	; 0
     95e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,5,0);
     962:	84 e6       	ldi	r24, 0x64	; 100
     964:	65 e0       	ldi	r22, 0x05	; 5
     966:	40 e0       	ldi	r20, 0x00	; 0
     968:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,6,0);
     96c:	84 e6       	ldi	r24, 0x64	; 100
     96e:	66 e0       	ldi	r22, 0x06	; 6
     970:	40 e0       	ldi	r20, 0x00	; 0
     972:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(KEYPAD_CONNECTED_PORT,7,0);
     976:	84 e6       	ldi	r24, 0x64	; 100
     978:	67 e0       	ldi	r22, 0x07	; 7
     97a:	40 e0       	ldi	r20, 0x00	; 0
     97c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vInternalpullup(KEYPAD_CONNECTED_PORT,INPUT_STARTING_PIN,1);
     980:	84 e6       	ldi	r24, 0x64	; 100
     982:	64 e0       	ldi	r22, 0x04	; 4
     984:	41 e0       	ldi	r20, 0x01	; 1
     986:	0e 94 cd 03 	call	0x79a	; 0x79a <DIO_vInternalpullup>
	DIO_vInternalpullup(KEYPAD_CONNECTED_PORT,INPUT_STARTING_PIN+1,1);
     98a:	84 e6       	ldi	r24, 0x64	; 100
     98c:	65 e0       	ldi	r22, 0x05	; 5
     98e:	41 e0       	ldi	r20, 0x01	; 1
     990:	0e 94 cd 03 	call	0x79a	; 0x79a <DIO_vInternalpullup>
	DIO_vInternalpullup(KEYPAD_CONNECTED_PORT,INPUT_STARTING_PIN+2,1);
     994:	84 e6       	ldi	r24, 0x64	; 100
     996:	66 e0       	ldi	r22, 0x06	; 6
     998:	41 e0       	ldi	r20, 0x01	; 1
     99a:	0e 94 cd 03 	call	0x79a	; 0x79a <DIO_vInternalpullup>
	DIO_vInternalpullup(KEYPAD_CONNECTED_PORT,INPUT_STARTING_PIN+3,1);
     99e:	84 e6       	ldi	r24, 0x64	; 100
     9a0:	67 e0       	ldi	r22, 0x07	; 7
     9a2:	41 e0       	ldi	r20, 0x01	; 1
     9a4:	0e 94 cd 03 	call	0x79a	; 0x79a <DIO_vInternalpullup>
}
     9a8:	08 95       	ret

000009aa <Keypad_uRead>:

unsigned char Keypad_uRead(void)
{
     9aa:	0f 93       	push	r16
     9ac:	1f 93       	push	r17
     9ae:	cf 93       	push	r28
     9b0:	df 93       	push	r29
     9b2:	cd b7       	in	r28, 0x3d	; 61
     9b4:	de b7       	in	r29, 0x3e	; 62
     9b6:	60 97       	sbiw	r28, 0x10	; 16
     9b8:	0f b6       	in	r0, 0x3f	; 63
     9ba:	f8 94       	cli
     9bc:	de bf       	out	0x3e, r29	; 62
     9be:	0f be       	out	0x3f, r0	; 63
     9c0:	cd bf       	out	0x3d, r28	; 61
	unsigned char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
     9c2:	de 01       	movw	r26, r28
     9c4:	11 96       	adiw	r26, 0x01	; 1
     9c6:	e0 e6       	ldi	r30, 0x60	; 96
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	80 e1       	ldi	r24, 0x10	; 16
     9cc:	01 90       	ld	r0, Z+
     9ce:	0d 92       	st	X+, r0
     9d0:	81 50       	subi	r24, 0x01	; 1
     9d2:	e1 f7       	brne	.-8      	; 0x9cc <Keypad_uRead+0x22>
	unsigned char row=0,col=0;
	unsigned char x=0,return_valu=0xff;
	for (row=OUTPUT_STARTING_PIN;row<(OUTPUT_STARTING_PIN+4);row++)
     9d4:	00 e0       	ldi	r16, 0x00	; 0
	{
		DIO_vWrite_nibble(KEYPAD_CONNECTED_PORT,OUTPUT_STARTING_PIN,0xf);
     9d6:	84 e6       	ldi	r24, 0x64	; 100
     9d8:	60 e0       	ldi	r22, 0x00	; 0
     9da:	4f e0       	ldi	r20, 0x0F	; 15
     9dc:	0e 94 5e 04 	call	0x8bc	; 0x8bc <DIO_vWrite_nibble>
		DIO_vWrite_pin(KEYPAD_CONNECTED_PORT,row,0);
     9e0:	84 e6       	ldi	r24, 0x64	; 100
     9e2:	60 2f       	mov	r22, r16
     9e4:	40 e0       	ldi	r20, 0x00	; 0
     9e6:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
		for (col=0;col<4;col++)
     9ea:	10 e0       	ldi	r17, 0x00	; 0
		{
			x=DIO_uRead_pin(KEYPAD_CONNECTED_PORT,INPUT_STARTING_PIN+col);
     9ec:	61 2f       	mov	r22, r17
     9ee:	6c 5f       	subi	r22, 0xFC	; 252
     9f0:	84 e6       	ldi	r24, 0x64	; 100
     9f2:	0e 94 95 02 	call	0x52a	; 0x52a <DIO_uRead_pin>
			if (x==0)
     9f6:	88 23       	and	r24, r24
     9f8:	61 f4       	brne	.+24     	; 0xa12 <Keypad_uRead+0x68>
			{
				return_valu=arr[row][col];
     9fa:	e0 2f       	mov	r30, r16
     9fc:	f0 e0       	ldi	r31, 0x00	; 0
     9fe:	ee 0f       	add	r30, r30
     a00:	ff 1f       	adc	r31, r31
     a02:	ee 0f       	add	r30, r30
     a04:	ff 1f       	adc	r31, r31
     a06:	e1 0f       	add	r30, r17
     a08:	f1 1d       	adc	r31, r1
     a0a:	ec 0f       	add	r30, r28
     a0c:	fd 1f       	adc	r31, r29
     a0e:	81 81       	ldd	r24, Z+1	; 0x01
     a10:	04 c0       	rjmp	.+8      	; 0xa1a <Keypad_uRead+0x70>
	unsigned char x=0,return_valu=0xff;
	for (row=OUTPUT_STARTING_PIN;row<(OUTPUT_STARTING_PIN+4);row++)
	{
		DIO_vWrite_nibble(KEYPAD_CONNECTED_PORT,OUTPUT_STARTING_PIN,0xf);
		DIO_vWrite_pin(KEYPAD_CONNECTED_PORT,row,0);
		for (col=0;col<4;col++)
     a12:	1f 5f       	subi	r17, 0xFF	; 255
     a14:	14 30       	cpi	r17, 0x04	; 4
     a16:	51 f7       	brne	.-44     	; 0x9ec <Keypad_uRead+0x42>
     a18:	0b c0       	rjmp	.+22     	; 0xa30 <Keypad_uRead+0x86>
		{
			break;
		}
	}
	return return_valu;
}
     a1a:	60 96       	adiw	r28, 0x10	; 16
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	f8 94       	cli
     a20:	de bf       	out	0x3e, r29	; 62
     a22:	0f be       	out	0x3f, r0	; 63
     a24:	cd bf       	out	0x3d, r28	; 61
     a26:	df 91       	pop	r29
     a28:	cf 91       	pop	r28
     a2a:	1f 91       	pop	r17
     a2c:	0f 91       	pop	r16
     a2e:	08 95       	ret
unsigned char Keypad_uRead(void)
{
	unsigned char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
	unsigned char row=0,col=0;
	unsigned char x=0,return_valu=0xff;
	for (row=OUTPUT_STARTING_PIN;row<(OUTPUT_STARTING_PIN+4);row++)
     a30:	0f 5f       	subi	r16, 0xFF	; 255
     a32:	04 30       	cpi	r16, 0x04	; 4
     a34:	81 f6       	brne	.-96     	; 0x9d6 <Keypad_uRead+0x2c>
     a36:	8f ef       	ldi	r24, 0xFF	; 255
     a38:	f0 cf       	rjmp	.-32     	; 0xa1a <Keypad_uRead+0x70>

00000a3a <Enable_Pulse>:
#include "util/delay.h"
static void Enable_Pulse (void);

static void Enable_Pulse (void)
{
	DIO_vWrite_pin(CONTROL_PORT,ENABLE_PIN,1);
     a3a:	82 e4       	ldi	r24, 0x42	; 66
     a3c:	61 e0       	ldi	r22, 0x01	; 1
     a3e:	41 e0       	ldi	r20, 0x01	; 1
     a40:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a44:	87 e8       	ldi	r24, 0x87	; 135
     a46:	93 e1       	ldi	r25, 0x13	; 19
     a48:	01 97       	sbiw	r24, 0x01	; 1
     a4a:	f1 f7       	brne	.-4      	; 0xa48 <Enable_Pulse+0xe>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <Enable_Pulse+0x14>
     a4e:	00 00       	nop
	_delay_ms(2.5);
	DIO_vWrite_pin(CONTROL_PORT,ENABLE_PIN,0);
     a50:	82 e4       	ldi	r24, 0x42	; 66
     a52:	61 e0       	ldi	r22, 0x01	; 1
     a54:	40 e0       	ldi	r20, 0x00	; 0
     a56:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
     a5a:	87 e8       	ldi	r24, 0x87	; 135
     a5c:	93 e1       	ldi	r25, 0x13	; 19
     a5e:	01 97       	sbiw	r24, 0x01	; 1
     a60:	f1 f7       	brne	.-4      	; 0xa5e <Enable_Pulse+0x24>
     a62:	00 c0       	rjmp	.+0      	; 0xa64 <Enable_Pulse+0x2a>
     a64:	00 00       	nop
	_delay_ms(2.5);
}
     a66:	08 95       	ret

00000a68 <LCD_vSendChar>:

void LCD_vSendChar (unsigned char data)
{
     a68:	cf 93       	push	r28
     a6a:	c8 2f       	mov	r28, r24
	DIO_vWrite_pin(CONTROL_PORT,RW_PIN,0);
	DIO_vWrite_pin(CONTROL_PORT,RS_PIN,1);
	DIO_vWrite_port(DATA_PORT,data);
	Enable_Pulse();
	#elif defined four_bit_mode
	DIO_vWrite_pin(CONTROL_PORT,RW_PIN,0);
     a6c:	82 e4       	ldi	r24, 0x42	; 66
     a6e:	62 e0       	ldi	r22, 0x02	; 2
     a70:	40 e0       	ldi	r20, 0x00	; 0
     a72:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
	DIO_vWrite_pin(CONTROL_PORT,RS_PIN,1);
     a76:	82 e4       	ldi	r24, 0x42	; 66
     a78:	60 e0       	ldi	r22, 0x00	; 0
     a7a:	41 e0       	ldi	r20, 0x01	; 1
     a7c:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
	DIO_vWrite_nibble(DATA_PORT,FOUR_BIT_STARTING_PIN,data>>4);
     a80:	4c 2f       	mov	r20, r28
     a82:	42 95       	swap	r20
     a84:	4f 70       	andi	r20, 0x0F	; 15
     a86:	81 e4       	ldi	r24, 0x41	; 65
     a88:	64 e0       	ldi	r22, 0x04	; 4
     a8a:	0e 94 5e 04 	call	0x8bc	; 0x8bc <DIO_vWrite_nibble>
	Enable_Pulse();
     a8e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <Enable_Pulse>
	DIO_vWrite_nibble(DATA_PORT,FOUR_BIT_STARTING_PIN,data);
     a92:	81 e4       	ldi	r24, 0x41	; 65
     a94:	64 e0       	ldi	r22, 0x04	; 4
     a96:	4c 2f       	mov	r20, r28
     a98:	0e 94 5e 04 	call	0x8bc	; 0x8bc <DIO_vWrite_nibble>
	Enable_Pulse();
     a9c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <Enable_Pulse>
	#endif
}
     aa0:	cf 91       	pop	r28
     aa2:	08 95       	ret

00000aa4 <LCD_vSendCmd>:

void LCD_vSendCmd (unsigned char cmd)
{
     aa4:	cf 93       	push	r28
     aa6:	c8 2f       	mov	r28, r24
	DIO_vWrite_pin(CONTROL_PORT,RS_PIN,0);
	DIO_vWrite_port(DATA_PORT,cmd);
	Enable_Pulse();
	_delay_ms(2);
	#elif defined four_bit_mode
	DIO_vWrite_pin(CONTROL_PORT,RW_PIN,0);
     aa8:	82 e4       	ldi	r24, 0x42	; 66
     aaa:	62 e0       	ldi	r22, 0x02	; 2
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
	DIO_vWrite_pin(CONTROL_PORT,RS_PIN,0);
     ab2:	82 e4       	ldi	r24, 0x42	; 66
     ab4:	60 e0       	ldi	r22, 0x00	; 0
     ab6:	40 e0       	ldi	r20, 0x00	; 0
     ab8:	0e 94 04 02 	call	0x408	; 0x408 <DIO_vWrite_pin>
	DIO_vWrite_nibble(DATA_PORT,FOUR_BIT_STARTING_PIN,cmd>>4);
     abc:	4c 2f       	mov	r20, r28
     abe:	42 95       	swap	r20
     ac0:	4f 70       	andi	r20, 0x0F	; 15
     ac2:	81 e4       	ldi	r24, 0x41	; 65
     ac4:	64 e0       	ldi	r22, 0x04	; 4
     ac6:	0e 94 5e 04 	call	0x8bc	; 0x8bc <DIO_vWrite_nibble>
	Enable_Pulse();
     aca:	0e 94 1d 05 	call	0xa3a	; 0xa3a <Enable_Pulse>
	DIO_vWrite_nibble(DATA_PORT,FOUR_BIT_STARTING_PIN,cmd);
     ace:	81 e4       	ldi	r24, 0x41	; 65
     ad0:	64 e0       	ldi	r22, 0x04	; 4
     ad2:	4c 2f       	mov	r20, r28
     ad4:	0e 94 5e 04 	call	0x8bc	; 0x8bc <DIO_vWrite_nibble>
	Enable_Pulse();
     ad8:	0e 94 1d 05 	call	0xa3a	; 0xa3a <Enable_Pulse>
     adc:	8f e9       	ldi	r24, 0x9F	; 159
     ade:	9f e0       	ldi	r25, 0x0F	; 15
     ae0:	01 97       	sbiw	r24, 0x01	; 1
     ae2:	f1 f7       	brne	.-4      	; 0xae0 <LCD_vSendCmd+0x3c>
     ae4:	00 c0       	rjmp	.+0      	; 0xae6 <LCD_vSendCmd+0x42>
     ae6:	00 00       	nop
	_delay_ms(2);
	#endif
}
     ae8:	cf 91       	pop	r28
     aea:	08 95       	ret

00000aec <LCD_vSendString>:

void LCD_vSendString (const  char *data)
{
     aec:	cf 93       	push	r28
     aee:	df 93       	push	r29
     af0:	ec 01       	movw	r28, r24
	while ((*data)!=0)
     af2:	88 81       	ld	r24, Y
     af4:	88 23       	and	r24, r24
     af6:	31 f0       	breq	.+12     	; 0xb04 <LCD_vSendString+0x18>
	Enable_Pulse();
	_delay_ms(2);
	#endif
}

void LCD_vSendString (const  char *data)
     af8:	21 96       	adiw	r28, 0x01	; 1
{
	while ((*data)!=0)
	{
		LCD_vSendChar(*data);
     afa:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
	#endif
}

void LCD_vSendString (const  char *data)
{
	while ((*data)!=0)
     afe:	89 91       	ld	r24, Y+
     b00:	88 23       	and	r24, r24
     b02:	d9 f7       	brne	.-10     	; 0xafa <LCD_vSendString+0xe>
	{
		LCD_vSendChar(*data);
		data++;
	}
}
     b04:	df 91       	pop	r29
     b06:	cf 91       	pop	r28
     b08:	08 95       	ret

00000b0a <LCD_vMoveCursor>:

void LCD_vMoveCursor (unsigned char Line,unsigned char Column)
{
	unsigned address_cmd=0x80;
	if ((Line==0)||(Line>2)||(Column==0)||(Column>16))
     b0a:	98 2f       	mov	r25, r24
     b0c:	91 50       	subi	r25, 0x01	; 1
     b0e:	92 30       	cpi	r25, 0x02	; 2
     b10:	80 f4       	brcc	.+32     	; 0xb32 <LCD_vMoveCursor+0x28>
     b12:	66 23       	and	r22, r22
     b14:	89 f0       	breq	.+34     	; 0xb38 <LCD_vMoveCursor+0x2e>
     b16:	61 31       	cpi	r22, 0x11	; 17
     b18:	90 f4       	brcc	.+36     	; 0xb3e <LCD_vMoveCursor+0x34>
	{
		address_cmd=0x80;
	}
	else if (Line==1)
     b1a:	81 30       	cpi	r24, 0x01	; 1
     b1c:	29 f4       	brne	.+10     	; 0xb28 <LCD_vMoveCursor+0x1e>
	{
		address_cmd=0x80+Column-1;
     b1e:	86 2f       	mov	r24, r22
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	81 58       	subi	r24, 0x81	; 129
     b24:	9f 4f       	sbci	r25, 0xFF	; 255
     b26:	0d c0       	rjmp	.+26     	; 0xb42 <LCD_vMoveCursor+0x38>
	}
	else 
	{
		address_cmd=0xc0+Column-1;
     b28:	86 2f       	mov	r24, r22
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	81 54       	subi	r24, 0x41	; 65
     b2e:	9f 4f       	sbci	r25, 0xFF	; 255
     b30:	08 c0       	rjmp	.+16     	; 0xb42 <LCD_vMoveCursor+0x38>
void LCD_vMoveCursor (unsigned char Line,unsigned char Column)
{
	unsigned address_cmd=0x80;
	if ((Line==0)||(Line>2)||(Column==0)||(Column>16))
	{
		address_cmd=0x80;
     b32:	80 e8       	ldi	r24, 0x80	; 128
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	05 c0       	rjmp	.+10     	; 0xb42 <LCD_vMoveCursor+0x38>
     b38:	80 e8       	ldi	r24, 0x80	; 128
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	02 c0       	rjmp	.+4      	; 0xb42 <LCD_vMoveCursor+0x38>
     b3e:	80 e8       	ldi	r24, 0x80	; 128
     b40:	90 e0       	ldi	r25, 0x00	; 0
	}
	else 
	{
		address_cmd=0xc0+Column-1;
	}
	LCD_vSendCmd(address_cmd);
     b42:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
}
     b46:	08 95       	ret

00000b48 <LCD_vClrscreen>:
	#endif
}

void LCD_vClrscreen(void)
{
	LCD_vSendCmd(CLEAR_LCD_SCREEN);
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
     b4e:	8f e1       	ldi	r24, 0x1F	; 31
     b50:	9e e4       	ldi	r25, 0x4E	; 78
     b52:	01 97       	sbiw	r24, 0x01	; 1
     b54:	f1 f7       	brne	.-4      	; 0xb52 <LCD_vClrscreen+0xa>
     b56:	00 c0       	rjmp	.+0      	; 0xb58 <LCD_vClrscreen+0x10>
     b58:	00 00       	nop
	_delay_ms(10);
}
     b5a:	08 95       	ret

00000b5c <LCD_vReturnHome>:

void LCD_vReturnHome(void)
{
	LCD_vSendCmd(RETURN_HOME_LCD);
     b5c:	82 e0       	ldi	r24, 0x02	; 2
     b5e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
     b62:	8f e1       	ldi	r24, 0x1F	; 31
     b64:	9e e4       	ldi	r25, 0x4E	; 78
     b66:	01 97       	sbiw	r24, 0x01	; 1
     b68:	f1 f7       	brne	.-4      	; 0xb66 <LCD_vReturnHome+0xa>
     b6a:	00 c0       	rjmp	.+0      	; 0xb6c <LCD_vReturnHome+0x10>
     b6c:	00 00       	nop
	_delay_ms(10);
     b6e:	08 95       	ret

00000b70 <LCD_vInit>:
	}
	LCD_vSendCmd(address_cmd);
}

void LCD_vInit (void)
{
     b70:	cf 93       	push	r28
     b72:	8f e7       	ldi	r24, 0x7F	; 127
     b74:	9a e1       	ldi	r25, 0x1A	; 26
     b76:	a6 e0       	ldi	r26, 0x06	; 6
     b78:	81 50       	subi	r24, 0x01	; 1
     b7a:	90 40       	sbci	r25, 0x00	; 0
     b7c:	a0 40       	sbci	r26, 0x00	; 0
     b7e:	e1 f7       	brne	.-8      	; 0xb78 <LCD_vInit+0x8>
     b80:	00 c0       	rjmp	.+0      	; 0xb82 <LCD_vInit+0x12>
     b82:	00 00       	nop
	LCD_vClrscreen();
	LCD_vSendCmd(SHIFT_CURSOR_TO_RIGHT);
	#elif defined four_bit_mode
	_delay_ms(250);
	unsigned char i=0;
	unsigned char pin_req=FOUR_BIT_STARTING_PIN;
     b84:	c4 e0       	ldi	r28, 0x04	; 4
	for(;i<4;i++,pin_req++)
	{
		DIO_vSet_pin(DATA_PORT,pin_req,1);
     b86:	81 e4       	ldi	r24, 0x41	; 65
     b88:	6c 2f       	mov	r22, r28
     b8a:	41 e0       	ldi	r20, 0x01	; 1
     b8c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	LCD_vSendCmd(SHIFT_CURSOR_TO_RIGHT);
	#elif defined four_bit_mode
	_delay_ms(250);
	unsigned char i=0;
	unsigned char pin_req=FOUR_BIT_STARTING_PIN;
	for(;i<4;i++,pin_req++)
     b90:	cf 5f       	subi	r28, 0xFF	; 255
     b92:	c8 30       	cpi	r28, 0x08	; 8
     b94:	c1 f7       	brne	.-16     	; 0xb86 <LCD_vInit+0x16>
	{
		DIO_vSet_pin(DATA_PORT,pin_req,1);
	}
	DIO_vSet_pin(CONTROL_PORT,RW_PIN,1);
     b96:	82 e4       	ldi	r24, 0x42	; 66
     b98:	62 e0       	ldi	r22, 0x02	; 2
     b9a:	41 e0       	ldi	r20, 0x01	; 1
     b9c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(CONTROL_PORT,RS_PIN,1);
     ba0:	82 e4       	ldi	r24, 0x42	; 66
     ba2:	60 e0       	ldi	r22, 0x00	; 0
     ba4:	41 e0       	ldi	r20, 0x01	; 1
     ba6:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	DIO_vSet_pin(CONTROL_PORT,ENABLE_PIN,1);
     baa:	82 e4       	ldi	r24, 0x42	; 66
     bac:	61 e0       	ldi	r22, 0x01	; 1
     bae:	41 e0       	ldi	r20, 0x01	; 1
     bb0:	0e 94 73 01 	call	0x2e6	; 0x2e6 <DIO_vSet_pin>
	LCD_vReturnHome();
     bb4:	0e 94 ae 05 	call	0xb5c	; 0xb5c <LCD_vReturnHome>
	LCD_vSendCmd(FOUR_BIT_CMD);
     bb8:	88 e2       	ldi	r24, 0x28	; 40
     bba:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
	LCD_vSendCmd(DISPLAY_ON_CURSOR_ON);
     bbe:	8e e0       	ldi	r24, 0x0E	; 14
     bc0:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
	LCD_vClrscreen();
     bc4:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
	LCD_vSendCmd(SHIFT_CURSOR_TO_RIGHT_WHILE_WRITING);
     bc8:	86 e0       	ldi	r24, 0x06	; 6
     bca:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
	#endif
}
     bce:	cf 91       	pop	r28
     bd0:	08 95       	ret

00000bd2 <main>:
#define F_CPU 8000000LU
#include "util/delay.h"
#include "Cal.h"

int main(void)
{
     bd2:	cf 93       	push	r28
     bd4:	df 93       	push	r29
     bd6:	cd b7       	in	r28, 0x3d	; 61
     bd8:	de b7       	in	r29, 0x3e	; 62
     bda:	a8 97       	sbiw	r28, 0x28	; 40
     bdc:	0f b6       	in	r0, 0x3f	; 63
     bde:	f8 94       	cli
     be0:	de bf       	out	0x3e, r29	; 62
     be2:	0f be       	out	0x3f, r0	; 63
     be4:	cd bf       	out	0x3d, r28	; 61
	LCD_vInit();
     be6:	0e 94 b8 05 	call	0xb70	; 0xb70 <LCD_vInit>
	Keypad_vInit();
     bea:	0e 94 98 04 	call	0x930	; 0x930 <Keypad_vInit>
	Buz_vInit('b',4);
     bee:	82 e6       	ldi	r24, 0x62	; 98
     bf0:	64 e0       	ldi	r22, 0x04	; 4
     bf2:	0e 94 49 00 	call	0x92	; 0x92 <Buz_vInit>
	unsigned char counter=0,i=0,x=0xff,Operator=0,Status=0,flag1=0,flag2=0,n=0;
	unsigned long Num_1=0,Num_2=0;
     bf6:	19 82       	std	Y+1, r1	; 0x01
     bf8:	1a 82       	std	Y+2, r1	; 0x02
     bfa:	1b 82       	std	Y+3, r1	; 0x03
     bfc:	1c 82       	std	Y+4, r1	; 0x04
     bfe:	1d 82       	std	Y+5, r1	; 0x05
     c00:	1e 82       	std	Y+6, r1	; 0x06
     c02:	1f 82       	std	Y+7, r1	; 0x07
     c04:	18 86       	std	Y+8, r1	; 0x08
	volatile unsigned long long res=0,R;
     c06:	19 86       	std	Y+9, r1	; 0x09
     c08:	1a 86       	std	Y+10, r1	; 0x0a
     c0a:	1b 86       	std	Y+11, r1	; 0x0b
     c0c:	1c 86       	std	Y+12, r1	; 0x0c
     c0e:	1d 86       	std	Y+13, r1	; 0x0d
     c10:	1e 86       	std	Y+14, r1	; 0x0e
     c12:	1f 86       	std	Y+15, r1	; 0x0f
     c14:	18 8a       	std	Y+16, r1	; 0x10
	unsigned char arr[16]={0};
     c16:	fe 01       	movw	r30, r28
     c18:	79 96       	adiw	r30, 0x19	; 25
     c1a:	80 e1       	ldi	r24, 0x10	; 16
     c1c:	df 01       	movw	r26, r30
     c1e:	1d 92       	st	X+, r1
     c20:	8a 95       	dec	r24
     c22:	e9 f7       	brne	.-6      	; 0xc1e <main+0x4c>
	LCD_vSendString("Welcome");
     c24:	80 e7       	ldi	r24, 0x70	; 112
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	0e 94 76 05 	call	0xaec	; 0xaec <LCD_vSendString>
	Buz_vTurnON('b',4);
     c2c:	82 e6       	ldi	r24, 0x62	; 98
     c2e:	64 e0       	ldi	r22, 0x04	; 4
     c30:	0e 94 5a 00 	call	0xb4	; 0xb4 <Buz_vTurnON>
     c34:	8f ef       	ldi	r24, 0xFF	; 255
     c36:	94 e3       	ldi	r25, 0x34	; 52
     c38:	ac e0       	ldi	r26, 0x0C	; 12
     c3a:	81 50       	subi	r24, 0x01	; 1
     c3c:	90 40       	sbci	r25, 0x00	; 0
     c3e:	a0 40       	sbci	r26, 0x00	; 0
     c40:	e1 f7       	brne	.-8      	; 0xc3a <main+0x68>
     c42:	00 c0       	rjmp	.+0      	; 0xc44 <main+0x72>
     c44:	00 00       	nop
	_delay_ms(500);
	LCD_vClrscreen();
     c46:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
	Buz_vTurnOFF('b',4);
     c4a:	82 e6       	ldi	r24, 0x62	; 98
     c4c:	64 e0       	ldi	r22, 0x04	; 4
     c4e:	0e 94 6b 00 	call	0xd6	; 0xd6 <Buz_vTurnOFF>
int main(void)
{
	LCD_vInit();
	Keypad_vInit();
	Buz_vInit('b',4);
	unsigned char counter=0,i=0,x=0xff,Operator=0,Status=0,flag1=0,flag2=0,n=0;
     c52:	66 24       	eor	r6, r6
     c54:	88 24       	eor	r8, r8
     c56:	44 24       	eor	r4, r4
     c58:	33 24       	eor	r3, r3
     c5a:	55 24       	eor	r5, r5
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
		{
			Status=1;
     c5c:	99 24       	eor	r9, r9
			{
				flag2=1;
				LCD_vSendChar(x);
			}	
		}		
		if ((flag1==1)&&(flag2==0))
     c5e:	22 24       	eor	r2, r2
     c60:	23 94       	inc	r2
     c62:	03 c0       	rjmp	.+6      	; 0xc6a <main+0x98>
		{
			Num_uCreate(arr,counter,&Num_2);
			flag2=2;
			counter=0;
		}
		if ((flag1==2)&&(flag2==2))
     c64:	88 24       	eor	r8, r8
     c66:	68 94       	set
     c68:	81 f8       	bld	r8, 1
	_delay_ms(500);
	LCD_vClrscreen();
	Buz_vTurnOFF('b',4);
    while(1)
    {
		Buz_vTurnOFF('b',4);
     c6a:	82 e6       	ldi	r24, 0x62	; 98
     c6c:	64 e0       	ldi	r22, 0x04	; 4
     c6e:	0e 94 6b 00 	call	0xd6	; 0xd6 <Buz_vTurnOFF>
		while((x=Keypad_uRead())==0xff);
     c72:	0e 94 d5 04 	call	0x9aa	; 0x9aa <Keypad_uRead>
     c76:	08 2f       	mov	r16, r24
     c78:	8f 3f       	cpi	r24, 0xFF	; 255
     c7a:	d9 f3       	breq	.-10     	; 0xc72 <main+0xa0>
     c7c:	8f ef       	ldi	r24, 0xFF	; 255
     c7e:	94 e3       	ldi	r25, 0x34	; 52
     c80:	ac e0       	ldi	r26, 0x0C	; 12
     c82:	81 50       	subi	r24, 0x01	; 1
     c84:	90 40       	sbci	r25, 0x00	; 0
     c86:	a0 40       	sbci	r26, 0x00	; 0
     c88:	e1 f7       	brne	.-8      	; 0xc82 <main+0xb0>
     c8a:	00 c0       	rjmp	.+0      	; 0xc8c <main+0xba>
     c8c:	00 00       	nop
		_delay_ms(500);
		if (x=='A')
     c8e:	01 34       	cpi	r16, 0x41	; 65
     c90:	b1 f4       	brne	.+44     	; 0xcbe <main+0xec>
		{
			LCD_vClrscreen();
     c92:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
			Num_1=0;
     c96:	19 82       	std	Y+1, r1	; 0x01
     c98:	1a 82       	std	Y+2, r1	; 0x02
     c9a:	1b 82       	std	Y+3, r1	; 0x03
     c9c:	1c 82       	std	Y+4, r1	; 0x04
			Num_2=0;
     c9e:	1d 82       	std	Y+5, r1	; 0x05
     ca0:	1e 82       	std	Y+6, r1	; 0x06
     ca2:	1f 82       	std	Y+7, r1	; 0x07
     ca4:	18 86       	std	Y+8, r1	; 0x08
			counter=0;
			Operator=0;
			Status=0;
			flag1=0;
			flag2=0;
			__Memset__(arr,0,16);	
     ca6:	ce 01       	movw	r24, r28
     ca8:	49 96       	adiw	r24, 0x19	; 25
     caa:	69 2d       	mov	r22, r9
     cac:	40 e1       	ldi	r20, 0x10	; 16
     cae:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
			Num_2=0;
			counter=0;
			Operator=0;
			Status=0;
			flag1=0;
			flag2=0;
     cb2:	69 2c       	mov	r6, r9
			Num_1=0;
			Num_2=0;
			counter=0;
			Operator=0;
			Status=0;
			flag1=0;
     cb4:	89 2c       	mov	r8, r9
			LCD_vClrscreen();
			Num_1=0;
			Num_2=0;
			counter=0;
			Operator=0;
			Status=0;
     cb6:	49 2c       	mov	r4, r9
		{
			LCD_vClrscreen();
			Num_1=0;
			Num_2=0;
			counter=0;
			Operator=0;
     cb8:	39 2c       	mov	r3, r9
		if (x=='A')
		{
			LCD_vClrscreen();
			Num_1=0;
			Num_2=0;
			counter=0;
     cba:	59 2c       	mov	r5, r9
     cbc:	47 c0       	rjmp	.+142    	; 0xd4c <main+0x17a>
			Status=0;
			flag1=0;
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
     cbe:	10 2f       	mov	r17, r16
     cc0:	10 53       	subi	r17, 0x30	; 48
     cc2:	1a 30       	cpi	r17, 0x0A	; 10
     cc4:	18 f5       	brcc	.+70     	; 0xd0c <main+0x13a>
		{
			Status=1;
			LCD_vSendChar(x);
     cc6:	80 2f       	mov	r24, r16
     cc8:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
			if ((flag1==0)&&(flag2==0))
     ccc:	88 20       	and	r8, r8
     cce:	69 f4       	brne	.+26     	; 0xcea <main+0x118>
     cd0:	66 20       	and	r6, r6
     cd2:	09 f0       	breq	.+2      	; 0xcd6 <main+0x104>
     cd4:	d3 c0       	rjmp	.+422    	; 0xe7c <main+0x2aa>
			{
				arr[counter]=x-48;
     cd6:	e9 e1       	ldi	r30, 0x19	; 25
     cd8:	f0 e0       	ldi	r31, 0x00	; 0
     cda:	ec 0f       	add	r30, r28
     cdc:	fd 1f       	adc	r31, r29
     cde:	e5 0d       	add	r30, r5
     ce0:	f1 1d       	adc	r31, r1
     ce2:	10 83       	st	Z, r17
				++counter;
     ce4:	53 94       	inc	r5
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
		{
			Status=1;
     ce6:	42 2c       	mov	r4, r2
			LCD_vSendChar(x);
			if ((flag1==0)&&(flag2==0))
			{
				arr[counter]=x-48;
				++counter;
     ce8:	53 c2       	rjmp	.+1190   	; 0x1190 <main+0x5be>
			}
			else if ((flag2==0)&&(flag1==2))
     cea:	66 20       	and	r6, r6
     cec:	09 f0       	breq	.+2      	; 0xcf0 <main+0x11e>
     cee:	ab c0       	rjmp	.+342    	; 0xe46 <main+0x274>
     cf0:	92 e0       	ldi	r25, 0x02	; 2
     cf2:	89 16       	cp	r8, r25
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <main+0x126>
     cf6:	a9 c0       	rjmp	.+338    	; 0xe4a <main+0x278>
			{
				arr[counter]=x-48;
     cf8:	e9 e1       	ldi	r30, 0x19	; 25
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	ec 0f       	add	r30, r28
     cfe:	fd 1f       	adc	r31, r29
     d00:	e5 0d       	add	r30, r5
     d02:	f1 1d       	adc	r31, r1
     d04:	10 83       	st	Z, r17
				++counter;
     d06:	53 94       	inc	r5
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
		{
			Status=1;
     d08:	42 2c       	mov	r4, r2
     d0a:	42 c2       	rjmp	.+1156   	; 0x1190 <main+0x5be>
			{
				arr[counter]=x-48;
				++counter;
			}
		}
		else if (x=='*')
     d0c:	0a 32       	cpi	r16, 0x2A	; 42
     d0e:	f1 f4       	brne	.+60     	; 0xd4c <main+0x17a>
		{	
			if (Status==0)
     d10:	44 20       	and	r4, r4
     d12:	a1 f4       	brne	.+40     	; 0xd3c <main+0x16a>
			{
				LCD_vClrscreen();
     d14:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
				Num_1=0;
     d18:	19 82       	std	Y+1, r1	; 0x01
     d1a:	1a 82       	std	Y+2, r1	; 0x02
     d1c:	1b 82       	std	Y+3, r1	; 0x03
     d1e:	1c 82       	std	Y+4, r1	; 0x04
				Num_2=0;
     d20:	1d 82       	std	Y+5, r1	; 0x05
     d22:	1e 82       	std	Y+6, r1	; 0x06
     d24:	1f 82       	std	Y+7, r1	; 0x07
     d26:	18 86       	std	Y+8, r1	; 0x08
				flag1=0;
				counter=0;
				Operator=0;
				flag2=0;
				__Memset__(arr,0,16);
     d28:	ce 01       	movw	r24, r28
     d2a:	49 96       	adiw	r24, 0x19	; 25
     d2c:	69 2d       	mov	r22, r9
     d2e:	40 e1       	ldi	r20, 0x10	; 16
     d30:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
			if (Status==0)
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				flag1=0;
     d34:	89 2c       	mov	r8, r9
				counter=0;
				Operator=0;
     d36:	39 2c       	mov	r3, r9
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				flag1=0;
				counter=0;
     d38:	59 2c       	mov	r5, r9
     d3a:	2a c2       	rjmp	.+1108   	; 0x1190 <main+0x5be>
			}
			else
			{
				Operator='*';
				flag1 =1;
				LCD_vSendChar(Operator);
     d3c:	8a e2       	ldi	r24, 0x2A	; 42
     d3e:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
				flag2=0;
				__Memset__(arr,0,16);
			}
			else
			{
				Operator='*';
     d42:	0f 2e       	mov	r0, r31
     d44:	fa e2       	ldi	r31, 0x2A	; 42
     d46:	3f 2e       	mov	r3, r31
     d48:	f0 2d       	mov	r31, r0
     d4a:	83 c0       	rjmp	.+262    	; 0xe52 <main+0x280>
				flag1 =1;
				LCD_vSendChar(Operator);
			}
		}
		else if (x=='/')
     d4c:	0f 32       	cpi	r16, 0x2F	; 47
     d4e:	f1 f4       	brne	.+60     	; 0xd8c <main+0x1ba>
		{	
			if (Status==0)
     d50:	44 20       	and	r4, r4
     d52:	a1 f4       	brne	.+40     	; 0xd7c <main+0x1aa>
			{
				LCD_vClrscreen();
     d54:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
				Num_1=0;
     d58:	19 82       	std	Y+1, r1	; 0x01
     d5a:	1a 82       	std	Y+2, r1	; 0x02
     d5c:	1b 82       	std	Y+3, r1	; 0x03
     d5e:	1c 82       	std	Y+4, r1	; 0x04
				Num_2=0;
     d60:	1d 82       	std	Y+5, r1	; 0x05
     d62:	1e 82       	std	Y+6, r1	; 0x06
     d64:	1f 82       	std	Y+7, r1	; 0x07
     d66:	18 86       	std	Y+8, r1	; 0x08
				counter=0;
				flag1=0;
				Operator=0;
				flag2=0;
				__Memset__(arr,0,16);
     d68:	ce 01       	movw	r24, r28
     d6a:	49 96       	adiw	r24, 0x19	; 25
     d6c:	69 2d       	mov	r22, r9
     d6e:	40 e1       	ldi	r20, 0x10	; 16
     d70:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				flag1=0;
     d74:	89 2c       	mov	r8, r9
				Operator=0;
     d76:	39 2c       	mov	r3, r9
			if (Status==0)
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
     d78:	59 2c       	mov	r5, r9
     d7a:	0a c2       	rjmp	.+1044   	; 0x1190 <main+0x5be>
			}
			else
			{
				Operator='/';
				flag1=1;
				LCD_vSendChar(Operator);
     d7c:	8f e2       	ldi	r24, 0x2F	; 47
     d7e:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
				flag2=0;
				__Memset__(arr,0,16);
			}
			else
			{
				Operator='/';
     d82:	0f 2e       	mov	r0, r31
     d84:	ff e2       	ldi	r31, 0x2F	; 47
     d86:	3f 2e       	mov	r3, r31
     d88:	f0 2d       	mov	r31, r0
     d8a:	63 c0       	rjmp	.+198    	; 0xe52 <main+0x280>
				flag1=1;
				LCD_vSendChar(Operator);
			}
		}
		else if (x=='-')
     d8c:	0d 32       	cpi	r16, 0x2D	; 45
     d8e:	f1 f4       	brne	.+60     	; 0xdcc <main+0x1fa>
		{
			if (Status==0)
     d90:	44 20       	and	r4, r4
     d92:	a1 f4       	brne	.+40     	; 0xdbc <main+0x1ea>
			{
				LCD_vClrscreen();
     d94:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
				Num_1=0;
     d98:	19 82       	std	Y+1, r1	; 0x01
     d9a:	1a 82       	std	Y+2, r1	; 0x02
     d9c:	1b 82       	std	Y+3, r1	; 0x03
     d9e:	1c 82       	std	Y+4, r1	; 0x04
				Num_2=0;
     da0:	1d 82       	std	Y+5, r1	; 0x05
     da2:	1e 82       	std	Y+6, r1	; 0x06
     da4:	1f 82       	std	Y+7, r1	; 0x07
     da6:	18 86       	std	Y+8, r1	; 0x08
				counter=0;
				Operator=0;
				flag1=0;
				flag2=0;
				__Memset__(arr,0,16);	
     da8:	ce 01       	movw	r24, r28
     daa:	49 96       	adiw	r24, 0x19	; 25
     dac:	69 2d       	mov	r22, r9
     dae:	40 e1       	ldi	r20, 0x10	; 16
     db0:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				Operator=0;
				flag1=0;
     db4:	89 2c       	mov	r8, r9
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				Operator=0;
     db6:	39 2c       	mov	r3, r9
			if (Status==0)
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
     db8:	59 2c       	mov	r5, r9
     dba:	ea c1       	rjmp	.+980    	; 0x1190 <main+0x5be>
			}
			else
			{
				Operator='-';
				flag1=1;
				LCD_vSendChar(Operator);
     dbc:	8d e2       	ldi	r24, 0x2D	; 45
     dbe:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
				flag2=0;
				__Memset__(arr,0,16);	
			}
			else
			{
				Operator='-';
     dc2:	0f 2e       	mov	r0, r31
     dc4:	fd e2       	ldi	r31, 0x2D	; 45
     dc6:	3f 2e       	mov	r3, r31
     dc8:	f0 2d       	mov	r31, r0
     dca:	43 c0       	rjmp	.+134    	; 0xe52 <main+0x280>
				flag1=1;
				LCD_vSendChar(Operator);
			}
		}
		else if (x=='+')
     dcc:	0b 32       	cpi	r16, 0x2B	; 43
     dce:	f1 f4       	brne	.+60     	; 0xe0c <main+0x23a>
		{
			if (Status==0)
     dd0:	44 20       	and	r4, r4
     dd2:	a1 f4       	brne	.+40     	; 0xdfc <main+0x22a>
			{
				LCD_vClrscreen();
     dd4:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
				Num_1=0;
     dd8:	19 82       	std	Y+1, r1	; 0x01
     dda:	1a 82       	std	Y+2, r1	; 0x02
     ddc:	1b 82       	std	Y+3, r1	; 0x03
     dde:	1c 82       	std	Y+4, r1	; 0x04
				Num_2=0;
     de0:	1d 82       	std	Y+5, r1	; 0x05
     de2:	1e 82       	std	Y+6, r1	; 0x06
     de4:	1f 82       	std	Y+7, r1	; 0x07
     de6:	18 86       	std	Y+8, r1	; 0x08
				counter=0;
				Operator=0;
				flag1=0;
				flag2=0;
				__Memset__(arr,0,16);	
     de8:	ce 01       	movw	r24, r28
     dea:	49 96       	adiw	r24, 0x19	; 25
     dec:	69 2d       	mov	r22, r9
     dee:	40 e1       	ldi	r20, 0x10	; 16
     df0:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				Operator=0;
				flag1=0;
     df4:	89 2c       	mov	r8, r9
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				Operator=0;
     df6:	39 2c       	mov	r3, r9
			if (Status==0)
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
     df8:	59 2c       	mov	r5, r9
     dfa:	ca c1       	rjmp	.+916    	; 0x1190 <main+0x5be>
			}
			else
			{
				Operator='+';
				flag1=1;
				LCD_vSendChar(Operator);
     dfc:	8b e2       	ldi	r24, 0x2B	; 43
     dfe:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
				flag2=0;
				__Memset__(arr,0,16);	
			}
			else
			{
				Operator='+';
     e02:	0f 2e       	mov	r0, r31
     e04:	fb e2       	ldi	r31, 0x2B	; 43
     e06:	3f 2e       	mov	r3, r31
     e08:	f0 2d       	mov	r31, r0
     e0a:	23 c0       	rjmp	.+70     	; 0xe52 <main+0x280>
				flag1=1;
				LCD_vSendChar(Operator);
			}
		}
		else if (x=='=')
     e0c:	0d 33       	cpi	r16, 0x3D	; 61
     e0e:	f1 f4       	brne	.+60     	; 0xe4c <main+0x27a>
		{
			if (Status==0)
     e10:	44 20       	and	r4, r4
     e12:	a1 f4       	brne	.+40     	; 0xe3c <main+0x26a>
			{
				LCD_vClrscreen();
     e14:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
				Num_1=0;
     e18:	19 82       	std	Y+1, r1	; 0x01
     e1a:	1a 82       	std	Y+2, r1	; 0x02
     e1c:	1b 82       	std	Y+3, r1	; 0x03
     e1e:	1c 82       	std	Y+4, r1	; 0x04
				Num_2=0;
     e20:	1d 82       	std	Y+5, r1	; 0x05
     e22:	1e 82       	std	Y+6, r1	; 0x06
     e24:	1f 82       	std	Y+7, r1	; 0x07
     e26:	18 86       	std	Y+8, r1	; 0x08
				counter=0;
				Operator=0;
				flag1=0;
				flag2=0;
				__Memset__(arr,0,16);	
     e28:	ce 01       	movw	r24, r28
     e2a:	49 96       	adiw	r24, 0x19	; 25
     e2c:	69 2d       	mov	r22, r9
     e2e:	40 e1       	ldi	r20, 0x10	; 16
     e30:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				Operator=0;
				flag1=0;
     e34:	89 2c       	mov	r8, r9
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
				Operator=0;
     e36:	39 2c       	mov	r3, r9
			if (Status==0)
			{
				LCD_vClrscreen();
				Num_1=0;
				Num_2=0;
				counter=0;
     e38:	59 2c       	mov	r5, r9
     e3a:	aa c1       	rjmp	.+852    	; 0x1190 <main+0x5be>
				__Memset__(arr,0,16);	
			}
			else
			{
				flag2=1;
				LCD_vSendChar(x);
     e3c:	8d e3       	ldi	r24, 0x3D	; 61
     e3e:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
				flag2=0;
				__Memset__(arr,0,16);	
			}
			else
			{
				flag2=1;
     e42:	62 2c       	mov	r6, r2
     e44:	03 c0       	rjmp	.+6      	; 0xe4c <main+0x27a>
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
		{
			Status=1;
     e46:	42 2c       	mov	r4, r2
     e48:	01 c0       	rjmp	.+2      	; 0xe4c <main+0x27a>
     e4a:	42 2c       	mov	r4, r2
			{
				flag2=1;
				LCD_vSendChar(x);
			}	
		}		
		if ((flag1==1)&&(flag2==0))
     e4c:	a1 e0       	ldi	r26, 0x01	; 1
     e4e:	8a 16       	cp	r8, r26
     e50:	c1 f4       	brne	.+48     	; 0xe82 <main+0x2b0>
     e52:	66 20       	and	r6, r6
     e54:	a9 f4       	brne	.+42     	; 0xe80 <main+0x2ae>
		{			
			Num_uCreate(arr,counter,&Num_1);
     e56:	ce 01       	movw	r24, r28
     e58:	49 96       	adiw	r24, 0x19	; 25
     e5a:	65 2d       	mov	r22, r5
     e5c:	ae 01       	movw	r20, r28
     e5e:	4f 5f       	subi	r20, 0xFF	; 255
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	0e 94 9c 00 	call	0x138	; 0x138 <Num_uCreate>
			flag1=2;
			counter=0;
			__Memset__(arr,0,16);
     e66:	ce 01       	movw	r24, r28
     e68:	49 96       	adiw	r24, 0x19	; 25
     e6a:	69 2d       	mov	r22, r9
     e6c:	40 e1       	ldi	r20, 0x10	; 16
     e6e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__Memset__>
			}	
		}		
		if ((flag1==1)&&(flag2==0))
		{			
			Num_uCreate(arr,counter,&Num_1);
			flag1=2;
     e72:	88 24       	eor	r8, r8
     e74:	68 94       	set
     e76:	81 f8       	bld	r8, 1
			counter=0;
     e78:	59 2c       	mov	r5, r9
     e7a:	1b c0       	rjmp	.+54     	; 0xeb2 <main+0x2e0>
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
		{
			Status=1;
     e7c:	42 2c       	mov	r4, r2
     e7e:	01 c0       	rjmp	.+2      	; 0xe82 <main+0x2b0>
			{
				flag2=1;
				LCD_vSendChar(x);
			}	
		}		
		if ((flag1==1)&&(flag2==0))
     e80:	82 2c       	mov	r8, r2
			Num_uCreate(arr,counter,&Num_1);
			flag1=2;
			counter=0;
			__Memset__(arr,0,16);
		}
		 if ((flag2==1)&&(flag1==2))
     e82:	b1 e0       	ldi	r27, 0x01	; 1
     e84:	6b 16       	cp	r6, r27
     e86:	89 f4       	brne	.+34     	; 0xeaa <main+0x2d8>
     e88:	82 e0       	ldi	r24, 0x02	; 2
     e8a:	88 16       	cp	r8, r24
     e8c:	09 f0       	breq	.+2      	; 0xe90 <main+0x2be>
     e8e:	ed ce       	rjmp	.-550    	; 0xc6a <main+0x98>
		{
			Num_uCreate(arr,counter,&Num_2);
     e90:	ce 01       	movw	r24, r28
     e92:	49 96       	adiw	r24, 0x19	; 25
     e94:	65 2d       	mov	r22, r5
     e96:	ae 01       	movw	r20, r28
     e98:	4b 5f       	subi	r20, 0xFB	; 251
     e9a:	5f 4f       	sbci	r21, 0xFF	; 255
     e9c:	0e 94 9c 00 	call	0x138	; 0x138 <Num_uCreate>
			flag2=2;
     ea0:	66 24       	eor	r6, r6
     ea2:	68 94       	set
     ea4:	61 f8       	bld	r6, 1
			counter=0;
     ea6:	59 2c       	mov	r5, r9
     ea8:	08 c0       	rjmp	.+16     	; 0xeba <main+0x2e8>
		}
		if ((flag1==2)&&(flag2==2))
     eaa:	92 e0       	ldi	r25, 0x02	; 2
     eac:	89 16       	cp	r8, r25
     eae:	09 f0       	breq	.+2      	; 0xeb2 <main+0x2e0>
     eb0:	dc ce       	rjmp	.-584    	; 0xc6a <main+0x98>
     eb2:	a2 e0       	ldi	r26, 0x02	; 2
     eb4:	6a 16       	cp	r6, r26
     eb6:	09 f0       	breq	.+2      	; 0xeba <main+0x2e8>
     eb8:	d5 ce       	rjmp	.-598    	; 0xc64 <main+0x92>
		{
			switch (Operator)
     eba:	bb e2       	ldi	r27, 0x2B	; 43
     ebc:	3b 16       	cp	r3, r27
     ebe:	09 f4       	brne	.+2      	; 0xec2 <main+0x2f0>
     ec0:	80 c0       	rjmp	.+256    	; 0xfc2 <main+0x3f0>
     ec2:	b3 15       	cp	r27, r3
     ec4:	28 f0       	brcs	.+10     	; 0xed0 <main+0x2fe>
     ec6:	8a e2       	ldi	r24, 0x2A	; 42
     ec8:	38 16       	cp	r3, r24
     eca:	09 f0       	breq	.+2      	; 0xece <main+0x2fc>
     ecc:	8e c0       	rjmp	.+284    	; 0xfea <main+0x418>
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <main+0x310>
     ed0:	9d e2       	ldi	r25, 0x2D	; 45
     ed2:	39 16       	cp	r3, r25
     ed4:	09 f4       	brne	.+2      	; 0xed8 <main+0x306>
     ed6:	4a c0       	rjmp	.+148    	; 0xf6c <main+0x39a>
     ed8:	af e2       	ldi	r26, 0x2F	; 47
     eda:	3a 16       	cp	r3, r26
     edc:	09 f0       	breq	.+2      	; 0xee0 <main+0x30e>
     ede:	85 c0       	rjmp	.+266    	; 0xfea <main+0x418>
     ee0:	15 c0       	rjmp	.+42     	; 0xf0c <main+0x33a>
			{
				case '*':
				res=Num_1*Num_2;
     ee2:	6d 81       	ldd	r22, Y+5	; 0x05
     ee4:	7e 81       	ldd	r23, Y+6	; 0x06
     ee6:	8f 81       	ldd	r24, Y+7	; 0x07
     ee8:	98 85       	ldd	r25, Y+8	; 0x08
     eea:	29 81       	ldd	r18, Y+1	; 0x01
     eec:	3a 81       	ldd	r19, Y+2	; 0x02
     eee:	4b 81       	ldd	r20, Y+3	; 0x03
     ef0:	5c 81       	ldd	r21, Y+4	; 0x04
     ef2:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
     ef6:	8b 01       	movw	r16, r22
     ef8:	9c 01       	movw	r18, r24
     efa:	09 87       	std	Y+9, r16	; 0x09
     efc:	1a 87       	std	Y+10, r17	; 0x0a
     efe:	2b 87       	std	Y+11, r18	; 0x0b
     f00:	3c 87       	std	Y+12, r19	; 0x0c
     f02:	9d 86       	std	Y+13, r9	; 0x0d
     f04:	9e 86       	std	Y+14, r9	; 0x0e
     f06:	9f 86       	std	Y+15, r9	; 0x0f
     f08:	98 8a       	std	Y+16, r9	; 0x10
				break;
     f0a:	6f c0       	rjmp	.+222    	; 0xfea <main+0x418>
				case '/':
				if (Num_2==0)
     f0c:	0d 81       	ldd	r16, Y+5	; 0x05
     f0e:	1e 81       	ldd	r17, Y+6	; 0x06
     f10:	2f 81       	ldd	r18, Y+7	; 0x07
     f12:	38 85       	ldd	r19, Y+8	; 0x08
     f14:	01 15       	cp	r16, r1
     f16:	11 05       	cpc	r17, r1
     f18:	21 05       	cpc	r18, r1
     f1a:	31 05       	cpc	r19, r1
     f1c:	a1 f4       	brne	.+40     	; 0xf46 <main+0x374>
				{
					LCD_vClrscreen();
     f1e:	0e 94 a4 05 	call	0xb48	; 0xb48 <LCD_vClrscreen>
					LCD_vSendString("Error: Div 0");
     f22:	88 e7       	ldi	r24, 0x78	; 120
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	0e 94 76 05 	call	0xaec	; 0xaec <LCD_vSendString>
					Buz_vTurnON('b',4);
     f2a:	82 e6       	ldi	r24, 0x62	; 98
     f2c:	64 e0       	ldi	r22, 0x04	; 4
     f2e:	0e 94 5a 00 	call	0xb4	; 0xb4 <Buz_vTurnON>
     f32:	8f ef       	ldi	r24, 0xFF	; 255
     f34:	99 e6       	ldi	r25, 0x69	; 105
     f36:	a8 e1       	ldi	r26, 0x18	; 24
     f38:	81 50       	subi	r24, 0x01	; 1
     f3a:	90 40       	sbci	r25, 0x00	; 0
     f3c:	a0 40       	sbci	r26, 0x00	; 0
     f3e:	e1 f7       	brne	.-8      	; 0xf38 <main+0x366>
     f40:	00 c0       	rjmp	.+0      	; 0xf42 <main+0x370>
     f42:	00 00       	nop
     f44:	52 c0       	rjmp	.+164    	; 0xfea <main+0x418>
					_delay_ms(1000);
				}
				else
				{				
					res=Num_1/Num_2;
     f46:	69 81       	ldd	r22, Y+1	; 0x01
     f48:	7a 81       	ldd	r23, Y+2	; 0x02
     f4a:	8b 81       	ldd	r24, Y+3	; 0x03
     f4c:	9c 81       	ldd	r25, Y+4	; 0x04
     f4e:	a9 01       	movw	r20, r18
     f50:	98 01       	movw	r18, r16
     f52:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
     f56:	89 01       	movw	r16, r18
     f58:	9a 01       	movw	r18, r20
     f5a:	09 87       	std	Y+9, r16	; 0x09
     f5c:	1a 87       	std	Y+10, r17	; 0x0a
     f5e:	2b 87       	std	Y+11, r18	; 0x0b
     f60:	3c 87       	std	Y+12, r19	; 0x0c
     f62:	9d 86       	std	Y+13, r9	; 0x0d
     f64:	9e 86       	std	Y+14, r9	; 0x0e
     f66:	9f 86       	std	Y+15, r9	; 0x0f
     f68:	98 8a       	std	Y+16, r9	; 0x10
     f6a:	3f c0       	rjmp	.+126    	; 0xfea <main+0x418>
				}
				break;
				case '-':
				if (Num_1>=Num_2)
     f6c:	89 81       	ldd	r24, Y+1	; 0x01
     f6e:	9a 81       	ldd	r25, Y+2	; 0x02
     f70:	ab 81       	ldd	r26, Y+3	; 0x03
     f72:	bc 81       	ldd	r27, Y+4	; 0x04
     f74:	4d 81       	ldd	r20, Y+5	; 0x05
     f76:	5e 81       	ldd	r21, Y+6	; 0x06
     f78:	6f 81       	ldd	r22, Y+7	; 0x07
     f7a:	78 85       	ldd	r23, Y+8	; 0x08
     f7c:	84 17       	cp	r24, r20
     f7e:	95 07       	cpc	r25, r21
     f80:	a6 07       	cpc	r26, r22
     f82:	b7 07       	cpc	r27, r23
     f84:	78 f0       	brcs	.+30     	; 0xfa4 <main+0x3d2>
				{
					res=Num_1-Num_2;
     f86:	84 1b       	sub	r24, r20
     f88:	95 0b       	sbc	r25, r21
     f8a:	a6 0b       	sbc	r26, r22
     f8c:	b7 0b       	sbc	r27, r23
     f8e:	8c 01       	movw	r16, r24
     f90:	9d 01       	movw	r18, r26
     f92:	89 87       	std	Y+9, r24	; 0x09
     f94:	1a 87       	std	Y+10, r17	; 0x0a
     f96:	2b 87       	std	Y+11, r18	; 0x0b
     f98:	3c 87       	std	Y+12, r19	; 0x0c
     f9a:	9d 86       	std	Y+13, r9	; 0x0d
     f9c:	9e 86       	std	Y+14, r9	; 0x0e
     f9e:	9f 86       	std	Y+15, r9	; 0x0f
     fa0:	98 8a       	std	Y+16, r9	; 0x10
     fa2:	23 c0       	rjmp	.+70     	; 0xfea <main+0x418>
				}
				else
				{
					res=Num_2-Num_1;
     fa4:	48 1b       	sub	r20, r24
     fa6:	59 0b       	sbc	r21, r25
     fa8:	6a 0b       	sbc	r22, r26
     faa:	7b 0b       	sbc	r23, r27
     fac:	8a 01       	movw	r16, r20
     fae:	9b 01       	movw	r18, r22
     fb0:	09 87       	std	Y+9, r16	; 0x09
     fb2:	1a 87       	std	Y+10, r17	; 0x0a
     fb4:	2b 87       	std	Y+11, r18	; 0x0b
     fb6:	3c 87       	std	Y+12, r19	; 0x0c
     fb8:	9d 86       	std	Y+13, r9	; 0x0d
     fba:	9e 86       	std	Y+14, r9	; 0x0e
     fbc:	9f 86       	std	Y+15, r9	; 0x0f
     fbe:	98 8a       	std	Y+16, r9	; 0x10
     fc0:	14 c0       	rjmp	.+40     	; 0xfea <main+0x418>
				}				
				break;
				case '+':
				res=Num_1+Num_2;
     fc2:	0d 81       	ldd	r16, Y+5	; 0x05
     fc4:	1e 81       	ldd	r17, Y+6	; 0x06
     fc6:	2f 81       	ldd	r18, Y+7	; 0x07
     fc8:	38 85       	ldd	r19, Y+8	; 0x08
     fca:	89 81       	ldd	r24, Y+1	; 0x01
     fcc:	9a 81       	ldd	r25, Y+2	; 0x02
     fce:	ab 81       	ldd	r26, Y+3	; 0x03
     fd0:	bc 81       	ldd	r27, Y+4	; 0x04
     fd2:	08 0f       	add	r16, r24
     fd4:	19 1f       	adc	r17, r25
     fd6:	2a 1f       	adc	r18, r26
     fd8:	3b 1f       	adc	r19, r27
     fda:	09 87       	std	Y+9, r16	; 0x09
     fdc:	1a 87       	std	Y+10, r17	; 0x0a
     fde:	2b 87       	std	Y+11, r18	; 0x0b
     fe0:	3c 87       	std	Y+12, r19	; 0x0c
     fe2:	9d 86       	std	Y+13, r9	; 0x0d
     fe4:	9e 86       	std	Y+14, r9	; 0x0e
     fe6:	9f 86       	std	Y+15, r9	; 0x0f
     fe8:	98 8a       	std	Y+16, r9	; 0x10
				break;				
			}			
			if (res==0)
     fea:	79 85       	ldd	r23, Y+9	; 0x09
     fec:	8a 85       	ldd	r24, Y+10	; 0x0a
     fee:	6b 85       	ldd	r22, Y+11	; 0x0b
     ff0:	5c 85       	ldd	r21, Y+12	; 0x0c
     ff2:	4d 85       	ldd	r20, Y+13	; 0x0d
     ff4:	3e 85       	ldd	r19, Y+14	; 0x0e
     ff6:	2f 85       	ldd	r18, Y+15	; 0x0f
     ff8:	98 89       	ldd	r25, Y+16	; 0x10
     ffa:	87 2b       	or	r24, r23
     ffc:	86 2b       	or	r24, r22
     ffe:	85 2b       	or	r24, r21
    1000:	84 2b       	or	r24, r20
    1002:	83 2b       	or	r24, r19
    1004:	82 2b       	or	r24, r18
    1006:	89 2b       	or	r24, r25
    1008:	a9 f4       	brne	.+42     	; 0x1034 <main+0x462>
			{
				if (Num_2!=0 && Operator!='/')
    100a:	8d 81       	ldd	r24, Y+5	; 0x05
    100c:	9e 81       	ldd	r25, Y+6	; 0x06
    100e:	af 81       	ldd	r26, Y+7	; 0x07
    1010:	b8 85       	ldd	r27, Y+8	; 0x08
    1012:	00 97       	sbiw	r24, 0x00	; 0
    1014:	a1 05       	cpc	r26, r1
    1016:	b1 05       	cpc	r27, r1
    1018:	09 f4       	brne	.+2      	; 0x101c <main+0x44a>
    101a:	27 ce       	rjmp	.-946    	; 0xc6a <main+0x98>
    101c:	9f e2       	ldi	r25, 0x2F	; 47
    101e:	39 16       	cp	r3, r25
    1020:	09 f4       	brne	.+2      	; 0x1024 <main+0x452>
    1022:	23 ce       	rjmp	.-954    	; 0xc6a <main+0x98>
				{
					LCD_vMoveCursor(2,16);
    1024:	82 e0       	ldi	r24, 0x02	; 2
    1026:	60 e1       	ldi	r22, 0x10	; 16
    1028:	0e 94 85 05 	call	0xb0a	; 0xb0a <LCD_vMoveCursor>
					LCD_vSendChar('0');
    102c:	80 e3       	ldi	r24, 0x30	; 48
    102e:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
    1032:	1b ce       	rjmp	.-970    	; 0xc6a <main+0x98>
				}				
			}
			else if (res>0)
    1034:	79 85       	ldd	r23, Y+9	; 0x09
    1036:	8a 85       	ldd	r24, Y+10	; 0x0a
    1038:	6b 85       	ldd	r22, Y+11	; 0x0b
    103a:	5c 85       	ldd	r21, Y+12	; 0x0c
    103c:	4d 85       	ldd	r20, Y+13	; 0x0d
    103e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1040:	2f 85       	ldd	r18, Y+15	; 0x0f
    1042:	98 89       	ldd	r25, Y+16	; 0x10
    1044:	87 2b       	or	r24, r23
    1046:	86 2b       	or	r24, r22
    1048:	85 2b       	or	r24, r21
    104a:	84 2b       	or	r24, r20
    104c:	83 2b       	or	r24, r19
    104e:	82 2b       	or	r24, r18
    1050:	89 2b       	or	r24, r25
    1052:	09 f4       	brne	.+2      	; 0x1056 <main+0x484>
    1054:	0a ce       	rjmp	.-1004   	; 0xc6a <main+0x98>
			{
				LCD_vMoveCursor(2,16);
    1056:	82 e0       	ldi	r24, 0x02	; 2
    1058:	60 e1       	ldi	r22, 0x10	; 16
    105a:	0e 94 85 05 	call	0xb0a	; 0xb0a <LCD_vMoveCursor>
				LCD_vSendCmd(SHIFT_CURSOR_TO_LEFT_WHILE_WRITING);
    105e:	84 e0       	ldi	r24, 0x04	; 4
    1060:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
				for (R=res;R>0;R/=10)
    1064:	79 85       	ldd	r23, Y+9	; 0x09
    1066:	6a 85       	ldd	r22, Y+10	; 0x0a
    1068:	5b 85       	ldd	r21, Y+11	; 0x0b
    106a:	4c 85       	ldd	r20, Y+12	; 0x0c
    106c:	3d 85       	ldd	r19, Y+13	; 0x0d
    106e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1070:	9f 85       	ldd	r25, Y+15	; 0x0f
    1072:	88 89       	ldd	r24, Y+16	; 0x10
    1074:	79 8b       	std	Y+17, r23	; 0x11
    1076:	6a 8b       	std	Y+18, r22	; 0x12
    1078:	5b 8b       	std	Y+19, r21	; 0x13
    107a:	4c 8b       	std	Y+20, r20	; 0x14
    107c:	3d 8b       	std	Y+21, r19	; 0x15
    107e:	2e 8b       	std	Y+22, r18	; 0x16
    1080:	9f 8b       	std	Y+23, r25	; 0x17
    1082:	88 8f       	std	Y+24, r24	; 0x18
    1084:	79 89       	ldd	r23, Y+17	; 0x11
    1086:	8a 89       	ldd	r24, Y+18	; 0x12
    1088:	6b 89       	ldd	r22, Y+19	; 0x13
    108a:	5c 89       	ldd	r21, Y+20	; 0x14
    108c:	4d 89       	ldd	r20, Y+21	; 0x15
    108e:	3e 89       	ldd	r19, Y+22	; 0x16
    1090:	2f 89       	ldd	r18, Y+23	; 0x17
    1092:	98 8d       	ldd	r25, Y+24	; 0x18
    1094:	87 2b       	or	r24, r23
    1096:	86 2b       	or	r24, r22
    1098:	85 2b       	or	r24, r21
    109a:	84 2b       	or	r24, r20
    109c:	83 2b       	or	r24, r19
    109e:	82 2b       	or	r24, r18
    10a0:	89 2b       	or	r24, r25
    10a2:	71 f1       	breq	.+92     	; 0x1100 <main+0x52e>
				{
					counter++;
    10a4:	53 94       	inc	r5
			}
			else if (res>0)
			{
				LCD_vMoveCursor(2,16);
				LCD_vSendCmd(SHIFT_CURSOR_TO_LEFT_WHILE_WRITING);
				for (R=res;R>0;R/=10)
    10a6:	29 89       	ldd	r18, Y+17	; 0x11
    10a8:	3a 89       	ldd	r19, Y+18	; 0x12
    10aa:	4b 89       	ldd	r20, Y+19	; 0x13
    10ac:	5c 89       	ldd	r21, Y+20	; 0x14
    10ae:	6d 89       	ldd	r22, Y+21	; 0x15
    10b0:	7e 89       	ldd	r23, Y+22	; 0x16
    10b2:	8f 89       	ldd	r24, Y+23	; 0x17
    10b4:	98 8d       	ldd	r25, Y+24	; 0x18
    10b6:	0f 2e       	mov	r0, r31
    10b8:	fa e0       	ldi	r31, 0x0A	; 10
    10ba:	af 2e       	mov	r10, r31
    10bc:	f0 2d       	mov	r31, r0
    10be:	b9 2c       	mov	r11, r9
    10c0:	c9 2c       	mov	r12, r9
    10c2:	d9 2c       	mov	r13, r9
    10c4:	e9 2c       	mov	r14, r9
    10c6:	f9 2c       	mov	r15, r9
    10c8:	09 2d       	mov	r16, r9
    10ca:	19 2d       	mov	r17, r9
    10cc:	0e 94 ca 08 	call	0x1194	; 0x1194 <__udivdi3>
    10d0:	29 8b       	std	Y+17, r18	; 0x11
    10d2:	3a 8b       	std	Y+18, r19	; 0x12
    10d4:	4b 8b       	std	Y+19, r20	; 0x13
    10d6:	5c 8b       	std	Y+20, r21	; 0x14
    10d8:	6d 8b       	std	Y+21, r22	; 0x15
    10da:	7e 8b       	std	Y+22, r23	; 0x16
    10dc:	8f 8b       	std	Y+23, r24	; 0x17
    10de:	98 8f       	std	Y+24, r25	; 0x18
    10e0:	79 89       	ldd	r23, Y+17	; 0x11
    10e2:	8a 89       	ldd	r24, Y+18	; 0x12
    10e4:	6b 89       	ldd	r22, Y+19	; 0x13
    10e6:	5c 89       	ldd	r21, Y+20	; 0x14
    10e8:	4d 89       	ldd	r20, Y+21	; 0x15
    10ea:	3e 89       	ldd	r19, Y+22	; 0x16
    10ec:	2f 89       	ldd	r18, Y+23	; 0x17
    10ee:	98 8d       	ldd	r25, Y+24	; 0x18
    10f0:	87 2b       	or	r24, r23
    10f2:	86 2b       	or	r24, r22
    10f4:	85 2b       	or	r24, r21
    10f6:	84 2b       	or	r24, r20
    10f8:	83 2b       	or	r24, r19
    10fa:	82 2b       	or	r24, r18
    10fc:	89 2b       	or	r24, r25
    10fe:	91 f6       	brne	.-92     	; 0x10a4 <main+0x4d2>
				{
					counter++;
				}
				for (i=0;i<counter;i++)
    1100:	55 20       	and	r5, r5
    1102:	79 f1       	breq	.+94     	; 0x1162 <main+0x590>
    1104:	79 2c       	mov	r7, r9
				{
					n=res%10;
    1106:	29 85       	ldd	r18, Y+9	; 0x09
    1108:	3a 85       	ldd	r19, Y+10	; 0x0a
    110a:	4b 85       	ldd	r20, Y+11	; 0x0b
    110c:	5c 85       	ldd	r21, Y+12	; 0x0c
    110e:	6d 85       	ldd	r22, Y+13	; 0x0d
    1110:	7e 85       	ldd	r23, Y+14	; 0x0e
    1112:	8f 85       	ldd	r24, Y+15	; 0x0f
    1114:	98 89       	ldd	r25, Y+16	; 0x10
    1116:	0f 2e       	mov	r0, r31
    1118:	fa e0       	ldi	r31, 0x0A	; 10
    111a:	af 2e       	mov	r10, r31
    111c:	f0 2d       	mov	r31, r0
    111e:	b9 2c       	mov	r11, r9
    1120:	c9 2c       	mov	r12, r9
    1122:	d9 2c       	mov	r13, r9
    1124:	e9 2c       	mov	r14, r9
    1126:	f9 2c       	mov	r15, r9
    1128:	09 2d       	mov	r16, r9
    112a:	19 2d       	mov	r17, r9
    112c:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <__umoddi3>
					LCD_vSendChar(n+48);	
    1130:	82 2f       	mov	r24, r18
    1132:	80 5d       	subi	r24, 0xD0	; 208
    1134:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
					res/=10;				
    1138:	29 85       	ldd	r18, Y+9	; 0x09
    113a:	3a 85       	ldd	r19, Y+10	; 0x0a
    113c:	4b 85       	ldd	r20, Y+11	; 0x0b
    113e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1140:	6d 85       	ldd	r22, Y+13	; 0x0d
    1142:	7e 85       	ldd	r23, Y+14	; 0x0e
    1144:	8f 85       	ldd	r24, Y+15	; 0x0f
    1146:	98 89       	ldd	r25, Y+16	; 0x10
    1148:	0e 94 ca 08 	call	0x1194	; 0x1194 <__udivdi3>
    114c:	29 87       	std	Y+9, r18	; 0x09
    114e:	3a 87       	std	Y+10, r19	; 0x0a
    1150:	4b 87       	std	Y+11, r20	; 0x0b
    1152:	5c 87       	std	Y+12, r21	; 0x0c
    1154:	6d 87       	std	Y+13, r22	; 0x0d
    1156:	7e 87       	std	Y+14, r23	; 0x0e
    1158:	8f 87       	std	Y+15, r24	; 0x0f
    115a:	98 8b       	std	Y+16, r25	; 0x10
				LCD_vSendCmd(SHIFT_CURSOR_TO_LEFT_WHILE_WRITING);
				for (R=res;R>0;R/=10)
				{
					counter++;
				}
				for (i=0;i<counter;i++)
    115c:	73 94       	inc	r7
    115e:	75 14       	cp	r7, r5
    1160:	91 f6       	brne	.-92     	; 0x1106 <main+0x534>
				{
					n=res%10;
					LCD_vSendChar(n+48);	
					res/=10;				
				}
				if ((Num_2>Num_1)&&(Operator=='-'))
    1162:	4d 81       	ldd	r20, Y+5	; 0x05
    1164:	5e 81       	ldd	r21, Y+6	; 0x06
    1166:	6f 81       	ldd	r22, Y+7	; 0x07
    1168:	78 85       	ldd	r23, Y+8	; 0x08
    116a:	89 81       	ldd	r24, Y+1	; 0x01
    116c:	9a 81       	ldd	r25, Y+2	; 0x02
    116e:	ab 81       	ldd	r26, Y+3	; 0x03
    1170:	bc 81       	ldd	r27, Y+4	; 0x04
    1172:	84 17       	cp	r24, r20
    1174:	95 07       	cpc	r25, r21
    1176:	a6 07       	cpc	r26, r22
    1178:	b7 07       	cpc	r27, r23
    117a:	30 f4       	brcc	.+12     	; 0x1188 <main+0x5b6>
    117c:	ad e2       	ldi	r26, 0x2D	; 45
    117e:	3a 16       	cp	r3, r26
    1180:	19 f4       	brne	.+6      	; 0x1188 <main+0x5b6>
				{
					LCD_vSendChar('-');
    1182:	8d e2       	ldi	r24, 0x2D	; 45
    1184:	0e 94 34 05 	call	0xa68	; 0xa68 <LCD_vSendChar>
				}
				LCD_vSendCmd(SHIFT_CURSOR_TO_RIGHT_WHILE_WRITING);
    1188:	86 e0       	ldi	r24, 0x06	; 6
    118a:	0e 94 52 05 	call	0xaa4	; 0xaa4 <LCD_vSendCmd>
    118e:	6d cd       	rjmp	.-1318   	; 0xc6a <main+0x98>
			flag2=0;
			__Memset__(arr,0,16);	
		}
		if (x >= '0' && x <= '9')
		{
			Status=1;
    1190:	69 2c       	mov	r6, r9
    1192:	8b ce       	rjmp	.-746    	; 0xeaa <main+0x2d8>

00001194 <__udivdi3>:
    1194:	a4 e3       	ldi	r26, 0x34	; 52
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e0 ed       	ldi	r30, 0xD0	; 208
    119a:	f8 e0       	ldi	r31, 0x08	; 8
    119c:	0c 94 ef 14 	jmp	0x29de	; 0x29de <__prologue_saves__+0x2>
    11a0:	29 8b       	std	Y+17, r18	; 0x11
    11a2:	3a 8b       	std	Y+18, r19	; 0x12
    11a4:	4b 8b       	std	Y+19, r20	; 0x13
    11a6:	5c 8b       	std	Y+20, r21	; 0x14
    11a8:	6d 8b       	std	Y+21, r22	; 0x15
    11aa:	7e 8b       	std	Y+22, r23	; 0x16
    11ac:	8f 8b       	std	Y+23, r24	; 0x17
    11ae:	98 8f       	std	Y+24, r25	; 0x18
    11b0:	a9 86       	std	Y+9, r10	; 0x09
    11b2:	ba 86       	std	Y+10, r11	; 0x0a
    11b4:	cb 86       	std	Y+11, r12	; 0x0b
    11b6:	dc 86       	std	Y+12, r13	; 0x0c
    11b8:	ed 86       	std	Y+13, r14	; 0x0d
    11ba:	fe 86       	std	Y+14, r15	; 0x0e
    11bc:	0f 87       	std	Y+15, r16	; 0x0f
    11be:	18 8b       	std	Y+16, r17	; 0x10
    11c0:	89 84       	ldd	r8, Y+9	; 0x09
    11c2:	9a 84       	ldd	r9, Y+10	; 0x0a
    11c4:	ab 84       	ldd	r10, Y+11	; 0x0b
    11c6:	bc 84       	ldd	r11, Y+12	; 0x0c
    11c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    11ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    11cc:	af 85       	ldd	r26, Y+15	; 0x0f
    11ce:	b8 89       	ldd	r27, Y+16	; 0x10
    11d0:	09 89       	ldd	r16, Y+17	; 0x11
    11d2:	1a 89       	ldd	r17, Y+18	; 0x12
    11d4:	2b 89       	ldd	r18, Y+19	; 0x13
    11d6:	3c 89       	ldd	r19, Y+20	; 0x14
    11d8:	0d a3       	lds	r16, 0x5d
    11da:	1e a3       	lds	r17, 0x5e
    11dc:	2f a3       	lds	r18, 0x5f
    11de:	38 a7       	lds	r19, 0x78
    11e0:	cd 88       	ldd	r12, Y+21	; 0x15
    11e2:	de 88       	ldd	r13, Y+22	; 0x16
    11e4:	ef 88       	ldd	r14, Y+23	; 0x17
    11e6:	f8 8c       	ldd	r15, Y+24	; 0x18
    11e8:	00 97       	sbiw	r24, 0x00	; 0
    11ea:	a1 05       	cpc	r26, r1
    11ec:	b1 05       	cpc	r27, r1
    11ee:	09 f0       	breq	.+2      	; 0x11f2 <__udivdi3+0x5e>
    11f0:	b5 c3       	rjmp	.+1898   	; 0x195c <__udivdi3+0x7c8>
    11f2:	c8 14       	cp	r12, r8
    11f4:	d9 04       	cpc	r13, r9
    11f6:	ea 04       	cpc	r14, r10
    11f8:	fb 04       	cpc	r15, r11
    11fa:	08 f0       	brcs	.+2      	; 0x11fe <__udivdi3+0x6a>
    11fc:	4d c1       	rjmp	.+666    	; 0x1498 <__udivdi3+0x304>
    11fe:	10 e0       	ldi	r17, 0x00	; 0
    1200:	81 16       	cp	r8, r17
    1202:	10 e0       	ldi	r17, 0x00	; 0
    1204:	91 06       	cpc	r9, r17
    1206:	11 e0       	ldi	r17, 0x01	; 1
    1208:	a1 06       	cpc	r10, r17
    120a:	10 e0       	ldi	r17, 0x00	; 0
    120c:	b1 06       	cpc	r11, r17
    120e:	58 f4       	brcc	.+22     	; 0x1226 <__udivdi3+0x92>
    1210:	2f ef       	ldi	r18, 0xFF	; 255
    1212:	82 16       	cp	r8, r18
    1214:	91 04       	cpc	r9, r1
    1216:	a1 04       	cpc	r10, r1
    1218:	b1 04       	cpc	r11, r1
    121a:	09 f0       	breq	.+2      	; 0x121e <__udivdi3+0x8a>
    121c:	90 f4       	brcc	.+36     	; 0x1242 <__udivdi3+0xae>
    121e:	80 e0       	ldi	r24, 0x00	; 0
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	dc 01       	movw	r26, r24
    1224:	17 c0       	rjmp	.+46     	; 0x1254 <__udivdi3+0xc0>
    1226:	30 e0       	ldi	r19, 0x00	; 0
    1228:	83 16       	cp	r8, r19
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	93 06       	cpc	r9, r19
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	a3 06       	cpc	r10, r19
    1232:	31 e0       	ldi	r19, 0x01	; 1
    1234:	b3 06       	cpc	r11, r19
    1236:	50 f4       	brcc	.+20     	; 0x124c <__udivdi3+0xb8>
    1238:	80 e1       	ldi	r24, 0x10	; 16
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	a0 e0       	ldi	r26, 0x00	; 0
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	09 c0       	rjmp	.+18     	; 0x1254 <__udivdi3+0xc0>
    1242:	88 e0       	ldi	r24, 0x08	; 8
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	a0 e0       	ldi	r26, 0x00	; 0
    1248:	b0 e0       	ldi	r27, 0x00	; 0
    124a:	04 c0       	rjmp	.+8      	; 0x1254 <__udivdi3+0xc0>
    124c:	88 e1       	ldi	r24, 0x18	; 24
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	a0 e0       	ldi	r26, 0x00	; 0
    1252:	b0 e0       	ldi	r27, 0x00	; 0
    1254:	b5 01       	movw	r22, r10
    1256:	a4 01       	movw	r20, r8
    1258:	08 2e       	mov	r0, r24
    125a:	04 c0       	rjmp	.+8      	; 0x1264 <__udivdi3+0xd0>
    125c:	76 95       	lsr	r23
    125e:	67 95       	ror	r22
    1260:	57 95       	ror	r21
    1262:	47 95       	ror	r20
    1264:	0a 94       	dec	r0
    1266:	d2 f7       	brpl	.-12     	; 0x125c <__udivdi3+0xc8>
    1268:	fa 01       	movw	r30, r20
    126a:	eb 57       	subi	r30, 0x7B	; 123
    126c:	ff 4f       	sbci	r31, 0xFF	; 255
    126e:	20 81       	ld	r18, Z
    1270:	40 e2       	ldi	r20, 0x20	; 32
    1272:	50 e0       	ldi	r21, 0x00	; 0
    1274:	60 e0       	ldi	r22, 0x00	; 0
    1276:	70 e0       	ldi	r23, 0x00	; 0
    1278:	48 1b       	sub	r20, r24
    127a:	59 0b       	sbc	r21, r25
    127c:	6a 0b       	sbc	r22, r26
    127e:	7b 0b       	sbc	r23, r27
    1280:	42 1b       	sub	r20, r18
    1282:	51 09       	sbc	r21, r1
    1284:	61 09       	sbc	r22, r1
    1286:	71 09       	sbc	r23, r1
    1288:	41 15       	cp	r20, r1
    128a:	51 05       	cpc	r21, r1
    128c:	61 05       	cpc	r22, r1
    128e:	71 05       	cpc	r23, r1
    1290:	a1 f1       	breq	.+104    	; 0x12fa <__udivdi3+0x166>
    1292:	04 2e       	mov	r0, r20
    1294:	04 c0       	rjmp	.+8      	; 0x129e <__udivdi3+0x10a>
    1296:	88 0c       	add	r8, r8
    1298:	99 1c       	adc	r9, r9
    129a:	aa 1c       	adc	r10, r10
    129c:	bb 1c       	adc	r11, r11
    129e:	0a 94       	dec	r0
    12a0:	d2 f7       	brpl	.-12     	; 0x1296 <__udivdi3+0x102>
    12a2:	97 01       	movw	r18, r14
    12a4:	86 01       	movw	r16, r12
    12a6:	04 2e       	mov	r0, r20
    12a8:	04 c0       	rjmp	.+8      	; 0x12b2 <__udivdi3+0x11e>
    12aa:	00 0f       	add	r16, r16
    12ac:	11 1f       	adc	r17, r17
    12ae:	22 1f       	adc	r18, r18
    12b0:	33 1f       	adc	r19, r19
    12b2:	0a 94       	dec	r0
    12b4:	d2 f7       	brpl	.-12     	; 0x12aa <__udivdi3+0x116>
    12b6:	80 e2       	ldi	r24, 0x20	; 32
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	84 1b       	sub	r24, r20
    12bc:	95 0b       	sbc	r25, r21
    12be:	cd a0       	lds	r28, 0x8d
    12c0:	de a0       	lds	r29, 0x8e
    12c2:	ef a0       	lds	r30, 0x8f
    12c4:	f8 a4       	lds	r31, 0xa8
    12c6:	04 c0       	rjmp	.+8      	; 0x12d0 <__udivdi3+0x13c>
    12c8:	f6 94       	lsr	r15
    12ca:	e7 94       	ror	r14
    12cc:	d7 94       	ror	r13
    12ce:	c7 94       	ror	r12
    12d0:	8a 95       	dec	r24
    12d2:	d2 f7       	brpl	.-12     	; 0x12c8 <__udivdi3+0x134>
    12d4:	c0 2a       	or	r12, r16
    12d6:	d1 2a       	or	r13, r17
    12d8:	e2 2a       	or	r14, r18
    12da:	f3 2a       	or	r15, r19
    12dc:	0d a1       	lds	r16, 0x4d
    12de:	1e a1       	lds	r17, 0x4e
    12e0:	2f a1       	lds	r18, 0x4f
    12e2:	38 a5       	lds	r19, 0x68
    12e4:	04 c0       	rjmp	.+8      	; 0x12ee <__udivdi3+0x15a>
    12e6:	00 0f       	add	r16, r16
    12e8:	11 1f       	adc	r17, r17
    12ea:	22 1f       	adc	r18, r18
    12ec:	33 1f       	adc	r19, r19
    12ee:	4a 95       	dec	r20
    12f0:	d2 f7       	brpl	.-12     	; 0x12e6 <__udivdi3+0x152>
    12f2:	0d a3       	lds	r16, 0x5d
    12f4:	1e a3       	lds	r17, 0x5e
    12f6:	2f a3       	lds	r18, 0x5f
    12f8:	38 a7       	lds	r19, 0x78
    12fa:	25 01       	movw	r4, r10
    12fc:	66 24       	eor	r6, r6
    12fe:	77 24       	eor	r7, r7
    1300:	95 01       	movw	r18, r10
    1302:	84 01       	movw	r16, r8
    1304:	20 70       	andi	r18, 0x00	; 0
    1306:	30 70       	andi	r19, 0x00	; 0
    1308:	09 a3       	lds	r16, 0x59
    130a:	1a a3       	lds	r17, 0x5a
    130c:	2b a3       	lds	r18, 0x5b
    130e:	3c a3       	lds	r19, 0x5c
    1310:	c7 01       	movw	r24, r14
    1312:	b6 01       	movw	r22, r12
    1314:	a3 01       	movw	r20, r6
    1316:	92 01       	movw	r18, r4
    1318:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    131c:	2d 8f       	std	Y+29, r18	; 0x1d
    131e:	3e 8f       	std	Y+30, r19	; 0x1e
    1320:	4f 8f       	std	Y+31, r20	; 0x1f
    1322:	58 a3       	lds	r21, 0x58
    1324:	69 8f       	std	Y+25, r22	; 0x19
    1326:	7a 8f       	std	Y+26, r23	; 0x1a
    1328:	8b 8f       	std	Y+27, r24	; 0x1b
    132a:	9c 8f       	std	Y+28, r25	; 0x1c
    132c:	c7 01       	movw	r24, r14
    132e:	b6 01       	movw	r22, r12
    1330:	a3 01       	movw	r20, r6
    1332:	92 01       	movw	r18, r4
    1334:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1338:	ca 01       	movw	r24, r20
    133a:	b9 01       	movw	r22, r18
    133c:	29 a1       	lds	r18, 0x49
    133e:	3a a1       	lds	r19, 0x4a
    1340:	4b a1       	lds	r20, 0x4b
    1342:	5c a1       	lds	r21, 0x4c
    1344:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1348:	ab 01       	movw	r20, r22
    134a:	bc 01       	movw	r22, r24
    134c:	09 8d       	ldd	r16, Y+25	; 0x19
    134e:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1350:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1352:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1354:	78 01       	movw	r14, r16
    1356:	dd 24       	eor	r13, r13
    1358:	cc 24       	eor	r12, r12
    135a:	0d a1       	lds	r16, 0x4d
    135c:	1e a1       	lds	r17, 0x4e
    135e:	2f a1       	lds	r18, 0x4f
    1360:	38 a5       	lds	r19, 0x68
    1362:	c9 01       	movw	r24, r18
    1364:	aa 27       	eor	r26, r26
    1366:	bb 27       	eor	r27, r27
    1368:	c8 2a       	or	r12, r24
    136a:	d9 2a       	or	r13, r25
    136c:	ea 2a       	or	r14, r26
    136e:	fb 2a       	or	r15, r27
    1370:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1372:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1374:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1376:	38 a1       	lds	r19, 0x48
    1378:	c4 16       	cp	r12, r20
    137a:	d5 06       	cpc	r13, r21
    137c:	e6 06       	cpc	r14, r22
    137e:	f7 06       	cpc	r15, r23
    1380:	38 f5       	brcc	.+78     	; 0x13d0 <__udivdi3+0x23c>
    1382:	01 50       	subi	r16, 0x01	; 1
    1384:	10 40       	sbci	r17, 0x00	; 0
    1386:	20 40       	sbci	r18, 0x00	; 0
    1388:	30 40       	sbci	r19, 0x00	; 0
    138a:	09 8f       	std	Y+25, r16	; 0x19
    138c:	1a 8f       	std	Y+26, r17	; 0x1a
    138e:	2b 8f       	std	Y+27, r18	; 0x1b
    1390:	3c 8f       	std	Y+28, r19	; 0x1c
    1392:	c8 0c       	add	r12, r8
    1394:	d9 1c       	adc	r13, r9
    1396:	ea 1c       	adc	r14, r10
    1398:	fb 1c       	adc	r15, r11
    139a:	c8 14       	cp	r12, r8
    139c:	d9 04       	cpc	r13, r9
    139e:	ea 04       	cpc	r14, r10
    13a0:	fb 04       	cpc	r15, r11
    13a2:	d0 f0       	brcs	.+52     	; 0x13d8 <__udivdi3+0x244>
    13a4:	c4 16       	cp	r12, r20
    13a6:	d5 06       	cpc	r13, r21
    13a8:	e6 06       	cpc	r14, r22
    13aa:	f7 06       	cpc	r15, r23
    13ac:	a8 f4       	brcc	.+42     	; 0x13d8 <__udivdi3+0x244>
    13ae:	0d 8d       	ldd	r16, Y+29	; 0x1d
    13b0:	1e 8d       	ldd	r17, Y+30	; 0x1e
    13b2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    13b4:	38 a1       	lds	r19, 0x48
    13b6:	02 50       	subi	r16, 0x02	; 2
    13b8:	10 40       	sbci	r17, 0x00	; 0
    13ba:	20 40       	sbci	r18, 0x00	; 0
    13bc:	30 40       	sbci	r19, 0x00	; 0
    13be:	09 8f       	std	Y+25, r16	; 0x19
    13c0:	1a 8f       	std	Y+26, r17	; 0x1a
    13c2:	2b 8f       	std	Y+27, r18	; 0x1b
    13c4:	3c 8f       	std	Y+28, r19	; 0x1c
    13c6:	c8 0c       	add	r12, r8
    13c8:	d9 1c       	adc	r13, r9
    13ca:	ea 1c       	adc	r14, r10
    13cc:	fb 1c       	adc	r15, r11
    13ce:	04 c0       	rjmp	.+8      	; 0x13d8 <__udivdi3+0x244>
    13d0:	09 8f       	std	Y+25, r16	; 0x19
    13d2:	1a 8f       	std	Y+26, r17	; 0x1a
    13d4:	2b 8f       	std	Y+27, r18	; 0x1b
    13d6:	3c 8f       	std	Y+28, r19	; 0x1c
    13d8:	c4 1a       	sub	r12, r20
    13da:	d5 0a       	sbc	r13, r21
    13dc:	e6 0a       	sbc	r14, r22
    13de:	f7 0a       	sbc	r15, r23
    13e0:	c7 01       	movw	r24, r14
    13e2:	b6 01       	movw	r22, r12
    13e4:	a3 01       	movw	r20, r6
    13e6:	92 01       	movw	r18, r4
    13e8:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    13ec:	2d 8f       	std	Y+29, r18	; 0x1d
    13ee:	3e 8f       	std	Y+30, r19	; 0x1e
    13f0:	4f 8f       	std	Y+31, r20	; 0x1f
    13f2:	58 a3       	lds	r21, 0x58
    13f4:	69 a7       	lds	r22, 0x79
    13f6:	7a a7       	lds	r23, 0x7a
    13f8:	8b a7       	lds	r24, 0x7b
    13fa:	9c a7       	lds	r25, 0x7c
    13fc:	c7 01       	movw	r24, r14
    13fe:	b6 01       	movw	r22, r12
    1400:	a3 01       	movw	r20, r6
    1402:	92 01       	movw	r18, r4
    1404:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1408:	ca 01       	movw	r24, r20
    140a:	b9 01       	movw	r22, r18
    140c:	29 a1       	lds	r18, 0x49
    140e:	3a a1       	lds	r19, 0x4a
    1410:	4b a1       	lds	r20, 0x4b
    1412:	5c a1       	lds	r21, 0x4c
    1414:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1418:	6b 01       	movw	r12, r22
    141a:	7c 01       	movw	r14, r24
    141c:	49 a5       	lds	r20, 0x69
    141e:	5a a5       	lds	r21, 0x6a
    1420:	6b a5       	lds	r22, 0x6b
    1422:	7c a5       	lds	r23, 0x6c
    1424:	9a 01       	movw	r18, r20
    1426:	11 27       	eor	r17, r17
    1428:	00 27       	eor	r16, r16
    142a:	4d a1       	lds	r20, 0x4d
    142c:	5e a1       	lds	r21, 0x4e
    142e:	6f a1       	lds	r22, 0x4f
    1430:	78 a5       	lds	r23, 0x68
    1432:	60 70       	andi	r22, 0x00	; 0
    1434:	70 70       	andi	r23, 0x00	; 0
    1436:	04 2b       	or	r16, r20
    1438:	15 2b       	or	r17, r21
    143a:	26 2b       	or	r18, r22
    143c:	37 2b       	or	r19, r23
    143e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1440:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1442:	af 8d       	ldd	r26, Y+31	; 0x1f
    1444:	b8 a1       	lds	r27, 0x48
    1446:	0c 15       	cp	r16, r12
    1448:	1d 05       	cpc	r17, r13
    144a:	2e 05       	cpc	r18, r14
    144c:	3f 05       	cpc	r19, r15
    144e:	c0 f4       	brcc	.+48     	; 0x1480 <__udivdi3+0x2ec>
    1450:	01 97       	sbiw	r24, 0x01	; 1
    1452:	a1 09       	sbc	r26, r1
    1454:	b1 09       	sbc	r27, r1
    1456:	08 0d       	add	r16, r8
    1458:	19 1d       	adc	r17, r9
    145a:	2a 1d       	adc	r18, r10
    145c:	3b 1d       	adc	r19, r11
    145e:	08 15       	cp	r16, r8
    1460:	19 05       	cpc	r17, r9
    1462:	2a 05       	cpc	r18, r10
    1464:	3b 05       	cpc	r19, r11
    1466:	60 f0       	brcs	.+24     	; 0x1480 <__udivdi3+0x2ec>
    1468:	0c 15       	cp	r16, r12
    146a:	1d 05       	cpc	r17, r13
    146c:	2e 05       	cpc	r18, r14
    146e:	3f 05       	cpc	r19, r15
    1470:	38 f4       	brcc	.+14     	; 0x1480 <__udivdi3+0x2ec>
    1472:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1474:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1476:	af 8d       	ldd	r26, Y+31	; 0x1f
    1478:	b8 a1       	lds	r27, 0x48
    147a:	02 97       	sbiw	r24, 0x02	; 2
    147c:	a1 09       	sbc	r26, r1
    147e:	b1 09       	sbc	r27, r1
    1480:	09 8d       	ldd	r16, Y+25	; 0x19
    1482:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1484:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1486:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1488:	78 01       	movw	r14, r16
    148a:	dd 24       	eor	r13, r13
    148c:	cc 24       	eor	r12, r12
    148e:	c8 2a       	or	r12, r24
    1490:	d9 2a       	or	r13, r25
    1492:	ea 2a       	or	r14, r26
    1494:	fb 2a       	or	r15, r27
    1496:	a5 c4       	rjmp	.+2378   	; 0x1de2 <__udivdi3+0xc4e>
    1498:	81 14       	cp	r8, r1
    149a:	91 04       	cpc	r9, r1
    149c:	a1 04       	cpc	r10, r1
    149e:	b1 04       	cpc	r11, r1
    14a0:	51 f4       	brne	.+20     	; 0x14b6 <__udivdi3+0x322>
    14a2:	61 e0       	ldi	r22, 0x01	; 1
    14a4:	70 e0       	ldi	r23, 0x00	; 0
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	a5 01       	movw	r20, r10
    14ac:	94 01       	movw	r18, r8
    14ae:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    14b2:	49 01       	movw	r8, r18
    14b4:	5a 01       	movw	r10, r20
    14b6:	10 e0       	ldi	r17, 0x00	; 0
    14b8:	81 16       	cp	r8, r17
    14ba:	10 e0       	ldi	r17, 0x00	; 0
    14bc:	91 06       	cpc	r9, r17
    14be:	11 e0       	ldi	r17, 0x01	; 1
    14c0:	a1 06       	cpc	r10, r17
    14c2:	10 e0       	ldi	r17, 0x00	; 0
    14c4:	b1 06       	cpc	r11, r17
    14c6:	58 f4       	brcc	.+22     	; 0x14de <__udivdi3+0x34a>
    14c8:	2f ef       	ldi	r18, 0xFF	; 255
    14ca:	82 16       	cp	r8, r18
    14cc:	91 04       	cpc	r9, r1
    14ce:	a1 04       	cpc	r10, r1
    14d0:	b1 04       	cpc	r11, r1
    14d2:	09 f0       	breq	.+2      	; 0x14d6 <__udivdi3+0x342>
    14d4:	90 f4       	brcc	.+36     	; 0x14fa <__udivdi3+0x366>
    14d6:	80 e0       	ldi	r24, 0x00	; 0
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	dc 01       	movw	r26, r24
    14dc:	17 c0       	rjmp	.+46     	; 0x150c <__udivdi3+0x378>
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	83 16       	cp	r8, r19
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	93 06       	cpc	r9, r19
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	a3 06       	cpc	r10, r19
    14ea:	31 e0       	ldi	r19, 0x01	; 1
    14ec:	b3 06       	cpc	r11, r19
    14ee:	50 f4       	brcc	.+20     	; 0x1504 <__udivdi3+0x370>
    14f0:	80 e1       	ldi	r24, 0x10	; 16
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	a0 e0       	ldi	r26, 0x00	; 0
    14f6:	b0 e0       	ldi	r27, 0x00	; 0
    14f8:	09 c0       	rjmp	.+18     	; 0x150c <__udivdi3+0x378>
    14fa:	88 e0       	ldi	r24, 0x08	; 8
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	a0 e0       	ldi	r26, 0x00	; 0
    1500:	b0 e0       	ldi	r27, 0x00	; 0
    1502:	04 c0       	rjmp	.+8      	; 0x150c <__udivdi3+0x378>
    1504:	88 e1       	ldi	r24, 0x18	; 24
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	a0 e0       	ldi	r26, 0x00	; 0
    150a:	b0 e0       	ldi	r27, 0x00	; 0
    150c:	b5 01       	movw	r22, r10
    150e:	a4 01       	movw	r20, r8
    1510:	08 2e       	mov	r0, r24
    1512:	04 c0       	rjmp	.+8      	; 0x151c <__udivdi3+0x388>
    1514:	76 95       	lsr	r23
    1516:	67 95       	ror	r22
    1518:	57 95       	ror	r21
    151a:	47 95       	ror	r20
    151c:	0a 94       	dec	r0
    151e:	d2 f7       	brpl	.-12     	; 0x1514 <__udivdi3+0x380>
    1520:	fa 01       	movw	r30, r20
    1522:	eb 57       	subi	r30, 0x7B	; 123
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	20 81       	ld	r18, Z
    1528:	ac 01       	movw	r20, r24
    152a:	bd 01       	movw	r22, r26
    152c:	42 0f       	add	r20, r18
    152e:	51 1d       	adc	r21, r1
    1530:	61 1d       	adc	r22, r1
    1532:	71 1d       	adc	r23, r1
    1534:	80 e2       	ldi	r24, 0x20	; 32
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	a0 e0       	ldi	r26, 0x00	; 0
    153a:	b0 e0       	ldi	r27, 0x00	; 0
    153c:	84 1b       	sub	r24, r20
    153e:	95 0b       	sbc	r25, r21
    1540:	a6 0b       	sbc	r26, r22
    1542:	b7 0b       	sbc	r27, r23
    1544:	51 f4       	brne	.+20     	; 0x155a <__udivdi3+0x3c6>
    1546:	c8 18       	sub	r12, r8
    1548:	d9 08       	sbc	r13, r9
    154a:	ea 08       	sbc	r14, r10
    154c:	fb 08       	sbc	r15, r11
    154e:	f1 e0       	ldi	r31, 0x01	; 1
    1550:	4f 2e       	mov	r4, r31
    1552:	51 2c       	mov	r5, r1
    1554:	61 2c       	mov	r6, r1
    1556:	71 2c       	mov	r7, r1
    1558:	24 c1       	rjmp	.+584    	; 0x17a2 <__udivdi3+0x60e>
    155a:	08 2e       	mov	r0, r24
    155c:	04 c0       	rjmp	.+8      	; 0x1566 <__udivdi3+0x3d2>
    155e:	88 0c       	add	r8, r8
    1560:	99 1c       	adc	r9, r9
    1562:	aa 1c       	adc	r10, r10
    1564:	bb 1c       	adc	r11, r11
    1566:	0a 94       	dec	r0
    1568:	d2 f7       	brpl	.-12     	; 0x155e <__udivdi3+0x3ca>
    156a:	97 01       	movw	r18, r14
    156c:	86 01       	movw	r16, r12
    156e:	04 2e       	mov	r0, r20
    1570:	04 c0       	rjmp	.+8      	; 0x157a <__udivdi3+0x3e6>
    1572:	36 95       	lsr	r19
    1574:	27 95       	ror	r18
    1576:	17 95       	ror	r17
    1578:	07 95       	ror	r16
    157a:	0a 94       	dec	r0
    157c:	d2 f7       	brpl	.-12     	; 0x1572 <__udivdi3+0x3de>
    157e:	09 a3       	lds	r16, 0x59
    1580:	1a a3       	lds	r17, 0x5a
    1582:	2b a3       	lds	r18, 0x5b
    1584:	3c a3       	lds	r19, 0x5c
    1586:	97 01       	movw	r18, r14
    1588:	86 01       	movw	r16, r12
    158a:	08 2e       	mov	r0, r24
    158c:	04 c0       	rjmp	.+8      	; 0x1596 <__udivdi3+0x402>
    158e:	00 0f       	add	r16, r16
    1590:	11 1f       	adc	r17, r17
    1592:	22 1f       	adc	r18, r18
    1594:	33 1f       	adc	r19, r19
    1596:	0a 94       	dec	r0
    1598:	d2 f7       	brpl	.-12     	; 0x158e <__udivdi3+0x3fa>
    159a:	0d 8f       	std	Y+29, r16	; 0x1d
    159c:	1e 8f       	std	Y+30, r17	; 0x1e
    159e:	2f 8f       	std	Y+31, r18	; 0x1f
    15a0:	38 a3       	lds	r19, 0x58
    15a2:	0d a1       	lds	r16, 0x4d
    15a4:	1e a1       	lds	r17, 0x4e
    15a6:	2f a1       	lds	r18, 0x4f
    15a8:	38 a5       	lds	r19, 0x68
    15aa:	04 c0       	rjmp	.+8      	; 0x15b4 <__udivdi3+0x420>
    15ac:	36 95       	lsr	r19
    15ae:	27 95       	ror	r18
    15b0:	17 95       	ror	r17
    15b2:	07 95       	ror	r16
    15b4:	4a 95       	dec	r20
    15b6:	d2 f7       	brpl	.-12     	; 0x15ac <__udivdi3+0x418>
    15b8:	b9 01       	movw	r22, r18
    15ba:	a8 01       	movw	r20, r16
    15bc:	0d 8d       	ldd	r16, Y+29	; 0x1d
    15be:	1e 8d       	ldd	r17, Y+30	; 0x1e
    15c0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    15c2:	38 a1       	lds	r19, 0x48
    15c4:	04 2b       	or	r16, r20
    15c6:	15 2b       	or	r17, r21
    15c8:	26 2b       	or	r18, r22
    15ca:	37 2b       	or	r19, r23
    15cc:	0d 8f       	std	Y+29, r16	; 0x1d
    15ce:	1e 8f       	std	Y+30, r17	; 0x1e
    15d0:	2f 8f       	std	Y+31, r18	; 0x1f
    15d2:	38 a3       	lds	r19, 0x58
    15d4:	0d a1       	lds	r16, 0x4d
    15d6:	1e a1       	lds	r17, 0x4e
    15d8:	2f a1       	lds	r18, 0x4f
    15da:	38 a5       	lds	r19, 0x68
    15dc:	04 c0       	rjmp	.+8      	; 0x15e6 <__udivdi3+0x452>
    15de:	00 0f       	add	r16, r16
    15e0:	11 1f       	adc	r17, r17
    15e2:	22 1f       	adc	r18, r18
    15e4:	33 1f       	adc	r19, r19
    15e6:	8a 95       	dec	r24
    15e8:	d2 f7       	brpl	.-12     	; 0x15de <__udivdi3+0x44a>
    15ea:	0d a3       	lds	r16, 0x5d
    15ec:	1e a3       	lds	r17, 0x5e
    15ee:	2f a3       	lds	r18, 0x5f
    15f0:	38 a7       	lds	r19, 0x78
    15f2:	25 01       	movw	r4, r10
    15f4:	66 24       	eor	r6, r6
    15f6:	77 24       	eor	r7, r7
    15f8:	95 01       	movw	r18, r10
    15fa:	84 01       	movw	r16, r8
    15fc:	20 70       	andi	r18, 0x00	; 0
    15fe:	30 70       	andi	r19, 0x00	; 0
    1600:	09 a7       	lds	r16, 0x79
    1602:	1a a7       	lds	r17, 0x7a
    1604:	2b a7       	lds	r18, 0x7b
    1606:	3c a7       	lds	r19, 0x7c
    1608:	69 a1       	lds	r22, 0x49
    160a:	7a a1       	lds	r23, 0x4a
    160c:	8b a1       	lds	r24, 0x4b
    160e:	9c a1       	lds	r25, 0x4c
    1610:	a3 01       	movw	r20, r6
    1612:	92 01       	movw	r18, r4
    1614:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1618:	29 8f       	std	Y+25, r18	; 0x19
    161a:	3a 8f       	std	Y+26, r19	; 0x1a
    161c:	4b 8f       	std	Y+27, r20	; 0x1b
    161e:	5c 8f       	std	Y+28, r21	; 0x1c
    1620:	6b 01       	movw	r12, r22
    1622:	7c 01       	movw	r14, r24
    1624:	69 a1       	lds	r22, 0x49
    1626:	7a a1       	lds	r23, 0x4a
    1628:	8b a1       	lds	r24, 0x4b
    162a:	9c a1       	lds	r25, 0x4c
    162c:	a3 01       	movw	r20, r6
    162e:	92 01       	movw	r18, r4
    1630:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1634:	ca 01       	movw	r24, r20
    1636:	b9 01       	movw	r22, r18
    1638:	29 a5       	lds	r18, 0x69
    163a:	3a a5       	lds	r19, 0x6a
    163c:	4b a5       	lds	r20, 0x6b
    163e:	5c a5       	lds	r21, 0x6c
    1640:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1644:	ab 01       	movw	r20, r22
    1646:	bc 01       	movw	r22, r24
    1648:	76 01       	movw	r14, r12
    164a:	dd 24       	eor	r13, r13
    164c:	cc 24       	eor	r12, r12
    164e:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1650:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1652:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1654:	38 a1       	lds	r19, 0x48
    1656:	c9 01       	movw	r24, r18
    1658:	aa 27       	eor	r26, r26
    165a:	bb 27       	eor	r27, r27
    165c:	c8 2a       	or	r12, r24
    165e:	d9 2a       	or	r13, r25
    1660:	ea 2a       	or	r14, r26
    1662:	fb 2a       	or	r15, r27
    1664:	09 8d       	ldd	r16, Y+25	; 0x19
    1666:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1668:	2b 8d       	ldd	r18, Y+27	; 0x1b
    166a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    166c:	c4 16       	cp	r12, r20
    166e:	d5 06       	cpc	r13, r21
    1670:	e6 06       	cpc	r14, r22
    1672:	f7 06       	cpc	r15, r23
    1674:	38 f5       	brcc	.+78     	; 0x16c4 <__udivdi3+0x530>
    1676:	01 50       	subi	r16, 0x01	; 1
    1678:	10 40       	sbci	r17, 0x00	; 0
    167a:	20 40       	sbci	r18, 0x00	; 0
    167c:	30 40       	sbci	r19, 0x00	; 0
    167e:	09 a3       	lds	r16, 0x59
    1680:	1a a3       	lds	r17, 0x5a
    1682:	2b a3       	lds	r18, 0x5b
    1684:	3c a3       	lds	r19, 0x5c
    1686:	c8 0c       	add	r12, r8
    1688:	d9 1c       	adc	r13, r9
    168a:	ea 1c       	adc	r14, r10
    168c:	fb 1c       	adc	r15, r11
    168e:	c8 14       	cp	r12, r8
    1690:	d9 04       	cpc	r13, r9
    1692:	ea 04       	cpc	r14, r10
    1694:	fb 04       	cpc	r15, r11
    1696:	d0 f0       	brcs	.+52     	; 0x16cc <__udivdi3+0x538>
    1698:	c4 16       	cp	r12, r20
    169a:	d5 06       	cpc	r13, r21
    169c:	e6 06       	cpc	r14, r22
    169e:	f7 06       	cpc	r15, r23
    16a0:	a8 f4       	brcc	.+42     	; 0x16cc <__udivdi3+0x538>
    16a2:	09 8d       	ldd	r16, Y+25	; 0x19
    16a4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    16a6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    16a8:	3c 8d       	ldd	r19, Y+28	; 0x1c
    16aa:	02 50       	subi	r16, 0x02	; 2
    16ac:	10 40       	sbci	r17, 0x00	; 0
    16ae:	20 40       	sbci	r18, 0x00	; 0
    16b0:	30 40       	sbci	r19, 0x00	; 0
    16b2:	09 a3       	lds	r16, 0x59
    16b4:	1a a3       	lds	r17, 0x5a
    16b6:	2b a3       	lds	r18, 0x5b
    16b8:	3c a3       	lds	r19, 0x5c
    16ba:	c8 0c       	add	r12, r8
    16bc:	d9 1c       	adc	r13, r9
    16be:	ea 1c       	adc	r14, r10
    16c0:	fb 1c       	adc	r15, r11
    16c2:	04 c0       	rjmp	.+8      	; 0x16cc <__udivdi3+0x538>
    16c4:	09 a3       	lds	r16, 0x59
    16c6:	1a a3       	lds	r17, 0x5a
    16c8:	2b a3       	lds	r18, 0x5b
    16ca:	3c a3       	lds	r19, 0x5c
    16cc:	c4 1a       	sub	r12, r20
    16ce:	d5 0a       	sbc	r13, r21
    16d0:	e6 0a       	sbc	r14, r22
    16d2:	f7 0a       	sbc	r15, r23
    16d4:	c7 01       	movw	r24, r14
    16d6:	b6 01       	movw	r22, r12
    16d8:	a3 01       	movw	r20, r6
    16da:	92 01       	movw	r18, r4
    16dc:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    16e0:	29 8f       	std	Y+25, r18	; 0x19
    16e2:	3a 8f       	std	Y+26, r19	; 0x1a
    16e4:	4b 8f       	std	Y+27, r20	; 0x1b
    16e6:	5c 8f       	std	Y+28, r21	; 0x1c
    16e8:	6d a7       	lds	r22, 0x7d
    16ea:	7e a7       	lds	r23, 0x7e
    16ec:	8f a7       	lds	r24, 0x7f
    16ee:	98 ab       	sts	0x58, r25
    16f0:	c7 01       	movw	r24, r14
    16f2:	b6 01       	movw	r22, r12
    16f4:	a3 01       	movw	r20, r6
    16f6:	92 01       	movw	r18, r4
    16f8:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    16fc:	ca 01       	movw	r24, r20
    16fe:	b9 01       	movw	r22, r18
    1700:	29 a5       	lds	r18, 0x69
    1702:	3a a5       	lds	r19, 0x6a
    1704:	4b a5       	lds	r20, 0x6b
    1706:	5c a5       	lds	r21, 0x6c
    1708:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    170c:	8b 01       	movw	r16, r22
    170e:	9c 01       	movw	r18, r24
    1710:	4d a5       	lds	r20, 0x6d
    1712:	5e a5       	lds	r21, 0x6e
    1714:	6f a5       	lds	r22, 0x6f
    1716:	78 a9       	sts	0x48, r23
    1718:	da 01       	movw	r26, r20
    171a:	99 27       	eor	r25, r25
    171c:	88 27       	eor	r24, r24
    171e:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1720:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1722:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1724:	78 a1       	lds	r23, 0x48
    1726:	60 70       	andi	r22, 0x00	; 0
    1728:	70 70       	andi	r23, 0x00	; 0
    172a:	84 2b       	or	r24, r20
    172c:	95 2b       	or	r25, r21
    172e:	a6 2b       	or	r26, r22
    1730:	b7 2b       	or	r27, r23
    1732:	49 8d       	ldd	r20, Y+25	; 0x19
    1734:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1736:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1738:	7c 8d       	ldd	r23, Y+28	; 0x1c
    173a:	80 17       	cp	r24, r16
    173c:	91 07       	cpc	r25, r17
    173e:	a2 07       	cpc	r26, r18
    1740:	b3 07       	cpc	r27, r19
    1742:	f0 f4       	brcc	.+60     	; 0x1780 <__udivdi3+0x5ec>
    1744:	41 50       	subi	r20, 0x01	; 1
    1746:	50 40       	sbci	r21, 0x00	; 0
    1748:	60 40       	sbci	r22, 0x00	; 0
    174a:	70 40       	sbci	r23, 0x00	; 0
    174c:	88 0d       	add	r24, r8
    174e:	99 1d       	adc	r25, r9
    1750:	aa 1d       	adc	r26, r10
    1752:	bb 1d       	adc	r27, r11
    1754:	88 15       	cp	r24, r8
    1756:	99 05       	cpc	r25, r9
    1758:	aa 05       	cpc	r26, r10
    175a:	bb 05       	cpc	r27, r11
    175c:	88 f0       	brcs	.+34     	; 0x1780 <__udivdi3+0x5ec>
    175e:	80 17       	cp	r24, r16
    1760:	91 07       	cpc	r25, r17
    1762:	a2 07       	cpc	r26, r18
    1764:	b3 07       	cpc	r27, r19
    1766:	60 f4       	brcc	.+24     	; 0x1780 <__udivdi3+0x5ec>
    1768:	49 8d       	ldd	r20, Y+25	; 0x19
    176a:	5a 8d       	ldd	r21, Y+26	; 0x1a
    176c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    176e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1770:	42 50       	subi	r20, 0x02	; 2
    1772:	50 40       	sbci	r21, 0x00	; 0
    1774:	60 40       	sbci	r22, 0x00	; 0
    1776:	70 40       	sbci	r23, 0x00	; 0
    1778:	88 0d       	add	r24, r8
    177a:	99 1d       	adc	r25, r9
    177c:	aa 1d       	adc	r26, r10
    177e:	bb 1d       	adc	r27, r11
    1780:	6c 01       	movw	r12, r24
    1782:	7d 01       	movw	r14, r26
    1784:	c0 1a       	sub	r12, r16
    1786:	d1 0a       	sbc	r13, r17
    1788:	e2 0a       	sbc	r14, r18
    178a:	f3 0a       	sbc	r15, r19
    178c:	09 a1       	lds	r16, 0x49
    178e:	1a a1       	lds	r17, 0x4a
    1790:	2b a1       	lds	r18, 0x4b
    1792:	3c a1       	lds	r19, 0x4c
    1794:	38 01       	movw	r6, r16
    1796:	55 24       	eor	r5, r5
    1798:	44 24       	eor	r4, r4
    179a:	44 2a       	or	r4, r20
    179c:	55 2a       	or	r5, r21
    179e:	66 2a       	or	r6, r22
    17a0:	77 2a       	or	r7, r23
    17a2:	85 01       	movw	r16, r10
    17a4:	22 27       	eor	r18, r18
    17a6:	33 27       	eor	r19, r19
    17a8:	0d 8f       	std	Y+29, r16	; 0x1d
    17aa:	1e 8f       	std	Y+30, r17	; 0x1e
    17ac:	2f 8f       	std	Y+31, r18	; 0x1f
    17ae:	38 a3       	lds	r19, 0x58
    17b0:	95 01       	movw	r18, r10
    17b2:	84 01       	movw	r16, r8
    17b4:	20 70       	andi	r18, 0x00	; 0
    17b6:	30 70       	andi	r19, 0x00	; 0
    17b8:	09 a7       	lds	r16, 0x79
    17ba:	1a a7       	lds	r17, 0x7a
    17bc:	2b a7       	lds	r18, 0x7b
    17be:	3c a7       	lds	r19, 0x7c
    17c0:	c7 01       	movw	r24, r14
    17c2:	b6 01       	movw	r22, r12
    17c4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    17c6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    17c8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    17ca:	58 a1       	lds	r21, 0x48
    17cc:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    17d0:	29 8f       	std	Y+25, r18	; 0x19
    17d2:	3a 8f       	std	Y+26, r19	; 0x1a
    17d4:	4b 8f       	std	Y+27, r20	; 0x1b
    17d6:	5c 8f       	std	Y+28, r21	; 0x1c
    17d8:	69 a3       	lds	r22, 0x59
    17da:	7a a3       	lds	r23, 0x5a
    17dc:	8b a3       	lds	r24, 0x5b
    17de:	9c a3       	lds	r25, 0x5c
    17e0:	c7 01       	movw	r24, r14
    17e2:	b6 01       	movw	r22, r12
    17e4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    17e6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    17e8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    17ea:	58 a1       	lds	r21, 0x48
    17ec:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    17f0:	ca 01       	movw	r24, r20
    17f2:	b9 01       	movw	r22, r18
    17f4:	29 a5       	lds	r18, 0x69
    17f6:	3a a5       	lds	r19, 0x6a
    17f8:	4b a5       	lds	r20, 0x6b
    17fa:	5c a5       	lds	r21, 0x6c
    17fc:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1800:	ab 01       	movw	r20, r22
    1802:	bc 01       	movw	r22, r24
    1804:	09 a1       	lds	r16, 0x49
    1806:	1a a1       	lds	r17, 0x4a
    1808:	2b a1       	lds	r18, 0x4b
    180a:	3c a1       	lds	r19, 0x4c
    180c:	78 01       	movw	r14, r16
    180e:	dd 24       	eor	r13, r13
    1810:	cc 24       	eor	r12, r12
    1812:	0d a1       	lds	r16, 0x4d
    1814:	1e a1       	lds	r17, 0x4e
    1816:	2f a1       	lds	r18, 0x4f
    1818:	38 a5       	lds	r19, 0x68
    181a:	c9 01       	movw	r24, r18
    181c:	aa 27       	eor	r26, r26
    181e:	bb 27       	eor	r27, r27
    1820:	c8 2a       	or	r12, r24
    1822:	d9 2a       	or	r13, r25
    1824:	ea 2a       	or	r14, r26
    1826:	fb 2a       	or	r15, r27
    1828:	09 8d       	ldd	r16, Y+25	; 0x19
    182a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    182c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    182e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1830:	c4 16       	cp	r12, r20
    1832:	d5 06       	cpc	r13, r21
    1834:	e6 06       	cpc	r14, r22
    1836:	f7 06       	cpc	r15, r23
    1838:	38 f5       	brcc	.+78     	; 0x1888 <__udivdi3+0x6f4>
    183a:	01 50       	subi	r16, 0x01	; 1
    183c:	10 40       	sbci	r17, 0x00	; 0
    183e:	20 40       	sbci	r18, 0x00	; 0
    1840:	30 40       	sbci	r19, 0x00	; 0
    1842:	09 a3       	lds	r16, 0x59
    1844:	1a a3       	lds	r17, 0x5a
    1846:	2b a3       	lds	r18, 0x5b
    1848:	3c a3       	lds	r19, 0x5c
    184a:	c8 0c       	add	r12, r8
    184c:	d9 1c       	adc	r13, r9
    184e:	ea 1c       	adc	r14, r10
    1850:	fb 1c       	adc	r15, r11
    1852:	c8 14       	cp	r12, r8
    1854:	d9 04       	cpc	r13, r9
    1856:	ea 04       	cpc	r14, r10
    1858:	fb 04       	cpc	r15, r11
    185a:	d0 f0       	brcs	.+52     	; 0x1890 <__udivdi3+0x6fc>
    185c:	c4 16       	cp	r12, r20
    185e:	d5 06       	cpc	r13, r21
    1860:	e6 06       	cpc	r14, r22
    1862:	f7 06       	cpc	r15, r23
    1864:	a8 f4       	brcc	.+42     	; 0x1890 <__udivdi3+0x6fc>
    1866:	09 8d       	ldd	r16, Y+25	; 0x19
    1868:	1a 8d       	ldd	r17, Y+26	; 0x1a
    186a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    186c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    186e:	02 50       	subi	r16, 0x02	; 2
    1870:	10 40       	sbci	r17, 0x00	; 0
    1872:	20 40       	sbci	r18, 0x00	; 0
    1874:	30 40       	sbci	r19, 0x00	; 0
    1876:	09 a3       	lds	r16, 0x59
    1878:	1a a3       	lds	r17, 0x5a
    187a:	2b a3       	lds	r18, 0x5b
    187c:	3c a3       	lds	r19, 0x5c
    187e:	c8 0c       	add	r12, r8
    1880:	d9 1c       	adc	r13, r9
    1882:	ea 1c       	adc	r14, r10
    1884:	fb 1c       	adc	r15, r11
    1886:	04 c0       	rjmp	.+8      	; 0x1890 <__udivdi3+0x6fc>
    1888:	09 a3       	lds	r16, 0x59
    188a:	1a a3       	lds	r17, 0x5a
    188c:	2b a3       	lds	r18, 0x5b
    188e:	3c a3       	lds	r19, 0x5c
    1890:	c4 1a       	sub	r12, r20
    1892:	d5 0a       	sbc	r13, r21
    1894:	e6 0a       	sbc	r14, r22
    1896:	f7 0a       	sbc	r15, r23
    1898:	c7 01       	movw	r24, r14
    189a:	b6 01       	movw	r22, r12
    189c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    189e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    18a0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    18a2:	58 a1       	lds	r21, 0x48
    18a4:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    18a8:	29 8f       	std	Y+25, r18	; 0x19
    18aa:	3a 8f       	std	Y+26, r19	; 0x1a
    18ac:	4b 8f       	std	Y+27, r20	; 0x1b
    18ae:	5c 8f       	std	Y+28, r21	; 0x1c
    18b0:	6d a7       	lds	r22, 0x7d
    18b2:	7e a7       	lds	r23, 0x7e
    18b4:	8f a7       	lds	r24, 0x7f
    18b6:	98 ab       	sts	0x58, r25
    18b8:	c7 01       	movw	r24, r14
    18ba:	b6 01       	movw	r22, r12
    18bc:	2d 8d       	ldd	r18, Y+29	; 0x1d
    18be:	3e 8d       	ldd	r19, Y+30	; 0x1e
    18c0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    18c2:	58 a1       	lds	r21, 0x48
    18c4:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    18c8:	ca 01       	movw	r24, r20
    18ca:	b9 01       	movw	r22, r18
    18cc:	29 a5       	lds	r18, 0x69
    18ce:	3a a5       	lds	r19, 0x6a
    18d0:	4b a5       	lds	r20, 0x6b
    18d2:	5c a5       	lds	r21, 0x6c
    18d4:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    18d8:	8b 01       	movw	r16, r22
    18da:	9c 01       	movw	r18, r24
    18dc:	4d a5       	lds	r20, 0x6d
    18de:	5e a5       	lds	r21, 0x6e
    18e0:	6f a5       	lds	r22, 0x6f
    18e2:	78 a9       	sts	0x48, r23
    18e4:	da 01       	movw	r26, r20
    18e6:	99 27       	eor	r25, r25
    18e8:	88 27       	eor	r24, r24
    18ea:	4d a1       	lds	r20, 0x4d
    18ec:	5e a1       	lds	r21, 0x4e
    18ee:	6f a1       	lds	r22, 0x4f
    18f0:	78 a5       	lds	r23, 0x68
    18f2:	60 70       	andi	r22, 0x00	; 0
    18f4:	70 70       	andi	r23, 0x00	; 0
    18f6:	84 2b       	or	r24, r20
    18f8:	95 2b       	or	r25, r21
    18fa:	a6 2b       	or	r26, r22
    18fc:	b7 2b       	or	r27, r23
    18fe:	49 8d       	ldd	r20, Y+25	; 0x19
    1900:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1902:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1904:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1906:	80 17       	cp	r24, r16
    1908:	91 07       	cpc	r25, r17
    190a:	a2 07       	cpc	r26, r18
    190c:	b3 07       	cpc	r27, r19
    190e:	d0 f4       	brcc	.+52     	; 0x1944 <__udivdi3+0x7b0>
    1910:	41 50       	subi	r20, 0x01	; 1
    1912:	50 40       	sbci	r21, 0x00	; 0
    1914:	60 40       	sbci	r22, 0x00	; 0
    1916:	70 40       	sbci	r23, 0x00	; 0
    1918:	88 0d       	add	r24, r8
    191a:	99 1d       	adc	r25, r9
    191c:	aa 1d       	adc	r26, r10
    191e:	bb 1d       	adc	r27, r11
    1920:	88 15       	cp	r24, r8
    1922:	99 05       	cpc	r25, r9
    1924:	aa 05       	cpc	r26, r10
    1926:	bb 05       	cpc	r27, r11
    1928:	68 f0       	brcs	.+26     	; 0x1944 <__udivdi3+0x7b0>
    192a:	80 17       	cp	r24, r16
    192c:	91 07       	cpc	r25, r17
    192e:	a2 07       	cpc	r26, r18
    1930:	b3 07       	cpc	r27, r19
    1932:	40 f4       	brcc	.+16     	; 0x1944 <__udivdi3+0x7b0>
    1934:	49 8d       	ldd	r20, Y+25	; 0x19
    1936:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1938:	6b 8d       	ldd	r22, Y+27	; 0x1b
    193a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    193c:	42 50       	subi	r20, 0x02	; 2
    193e:	50 40       	sbci	r21, 0x00	; 0
    1940:	60 40       	sbci	r22, 0x00	; 0
    1942:	70 40       	sbci	r23, 0x00	; 0
    1944:	09 a1       	lds	r16, 0x49
    1946:	1a a1       	lds	r17, 0x4a
    1948:	2b a1       	lds	r18, 0x4b
    194a:	3c a1       	lds	r19, 0x4c
    194c:	78 01       	movw	r14, r16
    194e:	dd 24       	eor	r13, r13
    1950:	cc 24       	eor	r12, r12
    1952:	c4 2a       	or	r12, r20
    1954:	d5 2a       	or	r13, r21
    1956:	e6 2a       	or	r14, r22
    1958:	f7 2a       	or	r15, r23
    195a:	46 c2       	rjmp	.+1164   	; 0x1de8 <__udivdi3+0xc54>
    195c:	c8 16       	cp	r12, r24
    195e:	d9 06       	cpc	r13, r25
    1960:	ea 06       	cpc	r14, r26
    1962:	fb 06       	cpc	r15, r27
    1964:	08 f4       	brcc	.+2      	; 0x1968 <__udivdi3+0x7d4>
    1966:	2d c2       	rjmp	.+1114   	; 0x1dc2 <__udivdi3+0xc2e>
    1968:	80 30       	cpi	r24, 0x00	; 0
    196a:	10 e0       	ldi	r17, 0x00	; 0
    196c:	91 07       	cpc	r25, r17
    196e:	11 e0       	ldi	r17, 0x01	; 1
    1970:	a1 07       	cpc	r26, r17
    1972:	10 e0       	ldi	r17, 0x00	; 0
    1974:	b1 07       	cpc	r27, r17
    1976:	50 f4       	brcc	.+20     	; 0x198c <__udivdi3+0x7f8>
    1978:	8f 3f       	cpi	r24, 0xFF	; 255
    197a:	91 05       	cpc	r25, r1
    197c:	a1 05       	cpc	r26, r1
    197e:	b1 05       	cpc	r27, r1
    1980:	09 f0       	breq	.+2      	; 0x1984 <__udivdi3+0x7f0>
    1982:	88 f4       	brcc	.+34     	; 0x19a6 <__udivdi3+0x812>
    1984:	00 e0       	ldi	r16, 0x00	; 0
    1986:	10 e0       	ldi	r17, 0x00	; 0
    1988:	98 01       	movw	r18, r16
    198a:	16 c0       	rjmp	.+44     	; 0x19b8 <__udivdi3+0x824>
    198c:	80 30       	cpi	r24, 0x00	; 0
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	92 07       	cpc	r25, r18
    1992:	20 e0       	ldi	r18, 0x00	; 0
    1994:	a2 07       	cpc	r26, r18
    1996:	21 e0       	ldi	r18, 0x01	; 1
    1998:	b2 07       	cpc	r27, r18
    199a:	50 f4       	brcc	.+20     	; 0x19b0 <__udivdi3+0x81c>
    199c:	00 e1       	ldi	r16, 0x10	; 16
    199e:	10 e0       	ldi	r17, 0x00	; 0
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	30 e0       	ldi	r19, 0x00	; 0
    19a4:	09 c0       	rjmp	.+18     	; 0x19b8 <__udivdi3+0x824>
    19a6:	08 e0       	ldi	r16, 0x08	; 8
    19a8:	10 e0       	ldi	r17, 0x00	; 0
    19aa:	20 e0       	ldi	r18, 0x00	; 0
    19ac:	30 e0       	ldi	r19, 0x00	; 0
    19ae:	04 c0       	rjmp	.+8      	; 0x19b8 <__udivdi3+0x824>
    19b0:	08 e1       	ldi	r16, 0x18	; 24
    19b2:	10 e0       	ldi	r17, 0x00	; 0
    19b4:	20 e0       	ldi	r18, 0x00	; 0
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	ac 01       	movw	r20, r24
    19ba:	bd 01       	movw	r22, r26
    19bc:	00 2e       	mov	r0, r16
    19be:	04 c0       	rjmp	.+8      	; 0x19c8 <__udivdi3+0x834>
    19c0:	76 95       	lsr	r23
    19c2:	67 95       	ror	r22
    19c4:	57 95       	ror	r21
    19c6:	47 95       	ror	r20
    19c8:	0a 94       	dec	r0
    19ca:	d2 f7       	brpl	.-12     	; 0x19c0 <__udivdi3+0x82c>
    19cc:	fa 01       	movw	r30, r20
    19ce:	eb 57       	subi	r30, 0x7B	; 123
    19d0:	ff 4f       	sbci	r31, 0xFF	; 255
    19d2:	40 81       	ld	r20, Z
    19d4:	04 0f       	add	r16, r20
    19d6:	11 1d       	adc	r17, r1
    19d8:	21 1d       	adc	r18, r1
    19da:	31 1d       	adc	r19, r1
    19dc:	40 e2       	ldi	r20, 0x20	; 32
    19de:	50 e0       	ldi	r21, 0x00	; 0
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	40 1b       	sub	r20, r16
    19e6:	51 0b       	sbc	r21, r17
    19e8:	62 0b       	sbc	r22, r18
    19ea:	73 0b       	sbc	r23, r19
    19ec:	a1 f4       	brne	.+40     	; 0x1a16 <__udivdi3+0x882>
    19ee:	8c 15       	cp	r24, r12
    19f0:	9d 05       	cpc	r25, r13
    19f2:	ae 05       	cpc	r26, r14
    19f4:	bf 05       	cpc	r27, r15
    19f6:	08 f4       	brcc	.+2      	; 0x19fa <__udivdi3+0x866>
    19f8:	eb c1       	rjmp	.+982    	; 0x1dd0 <__udivdi3+0xc3c>
    19fa:	0d a1       	lds	r16, 0x4d
    19fc:	1e a1       	lds	r17, 0x4e
    19fe:	2f a1       	lds	r18, 0x4f
    1a00:	38 a5       	lds	r19, 0x68
    1a02:	44 24       	eor	r4, r4
    1a04:	55 24       	eor	r5, r5
    1a06:	32 01       	movw	r6, r4
    1a08:	08 15       	cp	r16, r8
    1a0a:	19 05       	cpc	r17, r9
    1a0c:	2a 05       	cpc	r18, r10
    1a0e:	3b 05       	cpc	r19, r11
    1a10:	08 f0       	brcs	.+2      	; 0x1a14 <__udivdi3+0x880>
    1a12:	e1 c1       	rjmp	.+962    	; 0x1dd6 <__udivdi3+0xc42>
    1a14:	d9 c1       	rjmp	.+946    	; 0x1dc8 <__udivdi3+0xc34>
    1a16:	34 2e       	mov	r3, r20
    1a18:	2c 01       	movw	r4, r24
    1a1a:	3d 01       	movw	r6, r26
    1a1c:	04 c0       	rjmp	.+8      	; 0x1a26 <__udivdi3+0x892>
    1a1e:	44 0c       	add	r4, r4
    1a20:	55 1c       	adc	r5, r5
    1a22:	66 1c       	adc	r6, r6
    1a24:	77 1c       	adc	r7, r7
    1a26:	4a 95       	dec	r20
    1a28:	d2 f7       	brpl	.-12     	; 0x1a1e <__udivdi3+0x88a>
    1a2a:	d5 01       	movw	r26, r10
    1a2c:	c4 01       	movw	r24, r8
    1a2e:	00 2e       	mov	r0, r16
    1a30:	04 c0       	rjmp	.+8      	; 0x1a3a <__udivdi3+0x8a6>
    1a32:	b6 95       	lsr	r27
    1a34:	a7 95       	ror	r26
    1a36:	97 95       	ror	r25
    1a38:	87 95       	ror	r24
    1a3a:	0a 94       	dec	r0
    1a3c:	d2 f7       	brpl	.-12     	; 0x1a32 <__udivdi3+0x89e>
    1a3e:	48 2a       	or	r4, r24
    1a40:	59 2a       	or	r5, r25
    1a42:	6a 2a       	or	r6, r26
    1a44:	7b 2a       	or	r7, r27
    1a46:	a5 01       	movw	r20, r10
    1a48:	94 01       	movw	r18, r8
    1a4a:	03 2c       	mov	r0, r3
    1a4c:	04 c0       	rjmp	.+8      	; 0x1a56 <__udivdi3+0x8c2>
    1a4e:	22 0f       	add	r18, r18
    1a50:	33 1f       	adc	r19, r19
    1a52:	44 1f       	adc	r20, r20
    1a54:	55 1f       	adc	r21, r21
    1a56:	0a 94       	dec	r0
    1a58:	d2 f7       	brpl	.-12     	; 0x1a4e <__udivdi3+0x8ba>
    1a5a:	29 a7       	lds	r18, 0x79
    1a5c:	3a a7       	lds	r19, 0x7a
    1a5e:	4b a7       	lds	r20, 0x7b
    1a60:	5c a7       	lds	r21, 0x7c
    1a62:	b7 01       	movw	r22, r14
    1a64:	a6 01       	movw	r20, r12
    1a66:	00 2e       	mov	r0, r16
    1a68:	04 c0       	rjmp	.+8      	; 0x1a72 <__udivdi3+0x8de>
    1a6a:	76 95       	lsr	r23
    1a6c:	67 95       	ror	r22
    1a6e:	57 95       	ror	r21
    1a70:	47 95       	ror	r20
    1a72:	0a 94       	dec	r0
    1a74:	d2 f7       	brpl	.-12     	; 0x1a6a <__udivdi3+0x8d6>
    1a76:	49 a3       	lds	r20, 0x59
    1a78:	5a a3       	lds	r21, 0x5a
    1a7a:	6b a3       	lds	r22, 0x5b
    1a7c:	7c a3       	lds	r23, 0x5c
    1a7e:	c7 01       	movw	r24, r14
    1a80:	b6 01       	movw	r22, r12
    1a82:	03 2c       	mov	r0, r3
    1a84:	04 c0       	rjmp	.+8      	; 0x1a8e <__udivdi3+0x8fa>
    1a86:	66 0f       	add	r22, r22
    1a88:	77 1f       	adc	r23, r23
    1a8a:	88 1f       	adc	r24, r24
    1a8c:	99 1f       	adc	r25, r25
    1a8e:	0a 94       	dec	r0
    1a90:	d2 f7       	brpl	.-12     	; 0x1a86 <__udivdi3+0x8f2>
    1a92:	6d 8f       	std	Y+29, r22	; 0x1d
    1a94:	7e 8f       	std	Y+30, r23	; 0x1e
    1a96:	8f 8f       	std	Y+31, r24	; 0x1f
    1a98:	98 a3       	lds	r25, 0x58
    1a9a:	8d a1       	lds	r24, 0x4d
    1a9c:	9e a1       	lds	r25, 0x4e
    1a9e:	af a1       	lds	r26, 0x4f
    1aa0:	b8 a5       	lds	r27, 0x68
    1aa2:	04 c0       	rjmp	.+8      	; 0x1aac <__udivdi3+0x918>
    1aa4:	b6 95       	lsr	r27
    1aa6:	a7 95       	ror	r26
    1aa8:	97 95       	ror	r25
    1aaa:	87 95       	ror	r24
    1aac:	0a 95       	dec	r16
    1aae:	d2 f7       	brpl	.-12     	; 0x1aa4 <__udivdi3+0x910>
    1ab0:	4d 8d       	ldd	r20, Y+29	; 0x1d
    1ab2:	5e 8d       	ldd	r21, Y+30	; 0x1e
    1ab4:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1ab6:	78 a1       	lds	r23, 0x48
    1ab8:	48 2b       	or	r20, r24
    1aba:	59 2b       	or	r21, r25
    1abc:	6a 2b       	or	r22, r26
    1abe:	7b 2b       	or	r23, r27
    1ac0:	4d 8f       	std	Y+29, r20	; 0x1d
    1ac2:	5e 8f       	std	Y+30, r21	; 0x1e
    1ac4:	6f 8f       	std	Y+31, r22	; 0x1f
    1ac6:	78 a3       	lds	r23, 0x58
    1ac8:	43 01       	movw	r8, r6
    1aca:	aa 24       	eor	r10, r10
    1acc:	bb 24       	eor	r11, r11
    1ace:	93 01       	movw	r18, r6
    1ad0:	82 01       	movw	r16, r4
    1ad2:	20 70       	andi	r18, 0x00	; 0
    1ad4:	30 70       	andi	r19, 0x00	; 0
    1ad6:	0d a7       	lds	r16, 0x7d
    1ad8:	1e a7       	lds	r17, 0x7e
    1ada:	2f a7       	lds	r18, 0x7f
    1adc:	38 ab       	sts	0x58, r19
    1ade:	69 a1       	lds	r22, 0x49
    1ae0:	7a a1       	lds	r23, 0x4a
    1ae2:	8b a1       	lds	r24, 0x4b
    1ae4:	9c a1       	lds	r25, 0x4c
    1ae6:	a5 01       	movw	r20, r10
    1ae8:	94 01       	movw	r18, r8
    1aea:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1aee:	29 8f       	std	Y+25, r18	; 0x19
    1af0:	3a 8f       	std	Y+26, r19	; 0x1a
    1af2:	4b 8f       	std	Y+27, r20	; 0x1b
    1af4:	5c 8f       	std	Y+28, r21	; 0x1c
    1af6:	6b 01       	movw	r12, r22
    1af8:	7c 01       	movw	r14, r24
    1afa:	69 a1       	lds	r22, 0x49
    1afc:	7a a1       	lds	r23, 0x4a
    1afe:	8b a1       	lds	r24, 0x4b
    1b00:	9c a1       	lds	r25, 0x4c
    1b02:	a5 01       	movw	r20, r10
    1b04:	94 01       	movw	r18, r8
    1b06:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1b0a:	ca 01       	movw	r24, r20
    1b0c:	b9 01       	movw	r22, r18
    1b0e:	2d a5       	lds	r18, 0x6d
    1b10:	3e a5       	lds	r19, 0x6e
    1b12:	4f a5       	lds	r20, 0x6f
    1b14:	58 a9       	sts	0x48, r21
    1b16:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	cb 01       	movw	r24, r22
    1b1e:	76 01       	movw	r14, r12
    1b20:	dd 24       	eor	r13, r13
    1b22:	cc 24       	eor	r12, r12
    1b24:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1b26:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1b28:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1b2a:	38 a1       	lds	r19, 0x48
    1b2c:	a9 01       	movw	r20, r18
    1b2e:	66 27       	eor	r22, r22
    1b30:	77 27       	eor	r23, r23
    1b32:	c4 2a       	or	r12, r20
    1b34:	d5 2a       	or	r13, r21
    1b36:	e6 2a       	or	r14, r22
    1b38:	f7 2a       	or	r15, r23
    1b3a:	09 8d       	ldd	r16, Y+25	; 0x19
    1b3c:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1b3e:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1b40:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1b42:	c8 16       	cp	r12, r24
    1b44:	d9 06       	cpc	r13, r25
    1b46:	ea 06       	cpc	r14, r26
    1b48:	fb 06       	cpc	r15, r27
    1b4a:	38 f5       	brcc	.+78     	; 0x1b9a <__udivdi3+0xa06>
    1b4c:	01 50       	subi	r16, 0x01	; 1
    1b4e:	10 40       	sbci	r17, 0x00	; 0
    1b50:	20 40       	sbci	r18, 0x00	; 0
    1b52:	30 40       	sbci	r19, 0x00	; 0
    1b54:	09 a3       	lds	r16, 0x59
    1b56:	1a a3       	lds	r17, 0x5a
    1b58:	2b a3       	lds	r18, 0x5b
    1b5a:	3c a3       	lds	r19, 0x5c
    1b5c:	c4 0c       	add	r12, r4
    1b5e:	d5 1c       	adc	r13, r5
    1b60:	e6 1c       	adc	r14, r6
    1b62:	f7 1c       	adc	r15, r7
    1b64:	c4 14       	cp	r12, r4
    1b66:	d5 04       	cpc	r13, r5
    1b68:	e6 04       	cpc	r14, r6
    1b6a:	f7 04       	cpc	r15, r7
    1b6c:	d0 f0       	brcs	.+52     	; 0x1ba2 <__udivdi3+0xa0e>
    1b6e:	c8 16       	cp	r12, r24
    1b70:	d9 06       	cpc	r13, r25
    1b72:	ea 06       	cpc	r14, r26
    1b74:	fb 06       	cpc	r15, r27
    1b76:	a8 f4       	brcc	.+42     	; 0x1ba2 <__udivdi3+0xa0e>
    1b78:	09 8d       	ldd	r16, Y+25	; 0x19
    1b7a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    1b7c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    1b7e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    1b80:	02 50       	subi	r16, 0x02	; 2
    1b82:	10 40       	sbci	r17, 0x00	; 0
    1b84:	20 40       	sbci	r18, 0x00	; 0
    1b86:	30 40       	sbci	r19, 0x00	; 0
    1b88:	09 a3       	lds	r16, 0x59
    1b8a:	1a a3       	lds	r17, 0x5a
    1b8c:	2b a3       	lds	r18, 0x5b
    1b8e:	3c a3       	lds	r19, 0x5c
    1b90:	c4 0c       	add	r12, r4
    1b92:	d5 1c       	adc	r13, r5
    1b94:	e6 1c       	adc	r14, r6
    1b96:	f7 1c       	adc	r15, r7
    1b98:	04 c0       	rjmp	.+8      	; 0x1ba2 <__udivdi3+0xa0e>
    1b9a:	09 a3       	lds	r16, 0x59
    1b9c:	1a a3       	lds	r17, 0x5a
    1b9e:	2b a3       	lds	r18, 0x5b
    1ba0:	3c a3       	lds	r19, 0x5c
    1ba2:	c8 1a       	sub	r12, r24
    1ba4:	d9 0a       	sbc	r13, r25
    1ba6:	ea 0a       	sbc	r14, r26
    1ba8:	fb 0a       	sbc	r15, r27
    1baa:	c7 01       	movw	r24, r14
    1bac:	b6 01       	movw	r22, r12
    1bae:	a5 01       	movw	r20, r10
    1bb0:	94 01       	movw	r18, r8
    1bb2:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1bb6:	29 8f       	std	Y+25, r18	; 0x19
    1bb8:	3a 8f       	std	Y+26, r19	; 0x1a
    1bba:	4b 8f       	std	Y+27, r20	; 0x1b
    1bbc:	5c 8f       	std	Y+28, r21	; 0x1c
    1bbe:	69 ab       	sts	0x59, r22
    1bc0:	7a ab       	sts	0x5a, r23
    1bc2:	8b ab       	sts	0x5b, r24
    1bc4:	9c ab       	sts	0x5c, r25
    1bc6:	c7 01       	movw	r24, r14
    1bc8:	b6 01       	movw	r22, r12
    1bca:	a5 01       	movw	r20, r10
    1bcc:	94 01       	movw	r18, r8
    1bce:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1bd2:	ca 01       	movw	r24, r20
    1bd4:	b9 01       	movw	r22, r18
    1bd6:	2d a5       	lds	r18, 0x6d
    1bd8:	3e a5       	lds	r19, 0x6e
    1bda:	4f a5       	lds	r20, 0x6f
    1bdc:	58 a9       	sts	0x48, r21
    1bde:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1be2:	4b 01       	movw	r8, r22
    1be4:	5c 01       	movw	r10, r24
    1be6:	49 a9       	sts	0x49, r20
    1be8:	5a a9       	sts	0x4a, r21
    1bea:	6b a9       	sts	0x4b, r22
    1bec:	7c a9       	sts	0x4c, r23
    1bee:	9a 01       	movw	r18, r20
    1bf0:	11 27       	eor	r17, r17
    1bf2:	00 27       	eor	r16, r16
    1bf4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bf6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1bf8:	af 8d       	ldd	r26, Y+31	; 0x1f
    1bfa:	b8 a1       	lds	r27, 0x48
    1bfc:	a0 70       	andi	r26, 0x00	; 0
    1bfe:	b0 70       	andi	r27, 0x00	; 0
    1c00:	08 2b       	or	r16, r24
    1c02:	19 2b       	or	r17, r25
    1c04:	2a 2b       	or	r18, r26
    1c06:	3b 2b       	or	r19, r27
    1c08:	89 8d       	ldd	r24, Y+25	; 0x19
    1c0a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c0c:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1c0e:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1c10:	08 15       	cp	r16, r8
    1c12:	19 05       	cpc	r17, r9
    1c14:	2a 05       	cpc	r18, r10
    1c16:	3b 05       	cpc	r19, r11
    1c18:	e0 f4       	brcc	.+56     	; 0x1c52 <__udivdi3+0xabe>
    1c1a:	01 97       	sbiw	r24, 0x01	; 1
    1c1c:	a1 09       	sbc	r26, r1
    1c1e:	b1 09       	sbc	r27, r1
    1c20:	04 0d       	add	r16, r4
    1c22:	15 1d       	adc	r17, r5
    1c24:	26 1d       	adc	r18, r6
    1c26:	37 1d       	adc	r19, r7
    1c28:	04 15       	cp	r16, r4
    1c2a:	15 05       	cpc	r17, r5
    1c2c:	26 05       	cpc	r18, r6
    1c2e:	37 05       	cpc	r19, r7
    1c30:	80 f0       	brcs	.+32     	; 0x1c52 <__udivdi3+0xabe>
    1c32:	08 15       	cp	r16, r8
    1c34:	19 05       	cpc	r17, r9
    1c36:	2a 05       	cpc	r18, r10
    1c38:	3b 05       	cpc	r19, r11
    1c3a:	58 f4       	brcc	.+22     	; 0x1c52 <__udivdi3+0xabe>
    1c3c:	89 8d       	ldd	r24, Y+25	; 0x19
    1c3e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c40:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1c42:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1c44:	02 97       	sbiw	r24, 0x02	; 2
    1c46:	a1 09       	sbc	r26, r1
    1c48:	b1 09       	sbc	r27, r1
    1c4a:	04 0d       	add	r16, r4
    1c4c:	15 1d       	adc	r17, r5
    1c4e:	26 1d       	adc	r18, r6
    1c50:	37 1d       	adc	r19, r7
    1c52:	b9 01       	movw	r22, r18
    1c54:	a8 01       	movw	r20, r16
    1c56:	48 19       	sub	r20, r8
    1c58:	59 09       	sbc	r21, r9
    1c5a:	6a 09       	sbc	r22, r10
    1c5c:	7b 09       	sbc	r23, r11
    1c5e:	4d 8f       	std	Y+29, r20	; 0x1d
    1c60:	5e 8f       	std	Y+30, r21	; 0x1e
    1c62:	6f 8f       	std	Y+31, r22	; 0x1f
    1c64:	78 a3       	lds	r23, 0x58
    1c66:	09 a1       	lds	r16, 0x49
    1c68:	1a a1       	lds	r17, 0x4a
    1c6a:	2b a1       	lds	r18, 0x4b
    1c6c:	3c a1       	lds	r19, 0x4c
    1c6e:	78 01       	movw	r14, r16
    1c70:	dd 24       	eor	r13, r13
    1c72:	cc 24       	eor	r12, r12
    1c74:	c8 2a       	or	r12, r24
    1c76:	d9 2a       	or	r13, r25
    1c78:	ea 2a       	or	r14, r26
    1c7a:	fb 2a       	or	r15, r27
    1c7c:	ff ef       	ldi	r31, 0xFF	; 255
    1c7e:	8f 2e       	mov	r8, r31
    1c80:	ff ef       	ldi	r31, 0xFF	; 255
    1c82:	9f 2e       	mov	r9, r31
    1c84:	a1 2c       	mov	r10, r1
    1c86:	b1 2c       	mov	r11, r1
    1c88:	8c 20       	and	r8, r12
    1c8a:	9d 20       	and	r9, r13
    1c8c:	ae 20       	and	r10, r14
    1c8e:	bf 20       	and	r11, r15
    1c90:	87 01       	movw	r16, r14
    1c92:	22 27       	eor	r18, r18
    1c94:	33 27       	eor	r19, r19
    1c96:	09 8f       	std	Y+25, r16	; 0x19
    1c98:	1a 8f       	std	Y+26, r17	; 0x1a
    1c9a:	2b 8f       	std	Y+27, r18	; 0x1b
    1c9c:	3c 8f       	std	Y+28, r19	; 0x1c
    1c9e:	49 a4       	lds	r20, 0xa9
    1ca0:	5a a4       	lds	r21, 0xaa
    1ca2:	6b a4       	lds	r22, 0xab
    1ca4:	7c a4       	lds	r23, 0xac
    1ca6:	2f ef       	ldi	r18, 0xFF	; 255
    1ca8:	3f ef       	ldi	r19, 0xFF	; 255
    1caa:	40 e0       	ldi	r20, 0x00	; 0
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	42 22       	and	r4, r18
    1cb0:	53 22       	and	r5, r19
    1cb2:	64 22       	and	r6, r20
    1cb4:	75 22       	and	r7, r21
    1cb6:	29 a5       	lds	r18, 0x69
    1cb8:	3a a5       	lds	r19, 0x6a
    1cba:	4b a5       	lds	r20, 0x6b
    1cbc:	5c a5       	lds	r21, 0x6c
    1cbe:	8a 01       	movw	r16, r20
    1cc0:	22 27       	eor	r18, r18
    1cc2:	33 27       	eor	r19, r19
    1cc4:	09 a3       	lds	r16, 0x59
    1cc6:	1a a3       	lds	r17, 0x5a
    1cc8:	2b a3       	lds	r18, 0x5b
    1cca:	3c a3       	lds	r19, 0x5c
    1ccc:	c5 01       	movw	r24, r10
    1cce:	b4 01       	movw	r22, r8
    1cd0:	a3 01       	movw	r20, r6
    1cd2:	92 01       	movw	r18, r4
    1cd4:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1cd8:	69 a7       	lds	r22, 0x79
    1cda:	7a a7       	lds	r23, 0x7a
    1cdc:	8b a7       	lds	r24, 0x7b
    1cde:	9c a7       	lds	r25, 0x7c
    1ce0:	c5 01       	movw	r24, r10
    1ce2:	b4 01       	movw	r22, r8
    1ce4:	29 a1       	lds	r18, 0x49
    1ce6:	3a a1       	lds	r19, 0x4a
    1ce8:	4b a1       	lds	r20, 0x4b
    1cea:	5c a1       	lds	r21, 0x4c
    1cec:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1cf0:	4b 01       	movw	r8, r22
    1cf2:	5c 01       	movw	r10, r24
    1cf4:	69 8d       	ldd	r22, Y+25	; 0x19
    1cf6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cf8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cfa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cfc:	a3 01       	movw	r20, r6
    1cfe:	92 01       	movw	r18, r4
    1d00:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1d04:	2b 01       	movw	r4, r22
    1d06:	3c 01       	movw	r6, r24
    1d08:	69 8d       	ldd	r22, Y+25	; 0x19
    1d0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d0c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d0e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d10:	29 a1       	lds	r18, 0x49
    1d12:	3a a1       	lds	r19, 0x4a
    1d14:	4b a1       	lds	r20, 0x4b
    1d16:	5c a1       	lds	r21, 0x4c
    1d18:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    1d1c:	ab 01       	movw	r20, r22
    1d1e:	bc 01       	movw	r22, r24
    1d20:	84 0c       	add	r8, r4
    1d22:	95 1c       	adc	r9, r5
    1d24:	a6 1c       	adc	r10, r6
    1d26:	b7 1c       	adc	r11, r7
    1d28:	09 a5       	lds	r16, 0x69
    1d2a:	1a a5       	lds	r17, 0x6a
    1d2c:	2b a5       	lds	r18, 0x6b
    1d2e:	3c a5       	lds	r19, 0x6c
    1d30:	c9 01       	movw	r24, r18
    1d32:	aa 27       	eor	r26, r26
    1d34:	bb 27       	eor	r27, r27
    1d36:	88 0e       	add	r8, r24
    1d38:	99 1e       	adc	r9, r25
    1d3a:	aa 1e       	adc	r10, r26
    1d3c:	bb 1e       	adc	r11, r27
    1d3e:	84 14       	cp	r8, r4
    1d40:	95 04       	cpc	r9, r5
    1d42:	a6 04       	cpc	r10, r6
    1d44:	b7 04       	cpc	r11, r7
    1d46:	20 f4       	brcc	.+8      	; 0x1d50 <__udivdi3+0xbbc>
    1d48:	40 50       	subi	r20, 0x00	; 0
    1d4a:	50 40       	sbci	r21, 0x00	; 0
    1d4c:	6f 4f       	sbci	r22, 0xFF	; 255
    1d4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d50:	c5 01       	movw	r24, r10
    1d52:	aa 27       	eor	r26, r26
    1d54:	bb 27       	eor	r27, r27
    1d56:	84 0f       	add	r24, r20
    1d58:	95 1f       	adc	r25, r21
    1d5a:	a6 1f       	adc	r26, r22
    1d5c:	b7 1f       	adc	r27, r23
    1d5e:	0d 8d       	ldd	r16, Y+29	; 0x1d
    1d60:	1e 8d       	ldd	r17, Y+30	; 0x1e
    1d62:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1d64:	38 a1       	lds	r19, 0x48
    1d66:	08 17       	cp	r16, r24
    1d68:	19 07       	cpc	r17, r25
    1d6a:	2a 07       	cpc	r18, r26
    1d6c:	3b 07       	cpc	r19, r27
    1d6e:	18 f1       	brcs	.+70     	; 0x1db6 <__udivdi3+0xc22>
    1d70:	80 17       	cp	r24, r16
    1d72:	91 07       	cpc	r25, r17
    1d74:	a2 07       	cpc	r26, r18
    1d76:	b3 07       	cpc	r27, r19
    1d78:	a1 f5       	brne	.+104    	; 0x1de2 <__udivdi3+0xc4e>
    1d7a:	54 01       	movw	r10, r8
    1d7c:	99 24       	eor	r9, r9
    1d7e:	88 24       	eor	r8, r8
    1d80:	89 a5       	lds	r24, 0x69
    1d82:	9a a5       	lds	r25, 0x6a
    1d84:	ab a5       	lds	r26, 0x6b
    1d86:	bc a5       	lds	r27, 0x6c
    1d88:	a0 70       	andi	r26, 0x00	; 0
    1d8a:	b0 70       	andi	r27, 0x00	; 0
    1d8c:	88 0e       	add	r8, r24
    1d8e:	99 1e       	adc	r9, r25
    1d90:	aa 1e       	adc	r10, r26
    1d92:	bb 1e       	adc	r11, r27
    1d94:	4d a1       	lds	r20, 0x4d
    1d96:	5e a1       	lds	r21, 0x4e
    1d98:	6f a1       	lds	r22, 0x4f
    1d9a:	78 a5       	lds	r23, 0x68
    1d9c:	03 2c       	mov	r0, r3
    1d9e:	04 c0       	rjmp	.+8      	; 0x1da8 <__udivdi3+0xc14>
    1da0:	44 0f       	add	r20, r20
    1da2:	55 1f       	adc	r21, r21
    1da4:	66 1f       	adc	r22, r22
    1da6:	77 1f       	adc	r23, r23
    1da8:	0a 94       	dec	r0
    1daa:	d2 f7       	brpl	.-12     	; 0x1da0 <__udivdi3+0xc0c>
    1dac:	48 15       	cp	r20, r8
    1dae:	59 05       	cpc	r21, r9
    1db0:	6a 05       	cpc	r22, r10
    1db2:	7b 05       	cpc	r23, r11
    1db4:	b0 f4       	brcc	.+44     	; 0x1de2 <__udivdi3+0xc4e>
    1db6:	08 94       	sec
    1db8:	c1 08       	sbc	r12, r1
    1dba:	d1 08       	sbc	r13, r1
    1dbc:	e1 08       	sbc	r14, r1
    1dbe:	f1 08       	sbc	r15, r1
    1dc0:	10 c0       	rjmp	.+32     	; 0x1de2 <__udivdi3+0xc4e>
    1dc2:	44 24       	eor	r4, r4
    1dc4:	55 24       	eor	r5, r5
    1dc6:	32 01       	movw	r6, r4
    1dc8:	cc 24       	eor	r12, r12
    1dca:	dd 24       	eor	r13, r13
    1dcc:	76 01       	movw	r14, r12
    1dce:	0c c0       	rjmp	.+24     	; 0x1de8 <__udivdi3+0xc54>
    1dd0:	44 24       	eor	r4, r4
    1dd2:	55 24       	eor	r5, r5
    1dd4:	32 01       	movw	r6, r4
    1dd6:	81 e0       	ldi	r24, 0x01	; 1
    1dd8:	c8 2e       	mov	r12, r24
    1dda:	d1 2c       	mov	r13, r1
    1ddc:	e1 2c       	mov	r14, r1
    1dde:	f1 2c       	mov	r15, r1
    1de0:	03 c0       	rjmp	.+6      	; 0x1de8 <__udivdi3+0xc54>
    1de2:	44 24       	eor	r4, r4
    1de4:	55 24       	eor	r5, r5
    1de6:	32 01       	movw	r6, r4
    1de8:	fe 01       	movw	r30, r28
    1dea:	31 96       	adiw	r30, 0x01	; 1
    1dec:	88 e0       	ldi	r24, 0x08	; 8
    1dee:	df 01       	movw	r26, r30
    1df0:	1d 92       	st	X+, r1
    1df2:	8a 95       	dec	r24
    1df4:	e9 f7       	brne	.-6      	; 0x1df0 <__udivdi3+0xc5c>
    1df6:	c9 82       	std	Y+1, r12	; 0x01
    1df8:	da 82       	std	Y+2, r13	; 0x02
    1dfa:	eb 82       	std	Y+3, r14	; 0x03
    1dfc:	fc 82       	std	Y+4, r15	; 0x04
    1dfe:	4d 82       	std	Y+5, r4	; 0x05
    1e00:	5e 82       	std	Y+6, r5	; 0x06
    1e02:	6f 82       	std	Y+7, r6	; 0x07
    1e04:	78 86       	std	Y+8, r7	; 0x08
    1e06:	2c 2d       	mov	r18, r12
    1e08:	3a 81       	ldd	r19, Y+2	; 0x02
    1e0a:	4b 81       	ldd	r20, Y+3	; 0x03
    1e0c:	5c 81       	ldd	r21, Y+4	; 0x04
    1e0e:	64 2d       	mov	r22, r4
    1e10:	7e 81       	ldd	r23, Y+6	; 0x06
    1e12:	8f 81       	ldd	r24, Y+7	; 0x07
    1e14:	98 85       	ldd	r25, Y+8	; 0x08
    1e16:	e4 96       	adiw	r28, 0x34	; 52
    1e18:	e1 e1       	ldi	r30, 0x11	; 17
    1e1a:	0c 94 0b 15 	jmp	0x2a16	; 0x2a16 <__epilogue_restores__+0x2>

00001e1e <__umoddi3>:
    1e1e:	a4 e3       	ldi	r26, 0x34	; 52
    1e20:	b0 e0       	ldi	r27, 0x00	; 0
    1e22:	e5 e1       	ldi	r30, 0x15	; 21
    1e24:	ff e0       	ldi	r31, 0x0F	; 15
    1e26:	0c 94 ee 14 	jmp	0x29dc	; 0x29dc <__prologue_saves__>
    1e2a:	f8 2f       	mov	r31, r24
    1e2c:	e9 2f       	mov	r30, r25
    1e2e:	a9 86       	std	Y+9, r10	; 0x09
    1e30:	ba 86       	std	Y+10, r11	; 0x0a
    1e32:	cb 86       	std	Y+11, r12	; 0x0b
    1e34:	dc 86       	std	Y+12, r13	; 0x0c
    1e36:	ed 86       	std	Y+13, r14	; 0x0d
    1e38:	fe 86       	std	Y+14, r15	; 0x0e
    1e3a:	0f 87       	std	Y+15, r16	; 0x0f
    1e3c:	18 8b       	std	Y+16, r17	; 0x10
    1e3e:	89 84       	ldd	r8, Y+9	; 0x09
    1e40:	9a 84       	ldd	r9, Y+10	; 0x0a
    1e42:	ab 84       	ldd	r10, Y+11	; 0x0b
    1e44:	bc 84       	ldd	r11, Y+12	; 0x0c
    1e46:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e48:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e4a:	af 85       	ldd	r26, Y+15	; 0x0f
    1e4c:	b8 89       	ldd	r27, Y+16	; 0x10
    1e4e:	29 8f       	std	Y+25, r18	; 0x19
    1e50:	3a 8f       	std	Y+26, r19	; 0x1a
    1e52:	4b 8f       	std	Y+27, r20	; 0x1b
    1e54:	5c 8f       	std	Y+28, r21	; 0x1c
    1e56:	6b 01       	movw	r12, r22
    1e58:	ef 2e       	mov	r14, r31
    1e5a:	fe 2e       	mov	r15, r30
    1e5c:	00 97       	sbiw	r24, 0x00	; 0
    1e5e:	a1 05       	cpc	r26, r1
    1e60:	b1 05       	cpc	r27, r1
    1e62:	09 f0       	breq	.+2      	; 0x1e66 <__umoddi3+0x48>
    1e64:	a2 c2       	rjmp	.+1348   	; 0x23aa <__umoddi3+0x58c>
    1e66:	c8 14       	cp	r12, r8
    1e68:	d9 04       	cpc	r13, r9
    1e6a:	ea 04       	cpc	r14, r10
    1e6c:	fb 04       	cpc	r15, r11
    1e6e:	08 f0       	brcs	.+2      	; 0x1e72 <__umoddi3+0x54>
    1e70:	87 c0       	rjmp	.+270    	; 0x1f80 <__umoddi3+0x162>
    1e72:	00 e0       	ldi	r16, 0x00	; 0
    1e74:	80 16       	cp	r8, r16
    1e76:	00 e0       	ldi	r16, 0x00	; 0
    1e78:	90 06       	cpc	r9, r16
    1e7a:	01 e0       	ldi	r16, 0x01	; 1
    1e7c:	a0 06       	cpc	r10, r16
    1e7e:	00 e0       	ldi	r16, 0x00	; 0
    1e80:	b0 06       	cpc	r11, r16
    1e82:	58 f4       	brcc	.+22     	; 0x1e9a <__umoddi3+0x7c>
    1e84:	1f ef       	ldi	r17, 0xFF	; 255
    1e86:	81 16       	cp	r8, r17
    1e88:	91 04       	cpc	r9, r1
    1e8a:	a1 04       	cpc	r10, r1
    1e8c:	b1 04       	cpc	r11, r1
    1e8e:	09 f0       	breq	.+2      	; 0x1e92 <__umoddi3+0x74>
    1e90:	90 f4       	brcc	.+36     	; 0x1eb6 <__umoddi3+0x98>
    1e92:	80 e0       	ldi	r24, 0x00	; 0
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	dc 01       	movw	r26, r24
    1e98:	17 c0       	rjmp	.+46     	; 0x1ec8 <__umoddi3+0xaa>
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	82 16       	cp	r8, r18
    1e9e:	20 e0       	ldi	r18, 0x00	; 0
    1ea0:	92 06       	cpc	r9, r18
    1ea2:	20 e0       	ldi	r18, 0x00	; 0
    1ea4:	a2 06       	cpc	r10, r18
    1ea6:	21 e0       	ldi	r18, 0x01	; 1
    1ea8:	b2 06       	cpc	r11, r18
    1eaa:	50 f4       	brcc	.+20     	; 0x1ec0 <__umoddi3+0xa2>
    1eac:	80 e1       	ldi	r24, 0x10	; 16
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	a0 e0       	ldi	r26, 0x00	; 0
    1eb2:	b0 e0       	ldi	r27, 0x00	; 0
    1eb4:	09 c0       	rjmp	.+18     	; 0x1ec8 <__umoddi3+0xaa>
    1eb6:	88 e0       	ldi	r24, 0x08	; 8
    1eb8:	90 e0       	ldi	r25, 0x00	; 0
    1eba:	a0 e0       	ldi	r26, 0x00	; 0
    1ebc:	b0 e0       	ldi	r27, 0x00	; 0
    1ebe:	04 c0       	rjmp	.+8      	; 0x1ec8 <__umoddi3+0xaa>
    1ec0:	88 e1       	ldi	r24, 0x18	; 24
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	a0 e0       	ldi	r26, 0x00	; 0
    1ec6:	b0 e0       	ldi	r27, 0x00	; 0
    1ec8:	b5 01       	movw	r22, r10
    1eca:	a4 01       	movw	r20, r8
    1ecc:	08 2e       	mov	r0, r24
    1ece:	04 c0       	rjmp	.+8      	; 0x1ed8 <__umoddi3+0xba>
    1ed0:	76 95       	lsr	r23
    1ed2:	67 95       	ror	r22
    1ed4:	57 95       	ror	r21
    1ed6:	47 95       	ror	r20
    1ed8:	0a 94       	dec	r0
    1eda:	d2 f7       	brpl	.-12     	; 0x1ed0 <__umoddi3+0xb2>
    1edc:	fa 01       	movw	r30, r20
    1ede:	eb 57       	subi	r30, 0x7B	; 123
    1ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee2:	20 81       	ld	r18, Z
    1ee4:	40 e2       	ldi	r20, 0x20	; 32
    1ee6:	50 e0       	ldi	r21, 0x00	; 0
    1ee8:	60 e0       	ldi	r22, 0x00	; 0
    1eea:	70 e0       	ldi	r23, 0x00	; 0
    1eec:	48 1b       	sub	r20, r24
    1eee:	59 0b       	sbc	r21, r25
    1ef0:	6a 0b       	sbc	r22, r26
    1ef2:	7b 0b       	sbc	r23, r27
    1ef4:	42 1b       	sub	r20, r18
    1ef6:	51 09       	sbc	r21, r1
    1ef8:	61 09       	sbc	r22, r1
    1efa:	71 09       	sbc	r23, r1
    1efc:	4d 8f       	std	Y+29, r20	; 0x1d
    1efe:	5e 8f       	std	Y+30, r21	; 0x1e
    1f00:	6f 8f       	std	Y+31, r22	; 0x1f
    1f02:	78 a3       	lds	r23, 0x58
    1f04:	41 15       	cp	r20, r1
    1f06:	51 05       	cpc	r21, r1
    1f08:	61 05       	cpc	r22, r1
    1f0a:	71 05       	cpc	r23, r1
    1f0c:	09 f4       	brne	.+2      	; 0x1f10 <__umoddi3+0xf2>
    1f0e:	85 c1       	rjmp	.+778    	; 0x221a <__umoddi3+0x3fc>
    1f10:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1f12:	02 2e       	mov	r0, r18
    1f14:	04 c0       	rjmp	.+8      	; 0x1f1e <__umoddi3+0x100>
    1f16:	88 0c       	add	r8, r8
    1f18:	99 1c       	adc	r9, r9
    1f1a:	aa 1c       	adc	r10, r10
    1f1c:	bb 1c       	adc	r11, r11
    1f1e:	0a 94       	dec	r0
    1f20:	d2 f7       	brpl	.-12     	; 0x1f16 <__umoddi3+0xf8>
    1f22:	b7 01       	movw	r22, r14
    1f24:	a6 01       	movw	r20, r12
    1f26:	02 2e       	mov	r0, r18
    1f28:	04 c0       	rjmp	.+8      	; 0x1f32 <__umoddi3+0x114>
    1f2a:	44 0f       	add	r20, r20
    1f2c:	55 1f       	adc	r21, r21
    1f2e:	66 1f       	adc	r22, r22
    1f30:	77 1f       	adc	r23, r23
    1f32:	0a 94       	dec	r0
    1f34:	d2 f7       	brpl	.-12     	; 0x1f2a <__umoddi3+0x10c>
    1f36:	80 e2       	ldi	r24, 0x20	; 32
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	ad 8d       	ldd	r26, Y+29	; 0x1d
    1f3c:	be 8d       	ldd	r27, Y+30	; 0x1e
    1f3e:	8a 1b       	sub	r24, r26
    1f40:	9b 0b       	sbc	r25, r27
    1f42:	c9 8c       	ldd	r12, Y+25	; 0x19
    1f44:	da 8c       	ldd	r13, Y+26	; 0x1a
    1f46:	eb 8c       	ldd	r14, Y+27	; 0x1b
    1f48:	fc 8c       	ldd	r15, Y+28	; 0x1c
    1f4a:	04 c0       	rjmp	.+8      	; 0x1f54 <__umoddi3+0x136>
    1f4c:	f6 94       	lsr	r15
    1f4e:	e7 94       	ror	r14
    1f50:	d7 94       	ror	r13
    1f52:	c7 94       	ror	r12
    1f54:	8a 95       	dec	r24
    1f56:	d2 f7       	brpl	.-12     	; 0x1f4c <__umoddi3+0x12e>
    1f58:	c4 2a       	or	r12, r20
    1f5a:	d5 2a       	or	r13, r21
    1f5c:	e6 2a       	or	r14, r22
    1f5e:	f7 2a       	or	r15, r23
    1f60:	49 8d       	ldd	r20, Y+25	; 0x19
    1f62:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1f64:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1f66:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1f68:	04 c0       	rjmp	.+8      	; 0x1f72 <__umoddi3+0x154>
    1f6a:	44 0f       	add	r20, r20
    1f6c:	55 1f       	adc	r21, r21
    1f6e:	66 1f       	adc	r22, r22
    1f70:	77 1f       	adc	r23, r23
    1f72:	2a 95       	dec	r18
    1f74:	d2 f7       	brpl	.-12     	; 0x1f6a <__umoddi3+0x14c>
    1f76:	49 8f       	std	Y+25, r20	; 0x19
    1f78:	5a 8f       	std	Y+26, r21	; 0x1a
    1f7a:	6b 8f       	std	Y+27, r22	; 0x1b
    1f7c:	7c 8f       	std	Y+28, r23	; 0x1c
    1f7e:	4d c1       	rjmp	.+666    	; 0x221a <__umoddi3+0x3fc>
    1f80:	81 14       	cp	r8, r1
    1f82:	91 04       	cpc	r9, r1
    1f84:	a1 04       	cpc	r10, r1
    1f86:	b1 04       	cpc	r11, r1
    1f88:	51 f4       	brne	.+20     	; 0x1f9e <__umoddi3+0x180>
    1f8a:	61 e0       	ldi	r22, 0x01	; 1
    1f8c:	70 e0       	ldi	r23, 0x00	; 0
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	a5 01       	movw	r20, r10
    1f94:	94 01       	movw	r18, r8
    1f96:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    1f9a:	49 01       	movw	r8, r18
    1f9c:	5a 01       	movw	r10, r20
    1f9e:	00 e0       	ldi	r16, 0x00	; 0
    1fa0:	80 16       	cp	r8, r16
    1fa2:	00 e0       	ldi	r16, 0x00	; 0
    1fa4:	90 06       	cpc	r9, r16
    1fa6:	01 e0       	ldi	r16, 0x01	; 1
    1fa8:	a0 06       	cpc	r10, r16
    1faa:	00 e0       	ldi	r16, 0x00	; 0
    1fac:	b0 06       	cpc	r11, r16
    1fae:	58 f4       	brcc	.+22     	; 0x1fc6 <__umoddi3+0x1a8>
    1fb0:	1f ef       	ldi	r17, 0xFF	; 255
    1fb2:	81 16       	cp	r8, r17
    1fb4:	91 04       	cpc	r9, r1
    1fb6:	a1 04       	cpc	r10, r1
    1fb8:	b1 04       	cpc	r11, r1
    1fba:	09 f0       	breq	.+2      	; 0x1fbe <__umoddi3+0x1a0>
    1fbc:	90 f4       	brcc	.+36     	; 0x1fe2 <__umoddi3+0x1c4>
    1fbe:	80 e0       	ldi	r24, 0x00	; 0
    1fc0:	90 e0       	ldi	r25, 0x00	; 0
    1fc2:	dc 01       	movw	r26, r24
    1fc4:	17 c0       	rjmp	.+46     	; 0x1ff4 <__umoddi3+0x1d6>
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	82 16       	cp	r8, r18
    1fca:	20 e0       	ldi	r18, 0x00	; 0
    1fcc:	92 06       	cpc	r9, r18
    1fce:	20 e0       	ldi	r18, 0x00	; 0
    1fd0:	a2 06       	cpc	r10, r18
    1fd2:	21 e0       	ldi	r18, 0x01	; 1
    1fd4:	b2 06       	cpc	r11, r18
    1fd6:	50 f4       	brcc	.+20     	; 0x1fec <__umoddi3+0x1ce>
    1fd8:	80 e1       	ldi	r24, 0x10	; 16
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	a0 e0       	ldi	r26, 0x00	; 0
    1fde:	b0 e0       	ldi	r27, 0x00	; 0
    1fe0:	09 c0       	rjmp	.+18     	; 0x1ff4 <__umoddi3+0x1d6>
    1fe2:	88 e0       	ldi	r24, 0x08	; 8
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	a0 e0       	ldi	r26, 0x00	; 0
    1fe8:	b0 e0       	ldi	r27, 0x00	; 0
    1fea:	04 c0       	rjmp	.+8      	; 0x1ff4 <__umoddi3+0x1d6>
    1fec:	88 e1       	ldi	r24, 0x18	; 24
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	a0 e0       	ldi	r26, 0x00	; 0
    1ff2:	b0 e0       	ldi	r27, 0x00	; 0
    1ff4:	b5 01       	movw	r22, r10
    1ff6:	a4 01       	movw	r20, r8
    1ff8:	08 2e       	mov	r0, r24
    1ffa:	04 c0       	rjmp	.+8      	; 0x2004 <__umoddi3+0x1e6>
    1ffc:	76 95       	lsr	r23
    1ffe:	67 95       	ror	r22
    2000:	57 95       	ror	r21
    2002:	47 95       	ror	r20
    2004:	0a 94       	dec	r0
    2006:	d2 f7       	brpl	.-12     	; 0x1ffc <__umoddi3+0x1de>
    2008:	fa 01       	movw	r30, r20
    200a:	eb 57       	subi	r30, 0x7B	; 123
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	20 81       	ld	r18, Z
    2010:	82 0f       	add	r24, r18
    2012:	91 1d       	adc	r25, r1
    2014:	a1 1d       	adc	r26, r1
    2016:	b1 1d       	adc	r27, r1
    2018:	00 e2       	ldi	r16, 0x20	; 32
    201a:	10 e0       	ldi	r17, 0x00	; 0
    201c:	20 e0       	ldi	r18, 0x00	; 0
    201e:	30 e0       	ldi	r19, 0x00	; 0
    2020:	08 1b       	sub	r16, r24
    2022:	19 0b       	sbc	r17, r25
    2024:	2a 0b       	sbc	r18, r26
    2026:	3b 0b       	sbc	r19, r27
    2028:	0d 8f       	std	Y+29, r16	; 0x1d
    202a:	1e 8f       	std	Y+30, r17	; 0x1e
    202c:	2f 8f       	std	Y+31, r18	; 0x1f
    202e:	38 a3       	lds	r19, 0x58
    2030:	01 15       	cp	r16, r1
    2032:	11 05       	cpc	r17, r1
    2034:	21 05       	cpc	r18, r1
    2036:	31 05       	cpc	r19, r1
    2038:	29 f4       	brne	.+10     	; 0x2044 <__umoddi3+0x226>
    203a:	c8 18       	sub	r12, r8
    203c:	d9 08       	sbc	r13, r9
    203e:	ea 08       	sbc	r14, r10
    2040:	fb 08       	sbc	r15, r11
    2042:	eb c0       	rjmp	.+470    	; 0x221a <__umoddi3+0x3fc>
    2044:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2046:	02 2e       	mov	r0, r18
    2048:	04 c0       	rjmp	.+8      	; 0x2052 <__umoddi3+0x234>
    204a:	88 0c       	add	r8, r8
    204c:	99 1c       	adc	r9, r9
    204e:	aa 1c       	adc	r10, r10
    2050:	bb 1c       	adc	r11, r11
    2052:	0a 94       	dec	r0
    2054:	d2 f7       	brpl	.-12     	; 0x204a <__umoddi3+0x22c>
    2056:	b7 01       	movw	r22, r14
    2058:	a6 01       	movw	r20, r12
    205a:	08 2e       	mov	r0, r24
    205c:	04 c0       	rjmp	.+8      	; 0x2066 <__umoddi3+0x248>
    205e:	76 95       	lsr	r23
    2060:	67 95       	ror	r22
    2062:	57 95       	ror	r21
    2064:	47 95       	ror	r20
    2066:	0a 94       	dec	r0
    2068:	d2 f7       	brpl	.-12     	; 0x205e <__umoddi3+0x240>
    206a:	49 a7       	lds	r20, 0x79
    206c:	5a a7       	lds	r21, 0x7a
    206e:	6b a7       	lds	r22, 0x7b
    2070:	7c a7       	lds	r23, 0x7c
    2072:	b7 01       	movw	r22, r14
    2074:	a6 01       	movw	r20, r12
    2076:	02 2e       	mov	r0, r18
    2078:	04 c0       	rjmp	.+8      	; 0x2082 <__umoddi3+0x264>
    207a:	44 0f       	add	r20, r20
    207c:	55 1f       	adc	r21, r21
    207e:	66 1f       	adc	r22, r22
    2080:	77 1f       	adc	r23, r23
    2082:	0a 94       	dec	r0
    2084:	d2 f7       	brpl	.-12     	; 0x207a <__umoddi3+0x25c>
    2086:	c9 8c       	ldd	r12, Y+25	; 0x19
    2088:	da 8c       	ldd	r13, Y+26	; 0x1a
    208a:	eb 8c       	ldd	r14, Y+27	; 0x1b
    208c:	fc 8c       	ldd	r15, Y+28	; 0x1c
    208e:	04 c0       	rjmp	.+8      	; 0x2098 <__umoddi3+0x27a>
    2090:	f6 94       	lsr	r15
    2092:	e7 94       	ror	r14
    2094:	d7 94       	ror	r13
    2096:	c7 94       	ror	r12
    2098:	8a 95       	dec	r24
    209a:	d2 f7       	brpl	.-12     	; 0x2090 <__umoddi3+0x272>
    209c:	4c 29       	or	r20, r12
    209e:	5d 29       	or	r21, r13
    20a0:	6e 29       	or	r22, r14
    20a2:	7f 29       	or	r23, r15
    20a4:	49 a3       	lds	r20, 0x59
    20a6:	5a a3       	lds	r21, 0x5a
    20a8:	6b a3       	lds	r22, 0x5b
    20aa:	7c a3       	lds	r23, 0x5c
    20ac:	e9 8c       	ldd	r14, Y+25	; 0x19
    20ae:	fa 8c       	ldd	r15, Y+26	; 0x1a
    20b0:	0b 8d       	ldd	r16, Y+27	; 0x1b
    20b2:	1c 8d       	ldd	r17, Y+28	; 0x1c
    20b4:	04 c0       	rjmp	.+8      	; 0x20be <__umoddi3+0x2a0>
    20b6:	ee 0c       	add	r14, r14
    20b8:	ff 1c       	adc	r15, r15
    20ba:	00 1f       	adc	r16, r16
    20bc:	11 1f       	adc	r17, r17
    20be:	2a 95       	dec	r18
    20c0:	d2 f7       	brpl	.-12     	; 0x20b6 <__umoddi3+0x298>
    20c2:	e9 8e       	std	Y+25, r14	; 0x19
    20c4:	fa 8e       	std	Y+26, r15	; 0x1a
    20c6:	0b 8f       	std	Y+27, r16	; 0x1b
    20c8:	1c 8f       	std	Y+28, r17	; 0x1c
    20ca:	25 01       	movw	r4, r10
    20cc:	66 24       	eor	r6, r6
    20ce:	77 24       	eor	r7, r7
    20d0:	95 01       	movw	r18, r10
    20d2:	84 01       	movw	r16, r8
    20d4:	20 70       	andi	r18, 0x00	; 0
    20d6:	30 70       	andi	r19, 0x00	; 0
    20d8:	0d a3       	lds	r16, 0x5d
    20da:	1e a3       	lds	r17, 0x5e
    20dc:	2f a3       	lds	r18, 0x5f
    20de:	38 a7       	lds	r19, 0x78
    20e0:	69 a5       	lds	r22, 0x69
    20e2:	7a a5       	lds	r23, 0x6a
    20e4:	8b a5       	lds	r24, 0x6b
    20e6:	9c a5       	lds	r25, 0x6c
    20e8:	a3 01       	movw	r20, r6
    20ea:	92 01       	movw	r18, r4
    20ec:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    20f0:	02 2f       	mov	r16, r18
    20f2:	c3 2e       	mov	r12, r19
    20f4:	14 2f       	mov	r17, r20
    20f6:	f5 2e       	mov	r15, r21
    20f8:	6d a7       	lds	r22, 0x7d
    20fa:	7e a7       	lds	r23, 0x7e
    20fc:	8f a7       	lds	r24, 0x7f
    20fe:	98 ab       	sts	0x58, r25
    2100:	69 a5       	lds	r22, 0x69
    2102:	7a a5       	lds	r23, 0x6a
    2104:	8b a5       	lds	r24, 0x6b
    2106:	9c a5       	lds	r25, 0x6c
    2108:	a3 01       	movw	r20, r6
    210a:	92 01       	movw	r18, r4
    210c:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    2110:	60 2f       	mov	r22, r16
    2112:	7c 2d       	mov	r23, r12
    2114:	81 2f       	mov	r24, r17
    2116:	9f 2d       	mov	r25, r15
    2118:	2d a1       	lds	r18, 0x4d
    211a:	3e a1       	lds	r19, 0x4e
    211c:	4f a1       	lds	r20, 0x4f
    211e:	58 a5       	lds	r21, 0x68
    2120:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    2124:	dc 01       	movw	r26, r24
    2126:	cb 01       	movw	r24, r22
    2128:	0d a5       	lds	r16, 0x6d
    212a:	1e a5       	lds	r17, 0x6e
    212c:	2f a5       	lds	r18, 0x6f
    212e:	38 a9       	sts	0x48, r19
    2130:	78 01       	movw	r14, r16
    2132:	dd 24       	eor	r13, r13
    2134:	cc 24       	eor	r12, r12
    2136:	09 a1       	lds	r16, 0x49
    2138:	1a a1       	lds	r17, 0x4a
    213a:	2b a1       	lds	r18, 0x4b
    213c:	3c a1       	lds	r19, 0x4c
    213e:	a9 01       	movw	r20, r18
    2140:	66 27       	eor	r22, r22
    2142:	77 27       	eor	r23, r23
    2144:	c4 2a       	or	r12, r20
    2146:	d5 2a       	or	r13, r21
    2148:	e6 2a       	or	r14, r22
    214a:	f7 2a       	or	r15, r23
    214c:	c8 16       	cp	r12, r24
    214e:	d9 06       	cpc	r13, r25
    2150:	ea 06       	cpc	r14, r26
    2152:	fb 06       	cpc	r15, r27
    2154:	90 f4       	brcc	.+36     	; 0x217a <__umoddi3+0x35c>
    2156:	c8 0c       	add	r12, r8
    2158:	d9 1c       	adc	r13, r9
    215a:	ea 1c       	adc	r14, r10
    215c:	fb 1c       	adc	r15, r11
    215e:	c8 14       	cp	r12, r8
    2160:	d9 04       	cpc	r13, r9
    2162:	ea 04       	cpc	r14, r10
    2164:	fb 04       	cpc	r15, r11
    2166:	48 f0       	brcs	.+18     	; 0x217a <__umoddi3+0x35c>
    2168:	c8 16       	cp	r12, r24
    216a:	d9 06       	cpc	r13, r25
    216c:	ea 06       	cpc	r14, r26
    216e:	fb 06       	cpc	r15, r27
    2170:	20 f4       	brcc	.+8      	; 0x217a <__umoddi3+0x35c>
    2172:	c8 0c       	add	r12, r8
    2174:	d9 1c       	adc	r13, r9
    2176:	ea 1c       	adc	r14, r10
    2178:	fb 1c       	adc	r15, r11
    217a:	c8 1a       	sub	r12, r24
    217c:	d9 0a       	sbc	r13, r25
    217e:	ea 0a       	sbc	r14, r26
    2180:	fb 0a       	sbc	r15, r27
    2182:	c7 01       	movw	r24, r14
    2184:	b6 01       	movw	r22, r12
    2186:	a3 01       	movw	r20, r6
    2188:	92 01       	movw	r18, r4
    218a:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    218e:	12 2f       	mov	r17, r18
    2190:	03 2f       	mov	r16, r19
    2192:	34 2e       	mov	r3, r20
    2194:	25 2e       	mov	r2, r21
    2196:	69 a7       	lds	r22, 0x79
    2198:	7a a7       	lds	r23, 0x7a
    219a:	8b a7       	lds	r24, 0x7b
    219c:	9c a7       	lds	r25, 0x7c
    219e:	c7 01       	movw	r24, r14
    21a0:	b6 01       	movw	r22, r12
    21a2:	a3 01       	movw	r20, r6
    21a4:	92 01       	movw	r18, r4
    21a6:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    21aa:	61 2f       	mov	r22, r17
    21ac:	70 2f       	mov	r23, r16
    21ae:	83 2d       	mov	r24, r3
    21b0:	92 2d       	mov	r25, r2
    21b2:	2d a1       	lds	r18, 0x4d
    21b4:	3e a1       	lds	r19, 0x4e
    21b6:	4f a1       	lds	r20, 0x4f
    21b8:	58 a5       	lds	r21, 0x68
    21ba:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    21be:	dc 01       	movw	r26, r24
    21c0:	cb 01       	movw	r24, r22
    21c2:	09 a5       	lds	r16, 0x69
    21c4:	1a a5       	lds	r17, 0x6a
    21c6:	2b a5       	lds	r18, 0x6b
    21c8:	3c a5       	lds	r19, 0x6c
    21ca:	78 01       	movw	r14, r16
    21cc:	dd 24       	eor	r13, r13
    21ce:	cc 24       	eor	r12, r12
    21d0:	49 a1       	lds	r20, 0x49
    21d2:	5a a1       	lds	r21, 0x4a
    21d4:	6b a1       	lds	r22, 0x4b
    21d6:	7c a1       	lds	r23, 0x4c
    21d8:	60 70       	andi	r22, 0x00	; 0
    21da:	70 70       	andi	r23, 0x00	; 0
    21dc:	c4 2a       	or	r12, r20
    21de:	d5 2a       	or	r13, r21
    21e0:	e6 2a       	or	r14, r22
    21e2:	f7 2a       	or	r15, r23
    21e4:	c8 16       	cp	r12, r24
    21e6:	d9 06       	cpc	r13, r25
    21e8:	ea 06       	cpc	r14, r26
    21ea:	fb 06       	cpc	r15, r27
    21ec:	90 f4       	brcc	.+36     	; 0x2212 <__umoddi3+0x3f4>
    21ee:	c8 0c       	add	r12, r8
    21f0:	d9 1c       	adc	r13, r9
    21f2:	ea 1c       	adc	r14, r10
    21f4:	fb 1c       	adc	r15, r11
    21f6:	c8 14       	cp	r12, r8
    21f8:	d9 04       	cpc	r13, r9
    21fa:	ea 04       	cpc	r14, r10
    21fc:	fb 04       	cpc	r15, r11
    21fe:	48 f0       	brcs	.+18     	; 0x2212 <__umoddi3+0x3f4>
    2200:	c8 16       	cp	r12, r24
    2202:	d9 06       	cpc	r13, r25
    2204:	ea 06       	cpc	r14, r26
    2206:	fb 06       	cpc	r15, r27
    2208:	20 f4       	brcc	.+8      	; 0x2212 <__umoddi3+0x3f4>
    220a:	c8 0c       	add	r12, r8
    220c:	d9 1c       	adc	r13, r9
    220e:	ea 1c       	adc	r14, r10
    2210:	fb 1c       	adc	r15, r11
    2212:	c8 1a       	sub	r12, r24
    2214:	d9 0a       	sbc	r13, r25
    2216:	ea 0a       	sbc	r14, r26
    2218:	fb 0a       	sbc	r15, r27
    221a:	85 01       	movw	r16, r10
    221c:	22 27       	eor	r18, r18
    221e:	33 27       	eor	r19, r19
    2220:	09 a3       	lds	r16, 0x59
    2222:	1a a3       	lds	r17, 0x5a
    2224:	2b a3       	lds	r18, 0x5b
    2226:	3c a3       	lds	r19, 0x5c
    2228:	95 01       	movw	r18, r10
    222a:	84 01       	movw	r16, r8
    222c:	20 70       	andi	r18, 0x00	; 0
    222e:	30 70       	andi	r19, 0x00	; 0
    2230:	09 a7       	lds	r16, 0x79
    2232:	1a a7       	lds	r17, 0x7a
    2234:	2b a7       	lds	r18, 0x7b
    2236:	3c a7       	lds	r19, 0x7c
    2238:	c7 01       	movw	r24, r14
    223a:	b6 01       	movw	r22, r12
    223c:	29 a1       	lds	r18, 0x49
    223e:	3a a1       	lds	r19, 0x4a
    2240:	4b a1       	lds	r20, 0x4b
    2242:	5c a1       	lds	r21, 0x4c
    2244:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    2248:	12 2f       	mov	r17, r18
    224a:	03 2f       	mov	r16, r19
    224c:	44 2e       	mov	r4, r20
    224e:	75 2e       	mov	r7, r21
    2250:	6d a3       	lds	r22, 0x5d
    2252:	7e a3       	lds	r23, 0x5e
    2254:	8f a3       	lds	r24, 0x5f
    2256:	98 a7       	lds	r25, 0x78
    2258:	c7 01       	movw	r24, r14
    225a:	b6 01       	movw	r22, r12
    225c:	29 a1       	lds	r18, 0x49
    225e:	3a a1       	lds	r19, 0x4a
    2260:	4b a1       	lds	r20, 0x4b
    2262:	5c a1       	lds	r21, 0x4c
    2264:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    2268:	61 2f       	mov	r22, r17
    226a:	70 2f       	mov	r23, r16
    226c:	84 2d       	mov	r24, r4
    226e:	97 2d       	mov	r25, r7
    2270:	29 a5       	lds	r18, 0x69
    2272:	3a a5       	lds	r19, 0x6a
    2274:	4b a5       	lds	r20, 0x6b
    2276:	5c a5       	lds	r21, 0x6c
    2278:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    227c:	dc 01       	movw	r26, r24
    227e:	cb 01       	movw	r24, r22
    2280:	0d a1       	lds	r16, 0x4d
    2282:	1e a1       	lds	r17, 0x4e
    2284:	2f a1       	lds	r18, 0x4f
    2286:	38 a5       	lds	r19, 0x68
    2288:	78 01       	movw	r14, r16
    228a:	dd 24       	eor	r13, r13
    228c:	cc 24       	eor	r12, r12
    228e:	09 8d       	ldd	r16, Y+25	; 0x19
    2290:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2292:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2294:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2296:	a9 01       	movw	r20, r18
    2298:	66 27       	eor	r22, r22
    229a:	77 27       	eor	r23, r23
    229c:	c4 2a       	or	r12, r20
    229e:	d5 2a       	or	r13, r21
    22a0:	e6 2a       	or	r14, r22
    22a2:	f7 2a       	or	r15, r23
    22a4:	c8 16       	cp	r12, r24
    22a6:	d9 06       	cpc	r13, r25
    22a8:	ea 06       	cpc	r14, r26
    22aa:	fb 06       	cpc	r15, r27
    22ac:	90 f4       	brcc	.+36     	; 0x22d2 <__umoddi3+0x4b4>
    22ae:	c8 0c       	add	r12, r8
    22b0:	d9 1c       	adc	r13, r9
    22b2:	ea 1c       	adc	r14, r10
    22b4:	fb 1c       	adc	r15, r11
    22b6:	c8 14       	cp	r12, r8
    22b8:	d9 04       	cpc	r13, r9
    22ba:	ea 04       	cpc	r14, r10
    22bc:	fb 04       	cpc	r15, r11
    22be:	48 f0       	brcs	.+18     	; 0x22d2 <__umoddi3+0x4b4>
    22c0:	c8 16       	cp	r12, r24
    22c2:	d9 06       	cpc	r13, r25
    22c4:	ea 06       	cpc	r14, r26
    22c6:	fb 06       	cpc	r15, r27
    22c8:	20 f4       	brcc	.+8      	; 0x22d2 <__umoddi3+0x4b4>
    22ca:	c8 0c       	add	r12, r8
    22cc:	d9 1c       	adc	r13, r9
    22ce:	ea 1c       	adc	r14, r10
    22d0:	fb 1c       	adc	r15, r11
    22d2:	c8 1a       	sub	r12, r24
    22d4:	d9 0a       	sbc	r13, r25
    22d6:	ea 0a       	sbc	r14, r26
    22d8:	fb 0a       	sbc	r15, r27
    22da:	c7 01       	movw	r24, r14
    22dc:	b6 01       	movw	r22, r12
    22de:	29 a1       	lds	r18, 0x49
    22e0:	3a a1       	lds	r19, 0x4a
    22e2:	4b a1       	lds	r20, 0x4b
    22e4:	5c a1       	lds	r21, 0x4c
    22e6:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    22ea:	12 2f       	mov	r17, r18
    22ec:	03 2f       	mov	r16, r19
    22ee:	44 2e       	mov	r4, r20
    22f0:	75 2e       	mov	r7, r21
    22f2:	6d a3       	lds	r22, 0x5d
    22f4:	7e a3       	lds	r23, 0x5e
    22f6:	8f a3       	lds	r24, 0x5f
    22f8:	98 a7       	lds	r25, 0x78
    22fa:	c7 01       	movw	r24, r14
    22fc:	b6 01       	movw	r22, r12
    22fe:	29 a1       	lds	r18, 0x49
    2300:	3a a1       	lds	r19, 0x4a
    2302:	4b a1       	lds	r20, 0x4b
    2304:	5c a1       	lds	r21, 0x4c
    2306:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    230a:	61 2f       	mov	r22, r17
    230c:	70 2f       	mov	r23, r16
    230e:	84 2d       	mov	r24, r4
    2310:	97 2d       	mov	r25, r7
    2312:	29 a5       	lds	r18, 0x69
    2314:	3a a5       	lds	r19, 0x6a
    2316:	4b a5       	lds	r20, 0x6b
    2318:	5c a5       	lds	r21, 0x6c
    231a:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    231e:	ab 01       	movw	r20, r22
    2320:	bc 01       	movw	r22, r24
    2322:	cd a0       	lds	r28, 0x8d
    2324:	de a0       	lds	r29, 0x8e
    2326:	ef a0       	lds	r30, 0x8f
    2328:	f8 a4       	lds	r31, 0xa8
    232a:	d6 01       	movw	r26, r12
    232c:	99 27       	eor	r25, r25
    232e:	88 27       	eor	r24, r24
    2330:	09 8d       	ldd	r16, Y+25	; 0x19
    2332:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2334:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2336:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2338:	20 70       	andi	r18, 0x00	; 0
    233a:	30 70       	andi	r19, 0x00	; 0
    233c:	80 2b       	or	r24, r16
    233e:	91 2b       	or	r25, r17
    2340:	a2 2b       	or	r26, r18
    2342:	b3 2b       	or	r27, r19
    2344:	84 17       	cp	r24, r20
    2346:	95 07       	cpc	r25, r21
    2348:	a6 07       	cpc	r26, r22
    234a:	b7 07       	cpc	r27, r23
    234c:	90 f4       	brcc	.+36     	; 0x2372 <__umoddi3+0x554>
    234e:	88 0d       	add	r24, r8
    2350:	99 1d       	adc	r25, r9
    2352:	aa 1d       	adc	r26, r10
    2354:	bb 1d       	adc	r27, r11
    2356:	88 15       	cp	r24, r8
    2358:	99 05       	cpc	r25, r9
    235a:	aa 05       	cpc	r26, r10
    235c:	bb 05       	cpc	r27, r11
    235e:	48 f0       	brcs	.+18     	; 0x2372 <__umoddi3+0x554>
    2360:	84 17       	cp	r24, r20
    2362:	95 07       	cpc	r25, r21
    2364:	a6 07       	cpc	r26, r22
    2366:	b7 07       	cpc	r27, r23
    2368:	20 f4       	brcc	.+8      	; 0x2372 <__umoddi3+0x554>
    236a:	88 0d       	add	r24, r8
    236c:	99 1d       	adc	r25, r9
    236e:	aa 1d       	adc	r26, r10
    2370:	bb 1d       	adc	r27, r11
    2372:	84 1b       	sub	r24, r20
    2374:	95 0b       	sbc	r25, r21
    2376:	a6 0b       	sbc	r26, r22
    2378:	b7 0b       	sbc	r27, r23
    237a:	8c 01       	movw	r16, r24
    237c:	9d 01       	movw	r18, r26
    237e:	0d 8c       	ldd	r0, Y+29	; 0x1d
    2380:	04 c0       	rjmp	.+8      	; 0x238a <__umoddi3+0x56c>
    2382:	36 95       	lsr	r19
    2384:	27 95       	ror	r18
    2386:	17 95       	ror	r17
    2388:	07 95       	ror	r16
    238a:	0a 94       	dec	r0
    238c:	d2 f7       	brpl	.-12     	; 0x2382 <__umoddi3+0x564>
    238e:	09 83       	std	Y+1, r16	; 0x01
    2390:	1a 83       	std	Y+2, r17	; 0x02
    2392:	2b 83       	std	Y+3, r18	; 0x03
    2394:	3c 83       	std	Y+4, r19	; 0x04
    2396:	1d 82       	std	Y+5, r1	; 0x05
    2398:	1e 82       	std	Y+6, r1	; 0x06
    239a:	1f 82       	std	Y+7, r1	; 0x07
    239c:	18 86       	std	Y+8, r1	; 0x08
    239e:	20 2f       	mov	r18, r16
    23a0:	3a 81       	ldd	r19, Y+2	; 0x02
    23a2:	4b 81       	ldd	r20, Y+3	; 0x03
    23a4:	5c 81       	ldd	r21, Y+4	; 0x04
    23a6:	60 e0       	ldi	r22, 0x00	; 0
    23a8:	d1 c2       	rjmp	.+1442   	; 0x294c <__umoddi3+0xb2e>
    23aa:	c8 16       	cp	r12, r24
    23ac:	d9 06       	cpc	r13, r25
    23ae:	ea 06       	cpc	r14, r26
    23b0:	fb 06       	cpc	r15, r27
    23b2:	18 f4       	brcc	.+6      	; 0x23ba <__umoddi3+0x59c>
    23b4:	8f 2f       	mov	r24, r31
    23b6:	9e 2f       	mov	r25, r30
    23b8:	cc c2       	rjmp	.+1432   	; 0x2952 <__umoddi3+0xb34>
    23ba:	80 30       	cpi	r24, 0x00	; 0
    23bc:	00 e0       	ldi	r16, 0x00	; 0
    23be:	90 07       	cpc	r25, r16
    23c0:	01 e0       	ldi	r16, 0x01	; 1
    23c2:	a0 07       	cpc	r26, r16
    23c4:	00 e0       	ldi	r16, 0x00	; 0
    23c6:	b0 07       	cpc	r27, r16
    23c8:	50 f4       	brcc	.+20     	; 0x23de <__umoddi3+0x5c0>
    23ca:	8f 3f       	cpi	r24, 0xFF	; 255
    23cc:	91 05       	cpc	r25, r1
    23ce:	a1 05       	cpc	r26, r1
    23d0:	b1 05       	cpc	r27, r1
    23d2:	09 f0       	breq	.+2      	; 0x23d6 <__umoddi3+0x5b8>
    23d4:	88 f4       	brcc	.+34     	; 0x23f8 <__umoddi3+0x5da>
    23d6:	00 e0       	ldi	r16, 0x00	; 0
    23d8:	10 e0       	ldi	r17, 0x00	; 0
    23da:	98 01       	movw	r18, r16
    23dc:	16 c0       	rjmp	.+44     	; 0x240a <__umoddi3+0x5ec>
    23de:	80 30       	cpi	r24, 0x00	; 0
    23e0:	10 e0       	ldi	r17, 0x00	; 0
    23e2:	91 07       	cpc	r25, r17
    23e4:	10 e0       	ldi	r17, 0x00	; 0
    23e6:	a1 07       	cpc	r26, r17
    23e8:	11 e0       	ldi	r17, 0x01	; 1
    23ea:	b1 07       	cpc	r27, r17
    23ec:	50 f4       	brcc	.+20     	; 0x2402 <__umoddi3+0x5e4>
    23ee:	00 e1       	ldi	r16, 0x10	; 16
    23f0:	10 e0       	ldi	r17, 0x00	; 0
    23f2:	20 e0       	ldi	r18, 0x00	; 0
    23f4:	30 e0       	ldi	r19, 0x00	; 0
    23f6:	09 c0       	rjmp	.+18     	; 0x240a <__umoddi3+0x5ec>
    23f8:	08 e0       	ldi	r16, 0x08	; 8
    23fa:	10 e0       	ldi	r17, 0x00	; 0
    23fc:	20 e0       	ldi	r18, 0x00	; 0
    23fe:	30 e0       	ldi	r19, 0x00	; 0
    2400:	04 c0       	rjmp	.+8      	; 0x240a <__umoddi3+0x5ec>
    2402:	08 e1       	ldi	r16, 0x18	; 24
    2404:	10 e0       	ldi	r17, 0x00	; 0
    2406:	20 e0       	ldi	r18, 0x00	; 0
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	ac 01       	movw	r20, r24
    240c:	bd 01       	movw	r22, r26
    240e:	00 2e       	mov	r0, r16
    2410:	04 c0       	rjmp	.+8      	; 0x241a <__umoddi3+0x5fc>
    2412:	76 95       	lsr	r23
    2414:	67 95       	ror	r22
    2416:	57 95       	ror	r21
    2418:	47 95       	ror	r20
    241a:	0a 94       	dec	r0
    241c:	d2 f7       	brpl	.-12     	; 0x2412 <__umoddi3+0x5f4>
    241e:	fa 01       	movw	r30, r20
    2420:	eb 57       	subi	r30, 0x7B	; 123
    2422:	ff 4f       	sbci	r31, 0xFF	; 255
    2424:	40 81       	ld	r20, Z
    2426:	04 0f       	add	r16, r20
    2428:	11 1d       	adc	r17, r1
    242a:	21 1d       	adc	r18, r1
    242c:	31 1d       	adc	r19, r1
    242e:	40 e2       	ldi	r20, 0x20	; 32
    2430:	50 e0       	ldi	r21, 0x00	; 0
    2432:	60 e0       	ldi	r22, 0x00	; 0
    2434:	70 e0       	ldi	r23, 0x00	; 0
    2436:	40 1b       	sub	r20, r16
    2438:	51 0b       	sbc	r21, r17
    243a:	62 0b       	sbc	r22, r18
    243c:	73 0b       	sbc	r23, r19
    243e:	09 f0       	breq	.+2      	; 0x2442 <__umoddi3+0x624>
    2440:	40 c0       	rjmp	.+128    	; 0x24c2 <__umoddi3+0x6a4>
    2442:	8c 15       	cp	r24, r12
    2444:	9d 05       	cpc	r25, r13
    2446:	ae 05       	cpc	r26, r14
    2448:	bf 05       	cpc	r27, r15
    244a:	48 f0       	brcs	.+18     	; 0x245e <__umoddi3+0x640>
    244c:	09 8d       	ldd	r16, Y+25	; 0x19
    244e:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2450:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2452:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2454:	08 15       	cp	r16, r8
    2456:	19 05       	cpc	r17, r9
    2458:	2a 05       	cpc	r18, r10
    245a:	3b 05       	cpc	r19, r11
    245c:	20 f1       	brcs	.+72     	; 0x24a6 <__umoddi3+0x688>
    245e:	49 8d       	ldd	r20, Y+25	; 0x19
    2460:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2462:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2464:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2466:	48 19       	sub	r20, r8
    2468:	59 09       	sbc	r21, r9
    246a:	6a 09       	sbc	r22, r10
    246c:	7b 09       	sbc	r23, r11
    246e:	c8 1a       	sub	r12, r24
    2470:	d9 0a       	sbc	r13, r25
    2472:	ea 0a       	sbc	r14, r26
    2474:	fb 0a       	sbc	r15, r27
    2476:	81 e0       	ldi	r24, 0x01	; 1
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	a0 e0       	ldi	r26, 0x00	; 0
    247c:	b0 e0       	ldi	r27, 0x00	; 0
    247e:	89 8c       	ldd	r8, Y+25	; 0x19
    2480:	9a 8c       	ldd	r9, Y+26	; 0x1a
    2482:	ab 8c       	ldd	r10, Y+27	; 0x1b
    2484:	bc 8c       	ldd	r11, Y+28	; 0x1c
    2486:	84 16       	cp	r8, r20
    2488:	95 06       	cpc	r9, r21
    248a:	a6 06       	cpc	r10, r22
    248c:	b7 06       	cpc	r11, r23
    248e:	18 f0       	brcs	.+6      	; 0x2496 <__umoddi3+0x678>
    2490:	80 e0       	ldi	r24, 0x00	; 0
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	dc 01       	movw	r26, r24
    2496:	c8 1a       	sub	r12, r24
    2498:	d9 0a       	sbc	r13, r25
    249a:	ea 0a       	sbc	r14, r26
    249c:	fb 0a       	sbc	r15, r27
    249e:	49 8f       	std	Y+25, r20	; 0x19
    24a0:	5a 8f       	std	Y+26, r21	; 0x1a
    24a2:	6b 8f       	std	Y+27, r22	; 0x1b
    24a4:	7c 8f       	std	Y+28, r23	; 0x1c
    24a6:	09 8d       	ldd	r16, Y+25	; 0x19
    24a8:	1a 8d       	ldd	r17, Y+26	; 0x1a
    24aa:	2b 8d       	ldd	r18, Y+27	; 0x1b
    24ac:	3c 8d       	ldd	r19, Y+28	; 0x1c
    24ae:	09 83       	std	Y+1, r16	; 0x01
    24b0:	1a 83       	std	Y+2, r17	; 0x02
    24b2:	2b 83       	std	Y+3, r18	; 0x03
    24b4:	3c 83       	std	Y+4, r19	; 0x04
    24b6:	cd 82       	std	Y+5, r12	; 0x05
    24b8:	de 82       	std	Y+6, r13	; 0x06
    24ba:	ef 82       	std	Y+7, r14	; 0x07
    24bc:	f8 86       	std	Y+8, r15	; 0x08
    24be:	29 8d       	ldd	r18, Y+25	; 0x19
    24c0:	41 c2       	rjmp	.+1154   	; 0x2944 <__umoddi3+0xb26>
    24c2:	34 2e       	mov	r3, r20
    24c4:	ac 01       	movw	r20, r24
    24c6:	bd 01       	movw	r22, r26
    24c8:	03 2c       	mov	r0, r3
    24ca:	04 c0       	rjmp	.+8      	; 0x24d4 <__umoddi3+0x6b6>
    24cc:	44 0f       	add	r20, r20
    24ce:	55 1f       	adc	r21, r21
    24d0:	66 1f       	adc	r22, r22
    24d2:	77 1f       	adc	r23, r23
    24d4:	0a 94       	dec	r0
    24d6:	d2 f7       	brpl	.-12     	; 0x24cc <__umoddi3+0x6ae>
    24d8:	20 2e       	mov	r2, r16
    24da:	d5 01       	movw	r26, r10
    24dc:	c4 01       	movw	r24, r8
    24de:	04 c0       	rjmp	.+8      	; 0x24e8 <__umoddi3+0x6ca>
    24e0:	b6 95       	lsr	r27
    24e2:	a7 95       	ror	r26
    24e4:	97 95       	ror	r25
    24e6:	87 95       	ror	r24
    24e8:	0a 95       	dec	r16
    24ea:	d2 f7       	brpl	.-12     	; 0x24e0 <__umoddi3+0x6c2>
    24ec:	48 2b       	or	r20, r24
    24ee:	59 2b       	or	r21, r25
    24f0:	6a 2b       	or	r22, r26
    24f2:	7b 2b       	or	r23, r27
    24f4:	4d 8f       	std	Y+29, r20	; 0x1d
    24f6:	5e 8f       	std	Y+30, r21	; 0x1e
    24f8:	6f 8f       	std	Y+31, r22	; 0x1f
    24fa:	78 a3       	lds	r23, 0x58
    24fc:	95 01       	movw	r18, r10
    24fe:	84 01       	movw	r16, r8
    2500:	03 2c       	mov	r0, r3
    2502:	04 c0       	rjmp	.+8      	; 0x250c <__umoddi3+0x6ee>
    2504:	00 0f       	add	r16, r16
    2506:	11 1f       	adc	r17, r17
    2508:	22 1f       	adc	r18, r18
    250a:	33 1f       	adc	r19, r19
    250c:	0a 94       	dec	r0
    250e:	d2 f7       	brpl	.-12     	; 0x2504 <__umoddi3+0x6e6>
    2510:	09 a7       	lds	r16, 0x79
    2512:	1a a7       	lds	r17, 0x7a
    2514:	2b a7       	lds	r18, 0x7b
    2516:	3c a7       	lds	r19, 0x7c
    2518:	46 01       	movw	r8, r12
    251a:	57 01       	movw	r10, r14
    251c:	02 2c       	mov	r0, r2
    251e:	04 c0       	rjmp	.+8      	; 0x2528 <__umoddi3+0x70a>
    2520:	b6 94       	lsr	r11
    2522:	a7 94       	ror	r10
    2524:	97 94       	ror	r9
    2526:	87 94       	ror	r8
    2528:	0a 94       	dec	r0
    252a:	d2 f7       	brpl	.-12     	; 0x2520 <__umoddi3+0x702>
    252c:	8d a2       	lds	r24, 0x9d
    252e:	9e a2       	lds	r25, 0x9e
    2530:	af a2       	lds	r26, 0x9f
    2532:	b8 a6       	lds	r27, 0xb8
    2534:	97 01       	movw	r18, r14
    2536:	86 01       	movw	r16, r12
    2538:	03 2c       	mov	r0, r3
    253a:	04 c0       	rjmp	.+8      	; 0x2544 <__umoddi3+0x726>
    253c:	00 0f       	add	r16, r16
    253e:	11 1f       	adc	r17, r17
    2540:	22 1f       	adc	r18, r18
    2542:	33 1f       	adc	r19, r19
    2544:	0a 94       	dec	r0
    2546:	d2 f7       	brpl	.-12     	; 0x253c <__umoddi3+0x71e>
    2548:	89 8d       	ldd	r24, Y+25	; 0x19
    254a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    254c:	ab 8d       	ldd	r26, Y+27	; 0x1b
    254e:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2550:	02 2c       	mov	r0, r2
    2552:	04 c0       	rjmp	.+8      	; 0x255c <__umoddi3+0x73e>
    2554:	b6 95       	lsr	r27
    2556:	a7 95       	ror	r26
    2558:	97 95       	ror	r25
    255a:	87 95       	ror	r24
    255c:	0a 94       	dec	r0
    255e:	d2 f7       	brpl	.-12     	; 0x2554 <__umoddi3+0x736>
    2560:	08 2b       	or	r16, r24
    2562:	19 2b       	or	r17, r25
    2564:	2a 2b       	or	r18, r26
    2566:	3b 2b       	or	r19, r27
    2568:	09 a3       	lds	r16, 0x59
    256a:	1a a3       	lds	r17, 0x5a
    256c:	2b a3       	lds	r18, 0x5b
    256e:	3c a3       	lds	r19, 0x5c
    2570:	89 8c       	ldd	r8, Y+25	; 0x19
    2572:	9a 8c       	ldd	r9, Y+26	; 0x1a
    2574:	ab 8c       	ldd	r10, Y+27	; 0x1b
    2576:	bc 8c       	ldd	r11, Y+28	; 0x1c
    2578:	03 2c       	mov	r0, r3
    257a:	04 c0       	rjmp	.+8      	; 0x2584 <__umoddi3+0x766>
    257c:	88 0c       	add	r8, r8
    257e:	99 1c       	adc	r9, r9
    2580:	aa 1c       	adc	r10, r10
    2582:	bb 1c       	adc	r11, r11
    2584:	0a 94       	dec	r0
    2586:	d2 f7       	brpl	.-12     	; 0x257c <__umoddi3+0x75e>
    2588:	89 8e       	std	Y+25, r8	; 0x19
    258a:	9a 8e       	std	Y+26, r9	; 0x1a
    258c:	ab 8e       	std	Y+27, r10	; 0x1b
    258e:	bc 8e       	std	Y+28, r11	; 0x1c
    2590:	4b 01       	movw	r8, r22
    2592:	aa 24       	eor	r10, r10
    2594:	bb 24       	eor	r11, r11
    2596:	60 70       	andi	r22, 0x00	; 0
    2598:	70 70       	andi	r23, 0x00	; 0
    259a:	4d a7       	lds	r20, 0x7d
    259c:	5e a7       	lds	r21, 0x7e
    259e:	6f a7       	lds	r22, 0x7f
    25a0:	78 ab       	sts	0x58, r23
    25a2:	6d a1       	lds	r22, 0x4d
    25a4:	7e a1       	lds	r23, 0x4e
    25a6:	8f a1       	lds	r24, 0x4f
    25a8:	98 a5       	lds	r25, 0x68
    25aa:	a5 01       	movw	r20, r10
    25ac:	94 01       	movw	r18, r8
    25ae:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    25b2:	29 01       	movw	r4, r18
    25b4:	3a 01       	movw	r6, r20
    25b6:	6b 01       	movw	r12, r22
    25b8:	7c 01       	movw	r14, r24
    25ba:	6d a1       	lds	r22, 0x4d
    25bc:	7e a1       	lds	r23, 0x4e
    25be:	8f a1       	lds	r24, 0x4f
    25c0:	98 a5       	lds	r25, 0x68
    25c2:	a5 01       	movw	r20, r10
    25c4:	94 01       	movw	r18, r8
    25c6:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    25ca:	c3 01       	movw	r24, r6
    25cc:	b2 01       	movw	r22, r4
    25ce:	2d a5       	lds	r18, 0x6d
    25d0:	3e a5       	lds	r19, 0x6e
    25d2:	4f a5       	lds	r20, 0x6f
    25d4:	58 a9       	sts	0x48, r21
    25d6:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    25da:	dc 01       	movw	r26, r24
    25dc:	cb 01       	movw	r24, r22
    25de:	76 01       	movw	r14, r12
    25e0:	dd 24       	eor	r13, r13
    25e2:	cc 24       	eor	r12, r12
    25e4:	09 a1       	lds	r16, 0x49
    25e6:	1a a1       	lds	r17, 0x4a
    25e8:	2b a1       	lds	r18, 0x4b
    25ea:	3c a1       	lds	r19, 0x4c
    25ec:	a9 01       	movw	r20, r18
    25ee:	66 27       	eor	r22, r22
    25f0:	77 27       	eor	r23, r23
    25f2:	c4 2a       	or	r12, r20
    25f4:	d5 2a       	or	r13, r21
    25f6:	e6 2a       	or	r14, r22
    25f8:	f7 2a       	or	r15, r23
    25fa:	c8 16       	cp	r12, r24
    25fc:	d9 06       	cpc	r13, r25
    25fe:	ea 06       	cpc	r14, r26
    2600:	fb 06       	cpc	r15, r27
    2602:	78 f5       	brcc	.+94     	; 0x2662 <__umoddi3+0x844>
    2604:	93 01       	movw	r18, r6
    2606:	82 01       	movw	r16, r4
    2608:	01 50       	subi	r16, 0x01	; 1
    260a:	10 40       	sbci	r17, 0x00	; 0
    260c:	20 40       	sbci	r18, 0x00	; 0
    260e:	30 40       	sbci	r19, 0x00	; 0
    2610:	0d a3       	lds	r16, 0x5d
    2612:	1e a3       	lds	r17, 0x5e
    2614:	2f a3       	lds	r18, 0x5f
    2616:	38 a7       	lds	r19, 0x78
    2618:	0d 8d       	ldd	r16, Y+29	; 0x1d
    261a:	1e 8d       	ldd	r17, Y+30	; 0x1e
    261c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    261e:	38 a1       	lds	r19, 0x48
    2620:	c0 0e       	add	r12, r16
    2622:	d1 1e       	adc	r13, r17
    2624:	e2 1e       	adc	r14, r18
    2626:	f3 1e       	adc	r15, r19
    2628:	c0 16       	cp	r12, r16
    262a:	d1 06       	cpc	r13, r17
    262c:	e2 06       	cpc	r14, r18
    262e:	f3 06       	cpc	r15, r19
    2630:	e0 f0       	brcs	.+56     	; 0x266a <__umoddi3+0x84c>
    2632:	c8 16       	cp	r12, r24
    2634:	d9 06       	cpc	r13, r25
    2636:	ea 06       	cpc	r14, r26
    2638:	fb 06       	cpc	r15, r27
    263a:	b8 f4       	brcc	.+46     	; 0x266a <__umoddi3+0x84c>
    263c:	93 01       	movw	r18, r6
    263e:	82 01       	movw	r16, r4
    2640:	02 50       	subi	r16, 0x02	; 2
    2642:	10 40       	sbci	r17, 0x00	; 0
    2644:	20 40       	sbci	r18, 0x00	; 0
    2646:	30 40       	sbci	r19, 0x00	; 0
    2648:	0d a3       	lds	r16, 0x5d
    264a:	1e a3       	lds	r17, 0x5e
    264c:	2f a3       	lds	r18, 0x5f
    264e:	38 a7       	lds	r19, 0x78
    2650:	0d 8d       	ldd	r16, Y+29	; 0x1d
    2652:	1e 8d       	ldd	r17, Y+30	; 0x1e
    2654:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2656:	38 a1       	lds	r19, 0x48
    2658:	c0 0e       	add	r12, r16
    265a:	d1 1e       	adc	r13, r17
    265c:	e2 1e       	adc	r14, r18
    265e:	f3 1e       	adc	r15, r19
    2660:	04 c0       	rjmp	.+8      	; 0x266a <__umoddi3+0x84c>
    2662:	4d a2       	lds	r20, 0x9d
    2664:	5e a2       	lds	r21, 0x9e
    2666:	6f a2       	lds	r22, 0x9f
    2668:	78 a6       	lds	r23, 0xb8
    266a:	c8 1a       	sub	r12, r24
    266c:	d9 0a       	sbc	r13, r25
    266e:	ea 0a       	sbc	r14, r26
    2670:	fb 0a       	sbc	r15, r27
    2672:	c7 01       	movw	r24, r14
    2674:	b6 01       	movw	r22, r12
    2676:	a5 01       	movw	r20, r10
    2678:	94 01       	movw	r18, r8
    267a:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    267e:	29 01       	movw	r4, r18
    2680:	3a 01       	movw	r6, r20
    2682:	69 ab       	sts	0x59, r22
    2684:	7a ab       	sts	0x5a, r23
    2686:	8b ab       	sts	0x5b, r24
    2688:	9c ab       	sts	0x5c, r25
    268a:	c7 01       	movw	r24, r14
    268c:	b6 01       	movw	r22, r12
    268e:	a5 01       	movw	r20, r10
    2690:	94 01       	movw	r18, r8
    2692:	0e 94 cc 14 	call	0x2998	; 0x2998 <__udivmodsi4>
    2696:	c3 01       	movw	r24, r6
    2698:	b2 01       	movw	r22, r4
    269a:	2d a5       	lds	r18, 0x6d
    269c:	3e a5       	lds	r19, 0x6e
    269e:	4f a5       	lds	r20, 0x6f
    26a0:	58 a9       	sts	0x48, r21
    26a2:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    26a6:	8b 01       	movw	r16, r22
    26a8:	9c 01       	movw	r18, r24
    26aa:	89 a8       	sts	0x89, r24
    26ac:	9a a8       	sts	0x8a, r25
    26ae:	ab a8       	sts	0x8b, r26
    26b0:	bc a8       	sts	0x8c, r27
    26b2:	b4 01       	movw	r22, r8
    26b4:	55 27       	eor	r21, r21
    26b6:	44 27       	eor	r20, r20
    26b8:	89 a1       	lds	r24, 0x49
    26ba:	9a a1       	lds	r25, 0x4a
    26bc:	ab a1       	lds	r26, 0x4b
    26be:	bc a1       	lds	r27, 0x4c
    26c0:	a0 70       	andi	r26, 0x00	; 0
    26c2:	b0 70       	andi	r27, 0x00	; 0
    26c4:	48 2b       	or	r20, r24
    26c6:	59 2b       	or	r21, r25
    26c8:	6a 2b       	or	r22, r26
    26ca:	7b 2b       	or	r23, r27
    26cc:	d3 01       	movw	r26, r6
    26ce:	c2 01       	movw	r24, r4
    26d0:	40 17       	cp	r20, r16
    26d2:	51 07       	cpc	r21, r17
    26d4:	62 07       	cpc	r22, r18
    26d6:	73 07       	cpc	r23, r19
    26d8:	f0 f4       	brcc	.+60     	; 0x2716 <__umoddi3+0x8f8>
    26da:	01 97       	sbiw	r24, 0x01	; 1
    26dc:	a1 09       	sbc	r26, r1
    26de:	b1 09       	sbc	r27, r1
    26e0:	ad 8c       	ldd	r10, Y+29	; 0x1d
    26e2:	be 8c       	ldd	r11, Y+30	; 0x1e
    26e4:	cf 8c       	ldd	r12, Y+31	; 0x1f
    26e6:	d8 a0       	lds	r29, 0x88
    26e8:	4a 0d       	add	r20, r10
    26ea:	5b 1d       	adc	r21, r11
    26ec:	6c 1d       	adc	r22, r12
    26ee:	7d 1d       	adc	r23, r13
    26f0:	4a 15       	cp	r20, r10
    26f2:	5b 05       	cpc	r21, r11
    26f4:	6c 05       	cpc	r22, r12
    26f6:	7d 05       	cpc	r23, r13
    26f8:	70 f0       	brcs	.+28     	; 0x2716 <__umoddi3+0x8f8>
    26fa:	40 17       	cp	r20, r16
    26fc:	51 07       	cpc	r21, r17
    26fe:	62 07       	cpc	r22, r18
    2700:	73 07       	cpc	r23, r19
    2702:	48 f4       	brcc	.+18     	; 0x2716 <__umoddi3+0x8f8>
    2704:	d3 01       	movw	r26, r6
    2706:	c2 01       	movw	r24, r4
    2708:	02 97       	sbiw	r24, 0x02	; 2
    270a:	a1 09       	sbc	r26, r1
    270c:	b1 09       	sbc	r27, r1
    270e:	4a 0d       	add	r20, r10
    2710:	5b 1d       	adc	r21, r11
    2712:	6c 1d       	adc	r22, r12
    2714:	7d 1d       	adc	r23, r13
    2716:	6a 01       	movw	r12, r20
    2718:	7b 01       	movw	r14, r22
    271a:	c0 1a       	sub	r12, r16
    271c:	d1 0a       	sbc	r13, r17
    271e:	e2 0a       	sbc	r14, r18
    2720:	f3 0a       	sbc	r15, r19
    2722:	c9 a2       	lds	r28, 0x99
    2724:	da a2       	lds	r29, 0x9a
    2726:	eb a2       	lds	r30, 0x9b
    2728:	fc a2       	lds	r31, 0x9c
    272a:	ed a0       	lds	r30, 0x8d
    272c:	fe a0       	lds	r31, 0x8e
    272e:	0f a1       	lds	r16, 0x4f
    2730:	18 a5       	lds	r17, 0x68
    2732:	b7 01       	movw	r22, r14
    2734:	55 27       	eor	r21, r21
    2736:	44 27       	eor	r20, r20
    2738:	48 2b       	or	r20, r24
    273a:	59 2b       	or	r21, r25
    273c:	6a 2b       	or	r22, r26
    273e:	7b 2b       	or	r23, r27
    2740:	ff ef       	ldi	r31, 0xFF	; 255
    2742:	cf 2e       	mov	r12, r31
    2744:	ff ef       	ldi	r31, 0xFF	; 255
    2746:	df 2e       	mov	r13, r31
    2748:	e1 2c       	mov	r14, r1
    274a:	f1 2c       	mov	r15, r1
    274c:	c4 22       	and	r12, r20
    274e:	d5 22       	and	r13, r21
    2750:	e6 22       	and	r14, r22
    2752:	f7 22       	and	r15, r23
    2754:	2b 01       	movw	r4, r22
    2756:	66 24       	eor	r6, r6
    2758:	77 24       	eor	r7, r7
    275a:	89 a4       	lds	r24, 0xa9
    275c:	9a a4       	lds	r25, 0xaa
    275e:	ab a4       	lds	r26, 0xab
    2760:	bc a4       	lds	r27, 0xac
    2762:	0f ef       	ldi	r16, 0xFF	; 255
    2764:	1f ef       	ldi	r17, 0xFF	; 255
    2766:	20 e0       	ldi	r18, 0x00	; 0
    2768:	30 e0       	ldi	r19, 0x00	; 0
    276a:	80 22       	and	r8, r16
    276c:	91 22       	and	r9, r17
    276e:	a2 22       	and	r10, r18
    2770:	b3 22       	and	r11, r19
    2772:	29 a5       	lds	r18, 0x69
    2774:	3a a5       	lds	r19, 0x6a
    2776:	4b a5       	lds	r20, 0x6b
    2778:	5c a5       	lds	r21, 0x6c
    277a:	8a 01       	movw	r16, r20
    277c:	22 27       	eor	r18, r18
    277e:	33 27       	eor	r19, r19
    2780:	0d a3       	lds	r16, 0x5d
    2782:	1e a3       	lds	r17, 0x5e
    2784:	2f a3       	lds	r18, 0x5f
    2786:	38 a7       	lds	r19, 0x78
    2788:	c7 01       	movw	r24, r14
    278a:	b6 01       	movw	r22, r12
    278c:	a5 01       	movw	r20, r10
    278e:	94 01       	movw	r18, r8
    2790:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    2794:	6d a7       	lds	r22, 0x7d
    2796:	7e a7       	lds	r23, 0x7e
    2798:	8f a7       	lds	r24, 0x7f
    279a:	98 ab       	sts	0x58, r25
    279c:	c7 01       	movw	r24, r14
    279e:	b6 01       	movw	r22, r12
    27a0:	2d a1       	lds	r18, 0x4d
    27a2:	3e a1       	lds	r19, 0x4e
    27a4:	4f a1       	lds	r20, 0x4f
    27a6:	58 a5       	lds	r21, 0x68
    27a8:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    27ac:	6b 01       	movw	r12, r22
    27ae:	7c 01       	movw	r14, r24
    27b0:	c3 01       	movw	r24, r6
    27b2:	b2 01       	movw	r22, r4
    27b4:	a5 01       	movw	r20, r10
    27b6:	94 01       	movw	r18, r8
    27b8:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    27bc:	4b 01       	movw	r8, r22
    27be:	5c 01       	movw	r10, r24
    27c0:	c3 01       	movw	r24, r6
    27c2:	b2 01       	movw	r22, r4
    27c4:	2d a1       	lds	r18, 0x4d
    27c6:	3e a1       	lds	r19, 0x4e
    27c8:	4f a1       	lds	r20, 0x4f
    27ca:	58 a5       	lds	r21, 0x68
    27cc:	0e 94 ad 14 	call	0x295a	; 0x295a <__mulsi3>
    27d0:	ab 01       	movw	r20, r22
    27d2:	bc 01       	movw	r22, r24
    27d4:	c8 0c       	add	r12, r8
    27d6:	d9 1c       	adc	r13, r9
    27d8:	ea 1c       	adc	r14, r10
    27da:	fb 1c       	adc	r15, r11
    27dc:	0d a5       	lds	r16, 0x6d
    27de:	1e a5       	lds	r17, 0x6e
    27e0:	2f a5       	lds	r18, 0x6f
    27e2:	38 a9       	sts	0x48, r19
    27e4:	c9 01       	movw	r24, r18
    27e6:	aa 27       	eor	r26, r26
    27e8:	bb 27       	eor	r27, r27
    27ea:	c8 0e       	add	r12, r24
    27ec:	d9 1e       	adc	r13, r25
    27ee:	ea 1e       	adc	r14, r26
    27f0:	fb 1e       	adc	r15, r27
    27f2:	c8 14       	cp	r12, r8
    27f4:	d9 04       	cpc	r13, r9
    27f6:	ea 04       	cpc	r14, r10
    27f8:	fb 04       	cpc	r15, r11
    27fa:	20 f4       	brcc	.+8      	; 0x2804 <__umoddi3+0x9e6>
    27fc:	40 50       	subi	r20, 0x00	; 0
    27fe:	50 40       	sbci	r21, 0x00	; 0
    2800:	6f 4f       	sbci	r22, 0xFF	; 255
    2802:	7f 4f       	sbci	r23, 0xFF	; 255
    2804:	c7 01       	movw	r24, r14
    2806:	aa 27       	eor	r26, r26
    2808:	bb 27       	eor	r27, r27
    280a:	84 0f       	add	r24, r20
    280c:	95 1f       	adc	r25, r21
    280e:	a6 1f       	adc	r26, r22
    2810:	b7 1f       	adc	r27, r23
    2812:	76 01       	movw	r14, r12
    2814:	dd 24       	eor	r13, r13
    2816:	cc 24       	eor	r12, r12
    2818:	4d a5       	lds	r20, 0x6d
    281a:	5e a5       	lds	r21, 0x6e
    281c:	6f a5       	lds	r22, 0x6f
    281e:	78 a9       	sts	0x48, r23
    2820:	60 70       	andi	r22, 0x00	; 0
    2822:	70 70       	andi	r23, 0x00	; 0
    2824:	c4 0e       	add	r12, r20
    2826:	d5 1e       	adc	r13, r21
    2828:	e6 1e       	adc	r14, r22
    282a:	f7 1e       	adc	r15, r23
    282c:	89 a0       	lds	r24, 0x89
    282e:	9a a0       	lds	r25, 0x8a
    2830:	ab a0       	lds	r26, 0x8b
    2832:	bc a0       	lds	r27, 0x8c
    2834:	88 16       	cp	r8, r24
    2836:	99 06       	cpc	r9, r25
    2838:	aa 06       	cpc	r10, r26
    283a:	bb 06       	cpc	r11, r27
    283c:	70 f0       	brcs	.+28     	; 0x285a <__umoddi3+0xa3c>
    283e:	88 15       	cp	r24, r8
    2840:	99 05       	cpc	r25, r9
    2842:	aa 05       	cpc	r26, r10
    2844:	bb 05       	cpc	r27, r11
    2846:	99 f5       	brne	.+102    	; 0x28ae <__umoddi3+0xa90>
    2848:	09 8d       	ldd	r16, Y+25	; 0x19
    284a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    284c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    284e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2850:	0c 15       	cp	r16, r12
    2852:	1d 05       	cpc	r17, r13
    2854:	2e 05       	cpc	r18, r14
    2856:	3f 05       	cpc	r19, r15
    2858:	50 f5       	brcc	.+84     	; 0x28ae <__umoddi3+0xa90>
    285a:	b7 01       	movw	r22, r14
    285c:	a6 01       	movw	r20, r12
    285e:	89 a4       	lds	r24, 0xa9
    2860:	9a a4       	lds	r25, 0xaa
    2862:	ab a4       	lds	r26, 0xab
    2864:	bc a4       	lds	r27, 0xac
    2866:	48 19       	sub	r20, r8
    2868:	59 09       	sbc	r21, r9
    286a:	6a 09       	sbc	r22, r10
    286c:	7b 09       	sbc	r23, r11
    286e:	8c 01       	movw	r16, r24
    2870:	9d 01       	movw	r18, r26
    2872:	8d 8c       	ldd	r8, Y+29	; 0x1d
    2874:	9e 8c       	ldd	r9, Y+30	; 0x1e
    2876:	af 8c       	ldd	r10, Y+31	; 0x1f
    2878:	b8 a0       	lds	r27, 0x88
    287a:	08 19       	sub	r16, r8
    287c:	19 09       	sbc	r17, r9
    287e:	2a 09       	sbc	r18, r10
    2880:	3b 09       	sbc	r19, r11
    2882:	81 e0       	ldi	r24, 0x01	; 1
    2884:	90 e0       	ldi	r25, 0x00	; 0
    2886:	a0 e0       	ldi	r26, 0x00	; 0
    2888:	b0 e0       	ldi	r27, 0x00	; 0
    288a:	c4 16       	cp	r12, r20
    288c:	d5 06       	cpc	r13, r21
    288e:	e6 06       	cpc	r14, r22
    2890:	f7 06       	cpc	r15, r23
    2892:	18 f0       	brcs	.+6      	; 0x289a <__umoddi3+0xa7c>
    2894:	80 e0       	ldi	r24, 0x00	; 0
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	dc 01       	movw	r26, r24
    289a:	58 01       	movw	r10, r16
    289c:	69 01       	movw	r12, r18
    289e:	a8 1a       	sub	r10, r24
    28a0:	b9 0a       	sbc	r11, r25
    28a2:	ca 0a       	sbc	r12, r26
    28a4:	db 0a       	sbc	r13, r27
    28a6:	d6 01       	movw	r26, r12
    28a8:	c5 01       	movw	r24, r10
    28aa:	6a 01       	movw	r12, r20
    28ac:	7b 01       	movw	r14, r22
    28ae:	89 8c       	ldd	r8, Y+25	; 0x19
    28b0:	9a 8c       	ldd	r9, Y+26	; 0x1a
    28b2:	ab 8c       	ldd	r10, Y+27	; 0x1b
    28b4:	bc 8c       	ldd	r11, Y+28	; 0x1c
    28b6:	8c 18       	sub	r8, r12
    28b8:	9d 08       	sbc	r9, r13
    28ba:	ae 08       	sbc	r10, r14
    28bc:	bf 08       	sbc	r11, r15
    28be:	49 a1       	lds	r20, 0x49
    28c0:	5a a1       	lds	r21, 0x4a
    28c2:	6b a1       	lds	r22, 0x4b
    28c4:	7c a1       	lds	r23, 0x4c
    28c6:	48 1b       	sub	r20, r24
    28c8:	59 0b       	sbc	r21, r25
    28ca:	6a 0b       	sbc	r22, r26
    28cc:	7b 0b       	sbc	r23, r27
    28ce:	81 e0       	ldi	r24, 0x01	; 1
    28d0:	90 e0       	ldi	r25, 0x00	; 0
    28d2:	a0 e0       	ldi	r26, 0x00	; 0
    28d4:	b0 e0       	ldi	r27, 0x00	; 0
    28d6:	c9 8c       	ldd	r12, Y+25	; 0x19
    28d8:	da 8c       	ldd	r13, Y+26	; 0x1a
    28da:	eb 8c       	ldd	r14, Y+27	; 0x1b
    28dc:	fc 8c       	ldd	r15, Y+28	; 0x1c
    28de:	c8 14       	cp	r12, r8
    28e0:	d9 04       	cpc	r13, r9
    28e2:	ea 04       	cpc	r14, r10
    28e4:	fb 04       	cpc	r15, r11
    28e6:	18 f0       	brcs	.+6      	; 0x28ee <__umoddi3+0xad0>
    28e8:	80 e0       	ldi	r24, 0x00	; 0
    28ea:	90 e0       	ldi	r25, 0x00	; 0
    28ec:	dc 01       	movw	r26, r24
    28ee:	48 1b       	sub	r20, r24
    28f0:	59 0b       	sbc	r21, r25
    28f2:	6a 0b       	sbc	r22, r26
    28f4:	7b 0b       	sbc	r23, r27
    28f6:	8a 01       	movw	r16, r20
    28f8:	9b 01       	movw	r18, r22
    28fa:	04 c0       	rjmp	.+8      	; 0x2904 <__umoddi3+0xae6>
    28fc:	00 0f       	add	r16, r16
    28fe:	11 1f       	adc	r17, r17
    2900:	22 1f       	adc	r18, r18
    2902:	33 1f       	adc	r19, r19
    2904:	2a 94       	dec	r2
    2906:	d2 f7       	brpl	.-12     	; 0x28fc <__umoddi3+0xade>
    2908:	03 2c       	mov	r0, r3
    290a:	04 c0       	rjmp	.+8      	; 0x2914 <__umoddi3+0xaf6>
    290c:	b6 94       	lsr	r11
    290e:	a7 94       	ror	r10
    2910:	97 94       	ror	r9
    2912:	87 94       	ror	r8
    2914:	0a 94       	dec	r0
    2916:	d2 f7       	brpl	.-12     	; 0x290c <__umoddi3+0xaee>
    2918:	08 29       	or	r16, r8
    291a:	19 29       	or	r17, r9
    291c:	2a 29       	or	r18, r10
    291e:	3b 29       	or	r19, r11
    2920:	09 83       	std	Y+1, r16	; 0x01
    2922:	1a 83       	std	Y+2, r17	; 0x02
    2924:	2b 83       	std	Y+3, r18	; 0x03
    2926:	3c 83       	std	Y+4, r19	; 0x04
    2928:	6a 01       	movw	r12, r20
    292a:	7b 01       	movw	r14, r22
    292c:	04 c0       	rjmp	.+8      	; 0x2936 <__umoddi3+0xb18>
    292e:	f6 94       	lsr	r15
    2930:	e7 94       	ror	r14
    2932:	d7 94       	ror	r13
    2934:	c7 94       	ror	r12
    2936:	3a 94       	dec	r3
    2938:	d2 f7       	brpl	.-12     	; 0x292e <__umoddi3+0xb10>
    293a:	cd 82       	std	Y+5, r12	; 0x05
    293c:	de 82       	std	Y+6, r13	; 0x06
    293e:	ef 82       	std	Y+7, r14	; 0x07
    2940:	f8 86       	std	Y+8, r15	; 0x08
    2942:	20 2f       	mov	r18, r16
    2944:	3a 81       	ldd	r19, Y+2	; 0x02
    2946:	4b 81       	ldd	r20, Y+3	; 0x03
    2948:	5c 81       	ldd	r21, Y+4	; 0x04
    294a:	6c 2d       	mov	r22, r12
    294c:	7e 81       	ldd	r23, Y+6	; 0x06
    294e:	8f 81       	ldd	r24, Y+7	; 0x07
    2950:	98 85       	ldd	r25, Y+8	; 0x08
    2952:	e4 96       	adiw	r28, 0x34	; 52
    2954:	e2 e1       	ldi	r30, 0x12	; 18
    2956:	0c 94 0a 15 	jmp	0x2a14	; 0x2a14 <__epilogue_restores__>

0000295a <__mulsi3>:
    295a:	62 9f       	mul	r22, r18
    295c:	d0 01       	movw	r26, r0
    295e:	73 9f       	mul	r23, r19
    2960:	f0 01       	movw	r30, r0
    2962:	82 9f       	mul	r24, r18
    2964:	e0 0d       	add	r30, r0
    2966:	f1 1d       	adc	r31, r1
    2968:	64 9f       	mul	r22, r20
    296a:	e0 0d       	add	r30, r0
    296c:	f1 1d       	adc	r31, r1
    296e:	92 9f       	mul	r25, r18
    2970:	f0 0d       	add	r31, r0
    2972:	83 9f       	mul	r24, r19
    2974:	f0 0d       	add	r31, r0
    2976:	74 9f       	mul	r23, r20
    2978:	f0 0d       	add	r31, r0
    297a:	65 9f       	mul	r22, r21
    297c:	f0 0d       	add	r31, r0
    297e:	99 27       	eor	r25, r25
    2980:	72 9f       	mul	r23, r18
    2982:	b0 0d       	add	r27, r0
    2984:	e1 1d       	adc	r30, r1
    2986:	f9 1f       	adc	r31, r25
    2988:	63 9f       	mul	r22, r19
    298a:	b0 0d       	add	r27, r0
    298c:	e1 1d       	adc	r30, r1
    298e:	f9 1f       	adc	r31, r25
    2990:	bd 01       	movw	r22, r26
    2992:	cf 01       	movw	r24, r30
    2994:	11 24       	eor	r1, r1
    2996:	08 95       	ret

00002998 <__udivmodsi4>:
    2998:	a1 e2       	ldi	r26, 0x21	; 33
    299a:	1a 2e       	mov	r1, r26
    299c:	aa 1b       	sub	r26, r26
    299e:	bb 1b       	sub	r27, r27
    29a0:	fd 01       	movw	r30, r26
    29a2:	0d c0       	rjmp	.+26     	; 0x29be <__udivmodsi4_ep>

000029a4 <__udivmodsi4_loop>:
    29a4:	aa 1f       	adc	r26, r26
    29a6:	bb 1f       	adc	r27, r27
    29a8:	ee 1f       	adc	r30, r30
    29aa:	ff 1f       	adc	r31, r31
    29ac:	a2 17       	cp	r26, r18
    29ae:	b3 07       	cpc	r27, r19
    29b0:	e4 07       	cpc	r30, r20
    29b2:	f5 07       	cpc	r31, r21
    29b4:	20 f0       	brcs	.+8      	; 0x29be <__udivmodsi4_ep>
    29b6:	a2 1b       	sub	r26, r18
    29b8:	b3 0b       	sbc	r27, r19
    29ba:	e4 0b       	sbc	r30, r20
    29bc:	f5 0b       	sbc	r31, r21

000029be <__udivmodsi4_ep>:
    29be:	66 1f       	adc	r22, r22
    29c0:	77 1f       	adc	r23, r23
    29c2:	88 1f       	adc	r24, r24
    29c4:	99 1f       	adc	r25, r25
    29c6:	1a 94       	dec	r1
    29c8:	69 f7       	brne	.-38     	; 0x29a4 <__udivmodsi4_loop>
    29ca:	60 95       	com	r22
    29cc:	70 95       	com	r23
    29ce:	80 95       	com	r24
    29d0:	90 95       	com	r25
    29d2:	9b 01       	movw	r18, r22
    29d4:	ac 01       	movw	r20, r24
    29d6:	bd 01       	movw	r22, r26
    29d8:	cf 01       	movw	r24, r30
    29da:	08 95       	ret

000029dc <__prologue_saves__>:
    29dc:	2f 92       	push	r2
    29de:	3f 92       	push	r3
    29e0:	4f 92       	push	r4
    29e2:	5f 92       	push	r5
    29e4:	6f 92       	push	r6
    29e6:	7f 92       	push	r7
    29e8:	8f 92       	push	r8
    29ea:	9f 92       	push	r9
    29ec:	af 92       	push	r10
    29ee:	bf 92       	push	r11
    29f0:	cf 92       	push	r12
    29f2:	df 92       	push	r13
    29f4:	ef 92       	push	r14
    29f6:	ff 92       	push	r15
    29f8:	0f 93       	push	r16
    29fa:	1f 93       	push	r17
    29fc:	cf 93       	push	r28
    29fe:	df 93       	push	r29
    2a00:	cd b7       	in	r28, 0x3d	; 61
    2a02:	de b7       	in	r29, 0x3e	; 62
    2a04:	ca 1b       	sub	r28, r26
    2a06:	db 0b       	sbc	r29, r27
    2a08:	0f b6       	in	r0, 0x3f	; 63
    2a0a:	f8 94       	cli
    2a0c:	de bf       	out	0x3e, r29	; 62
    2a0e:	0f be       	out	0x3f, r0	; 63
    2a10:	cd bf       	out	0x3d, r28	; 61
    2a12:	09 94       	ijmp

00002a14 <__epilogue_restores__>:
    2a14:	2a 88       	ldd	r2, Y+18	; 0x12
    2a16:	39 88       	ldd	r3, Y+17	; 0x11
    2a18:	48 88       	ldd	r4, Y+16	; 0x10
    2a1a:	5f 84       	ldd	r5, Y+15	; 0x0f
    2a1c:	6e 84       	ldd	r6, Y+14	; 0x0e
    2a1e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2a20:	8c 84       	ldd	r8, Y+12	; 0x0c
    2a22:	9b 84       	ldd	r9, Y+11	; 0x0b
    2a24:	aa 84       	ldd	r10, Y+10	; 0x0a
    2a26:	b9 84       	ldd	r11, Y+9	; 0x09
    2a28:	c8 84       	ldd	r12, Y+8	; 0x08
    2a2a:	df 80       	ldd	r13, Y+7	; 0x07
    2a2c:	ee 80       	ldd	r14, Y+6	; 0x06
    2a2e:	fd 80       	ldd	r15, Y+5	; 0x05
    2a30:	0c 81       	ldd	r16, Y+4	; 0x04
    2a32:	1b 81       	ldd	r17, Y+3	; 0x03
    2a34:	aa 81       	ldd	r26, Y+2	; 0x02
    2a36:	b9 81       	ldd	r27, Y+1	; 0x01
    2a38:	ce 0f       	add	r28, r30
    2a3a:	d1 1d       	adc	r29, r1
    2a3c:	0f b6       	in	r0, 0x3f	; 63
    2a3e:	f8 94       	cli
    2a40:	de bf       	out	0x3e, r29	; 62
    2a42:	0f be       	out	0x3f, r0	; 63
    2a44:	cd bf       	out	0x3d, r28	; 61
    2a46:	ed 01       	movw	r28, r26
    2a48:	08 95       	ret

00002a4a <_exit>:
    2a4a:	f8 94       	cli

00002a4c <__stop_program>:
    2a4c:	ff cf       	rjmp	.-2      	; 0x2a4c <__stop_program>
